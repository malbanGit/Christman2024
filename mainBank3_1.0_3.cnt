BANK 3
EQU $00 
EQU $03 CURRENT_BANK
LABEL $C800 Vec_Snd_Shadow
COMMENT_LABEL $C800 Shadow of sound chip registers (15 bytes)
LABEL $C80F Vec_Btn_State
COMMENT_LABEL $C80F Current state of all joystick buttons
LABEL $C810 Vec_Prev_Btns
COMMENT_LABEL $C810 Previous state of all joystick buttons
LABEL $C811 Vec_Buttons
COMMENT_LABEL $C811 Current toggle state of all buttons
LABEL $C812 Vec_Button_1_1
COMMENT_LABEL $C812 Current toggle state of stick 1 button 1
LABEL $C813 Vec_Button_1_2
COMMENT_LABEL $C813 Current toggle state of stick 1 button 2
LABEL $C814 Vec_Button_1_3
COMMENT_LABEL $C814 Current toggle state of stick 1 button 3
LABEL $C815 Vec_Button_1_4
COMMENT_LABEL $C815 Current toggle state of stick 1 button 4
LABEL $C816 Vec_Button_2_1
COMMENT_LABEL $C816 Current toggle state of stick 2 button 1
LABEL $C817 Vec_Button_2_2
COMMENT_LABEL $C817 Current toggle state of stick 2 button 2
LABEL $C818 Vec_Button_2_3
COMMENT_LABEL $C818 Current toggle state of stick 2 button 3
LABEL $C819 Vec_Button_2_4
COMMENT_LABEL $C819 Current toggle state of stick 2 button 4
LABEL $C81A Vec_Joy_Resltn
COMMENT_LABEL $C81A Joystick A/D resolution ($80=min $00=max)
LABEL $C81B Vec_Joy_1_X
COMMENT_LABEL $C81B Joystick 1 left/right
LABEL $C81C Vec_Joy_1_Y
COMMENT_LABEL $C81C Joystick 1 up/down
LABEL $C81D Vec_Joy_2_X
COMMENT_LABEL $C81D Joystick 2 left/right
LABEL $C81E Vec_Joy_2_Y
COMMENT_LABEL $C81E Joystick 2 up/down
LABEL $C81F Vec_Joy_Mux
COMMENT_LABEL $C81F Joystick enable/mux flags (4 bytes)
LABEL $C81F Vec_Joy_Mux_1_X
COMMENT_LABEL $C81F Joystick 1 X enable/mux flag (=1)
LABEL $C820 Vec_Joy_Mux_1_Y
COMMENT_LABEL $C820 Joystick 1 Y enable/mux flag (=3)
LABEL $C821 Vec_Joy_Mux_2_X
COMMENT_LABEL $C821 Joystick 2 X enable/mux flag (=5)
LABEL $C822 Vec_Joy_Mux_2_Y
COMMENT_LABEL $C822 Joystick 2 Y enable/mux flag (=7)
LABEL $C823 Vec_Misc_Count
COMMENT_LABEL $C823 Misc counter/flag byte, zero when not in use
LABEL $C824 Vec_0Ref_Enable
COMMENT_LABEL $C824 Check0Ref enable flag
LABEL $C825 Vec_Loop_Count
COMMENT_LABEL $C825 Loop counter word (incremented in Wait_Recal)
LABEL $C827 Vec_Brightness
COMMENT_LABEL $C827 Default brightness
LABEL $C828 Vec_Dot_Dwell
COMMENT_LABEL $C828 Dot dwell time?
LABEL $C829 Vec_Pattern
COMMENT_LABEL $C829 Dot pattern (bits)
LABEL $C82A Vec_Text_HW
COMMENT_LABEL $C82A Default text height and width
LABEL $C82A Vec_Text_Height
COMMENT_LABEL $C82A Default text height
LABEL $C82B Vec_Text_Width
COMMENT_LABEL $C82B Default text width
LABEL $C82C Vec_Str_Ptr
COMMENT_LABEL $C82C Temporary string pointer for Print_Str
LABEL $C82E Vec_Counters
COMMENT_LABEL $C82E Six bytes of counters
LABEL $C82E Vec_Counter_1
COMMENT_LABEL $C82E First counter byte
LABEL $C82F Vec_Counter_2
COMMENT_LABEL $C82F Second counter byte
LABEL $C830 Vec_Counter_3
COMMENT_LABEL $C830 Third counter byte
LABEL $C831 Vec_Counter_4
COMMENT_LABEL $C831 Fourth counter byte
LABEL $C832 Vec_Counter_5
COMMENT_LABEL $C832 Fifth counter byte
LABEL $C833 Vec_Counter_6
COMMENT_LABEL $C833 Sixth counter byte
LABEL $C834 Vec_RiseRun_Tmp
COMMENT_LABEL $C834 Temp storage word for rise/run
LABEL $C836 Vec_Angle
COMMENT_LABEL $C836 Angle for rise/run and rotation calculations
LABEL $C837 Vec_Run_Index
COMMENT_LABEL $C837 Index pair for run
LABEL $C839 Vec_Rise_Index
COMMENT_LABEL $C839 Index pair for rise
LABEL $C83B Vec_RiseRun_Len
COMMENT_LABEL $C83B length for rise/run
LABEL $C83D Vec_Rfrsh
COMMENT_LABEL $C83D Refresh time (divided by 1.5MHz)
LABEL $C83D Vec_Rfrsh_lo
COMMENT_LABEL $C83D Refresh time low byte
LABEL $C83E Vec_Rfrsh_hi
COMMENT_LABEL $C83E Refresh time high byte
LABEL $C83F Vec_Music_Work
COMMENT_LABEL $C83F Music work buffer (14 bytes, backwards?)
LABEL $C842 Vec_Music_Wk_A
COMMENT_LABEL $C842 register 10
LABEL $C845 Vec_Music_Wk_7
COMMENT_LABEL $C845 register 7
LABEL $C846 Vec_Music_Wk_6
COMMENT_LABEL $C846 register 6
LABEL $C847 Vec_Music_Wk_5
COMMENT_LABEL $C847 register 5
LABEL $C84B Vec_Music_Wk_1
COMMENT_LABEL $C84B register 1
LABEL $C84D Vec_Freq_Table
COMMENT_LABEL $C84D Pointer to note-to-frequency table (normally $FC8D)
LABEL $C84F Vec_Max_Players
COMMENT_LABEL $C84F Maximum number of players for Select_Game
LABEL $C850 Vec_Max_Games
COMMENT_LABEL $C850 Maximum number of games for Select_Game
LABEL $C84F Vec_ADSR_Table
COMMENT_LABEL $C84F Storage for first music header word (ADSR table)
LABEL $C851 Vec_Twang_Table
COMMENT_LABEL $C851 Storage for second music header word ('twang' table)
LABEL $C853 Vec_Music_Ptr
COMMENT_LABEL $C853 Music data pointer
LABEL $C853 Vec_Expl_ChanA
COMMENT_LABEL $C853 Used by Explosion_Snd - bit for first channel used?
LABEL $C854 Vec_Expl_Chans
COMMENT_LABEL $C854 Used by Explosion_Snd - bits for all channels used?
LABEL $C855 Vec_Music_Chan
COMMENT_LABEL $C855 Current sound channel number for Init_Music
LABEL $C856 Vec_Music_Flag
COMMENT_LABEL $C856 Music active flag ($00=off $01=start $80=on)
LABEL $C857 Vec_Duration
COMMENT_LABEL $C857 Duration counter for Init_Music
LABEL $C858 Vec_Music_Twang
COMMENT_LABEL $C858 3 word 'twang' table used by Init_Music
LABEL $C858 Vec_Expl_1
COMMENT_LABEL $C858 Four bytes copied from Explosion_Snd's U-reg parameters
LABEL $C859 Vec_Expl_2
LABEL $C85A Vec_Expl_3
LABEL $C85B Vec_Expl_4
LABEL $C85C Vec_Expl_Chan
COMMENT_LABEL $C85C Used by Explosion_Snd - channel number in use?
LABEL $C85D Vec_Expl_ChanB
COMMENT_LABEL $C85D Used by Explosion_Snd - bit for second channel used?
LABEL $C85E Vec_ADSR_Timers
COMMENT_LABEL $C85E ADSR timers for each sound channel (3 bytes)
LABEL $C861 Vec_Music_Freq
COMMENT_LABEL $C861 Storage for base frequency of each channel (3 words)
LABEL $C867 Vec_Expl_Flag
COMMENT_LABEL $C867 Explosion_Snd initialization flag?
LABEL $C877 Vec_Expl_Timer
COMMENT_LABEL $C877 Used by Explosion_Snd
LABEL $C879 Vec_Num_Players
COMMENT_LABEL $C879 Number of players selected in Select_Game
LABEL $C87A Vec_Num_Game
COMMENT_LABEL $C87A Game number selected in Select_Game
LABEL $C87B Vec_Seed_Ptr
COMMENT_LABEL $C87B Pointer to 3-byte random number seed (=$C87D)
LABEL $C87D Vec_Random_Seed
COMMENT_LABEL $C87D Default 3-byte random number seed
LABEL $CBEA Vec_Default_Stk
COMMENT_LABEL $CBEA Default top-of-stack
LABEL $CBEB Vec_High_Score
COMMENT_LABEL $CBEB High score storage (7 bytes)
LABEL $CBF2 Vec_SWI3_Vector
COMMENT_LABEL $CBF2 SWI2/SWI3 interrupt vector (3 bytes)
LABEL $CBF2 Vec_SWI2_Vector
COMMENT_LABEL $CBF2 SWI2/SWI3 interrupt vector (3 bytes)
LABEL $CBF5 Vec_FIRQ_Vector
COMMENT_LABEL $CBF5 FIRQ interrupt vector (3 bytes)
LABEL $CBF8 Vec_IRQ_Vector
COMMENT_LABEL $CBF8 IRQ interrupt vector (3 bytes)
LABEL $CBFB Vec_SWI_Vector
COMMENT_LABEL $CBFB SWI/NMI interrupt vector (3 bytes)
LABEL $CBFB Vec_NMI_Vector
COMMENT_LABEL $CBFB SWI/NMI interrupt vector (3 bytes)
LABEL $CBFE Vec_Cold_Flag
COMMENT_LABEL $CBFE Cold start flag (warm start if = $7321)
LABEL $D000 VIA_port_b
COMMENT_LABEL $D000 VIA port B data I/O register
LABEL $D001 VIA_port_a
COMMENT_LABEL $D001 VIA port A data I/O register (handshaking)
LABEL $D002 VIA_DDR_b
COMMENT_LABEL $D002 VIA port B data direction register (0=input 1=output)
LABEL $D003 VIA_DDR_a
COMMENT_LABEL $D003 VIA port A data direction register (0=input 1=output)
LABEL $D004 VIA_t1_cnt_lo
COMMENT_LABEL $D004 VIA timer 1 count register lo (scale factor)
LABEL $D005 VIA_t1_cnt_hi
COMMENT_LABEL $D005 VIA timer 1 count register hi
LABEL $D006 VIA_t1_lch_lo
COMMENT_LABEL $D006 VIA timer 1 latch register lo
LABEL $D007 VIA_t1_lch_hi
COMMENT_LABEL $D007 VIA timer 1 latch register hi
LABEL $D008 VIA_t2_lo
COMMENT_LABEL $D008 VIA timer 2 count/latch register lo (refresh)
LABEL $D009 VIA_t2_hi
COMMENT_LABEL $D009 VIA timer 2 count/latch register hi
LABEL $D00A VIA_shift_reg
COMMENT_LABEL $D00A VIA shift register
LABEL $D00B VIA_aux_cntl
COMMENT_LABEL $D00B VIA auxiliary control register
LABEL $D00C VIA_cntl
COMMENT_LABEL $D00C VIA control register
LABEL $D00D VIA_int_flags
COMMENT_LABEL $D00D VIA interrupt flags register
LABEL $D00E VIA_int_enable
COMMENT_LABEL $D00E VIA interrupt enable register
LABEL $D00F VIA_port_a_nohs
COMMENT_LABEL $D00F VIA port A data I/O register (no handshaking)
LABEL $F000 Cold_Start
LABEL $F06C Warm_Start
LABEL $F14C Init_VIA
LABEL $F164 Init_OS_RAM
LABEL $F18B Init_OS
LABEL $F192 Wait_Recal
LABEL $F1A2 Set_Refresh
LABEL $F1AA DP_to_D0
LABEL $F1AF DP_to_C8
LABEL $F1B4 Read_Btns_Mask
LABEL $F1BA Read_Btns
LABEL $F1F5 Joy_Analog
LABEL $F1F8 Joy_Digital
LABEL $F256 Sound_Byte
LABEL $F259 Sound_Byte_x
LABEL $F25B Sound_Byte_raw
LABEL $F272 Clear_Sound
LABEL $F27D Sound_Bytes
LABEL $F284 Sound_Bytes_x
LABEL $F289 Do_Sound
LABEL $F28C Do_Sound_x
LABEL $F29D Intensity_1F
LABEL $F2A1 Intensity_3F
LABEL $F2A5 Intensity_5F
LABEL $F2A9 Intensity_7F
LABEL $F2AB Intensity_a
LABEL $F2BE Dot_ix_b
LABEL $F2C1 Dot_ix
LABEL $F2C3 Dot_d
LABEL $F2C5 Dot_here
LABEL $F2D5 Dot_List
LABEL $F2DE Dot_List_Reset
LABEL $F2E6 Recalibrate
LABEL $F2F2 Moveto_x_7F
LABEL $F2FC Moveto_d_7F
LABEL $F308 Moveto_ix_FF
LABEL $F30C Moveto_ix_7F
LABEL $F30E Moveto_ix_b
LABEL $F310 Moveto_ix
LABEL $F312 Moveto_d
LABEL $F34A Reset0Ref_D0
LABEL $F34F Check0Ref
LABEL $F354 Reset0Ref
LABEL $F35B Reset_Pen
LABEL $F36B Reset0Int
LABEL $F373 Print_Str_hwyx
LABEL $F378 Print_Str_yx
LABEL $F37A Print_Str_d
LABEL $F385 Print_List_hw
LABEL $F38A Print_List
LABEL $F38C Print_List_chk
LABEL $F391 Print_Ships_x
LABEL $F393 Print_Ships
LABEL $F3AD Mov_Draw_VLc_a
COMMENT_LABEL $F3AD count y x y x ...
LABEL $F3B1 Mov_Draw_VL_b
COMMENT_LABEL $F3B1 y x y x ...
LABEL $F3B5 Mov_Draw_VLcs
COMMENT_LABEL $F3B5 count scale y x y x ...
LABEL $F3B7 Mov_Draw_VL_ab
COMMENT_LABEL $F3B7 y x y x ...
LABEL $F3B9 Mov_Draw_VL_a
COMMENT_LABEL $F3B9 y x y x ...
LABEL $F3BC Mov_Draw_VL
COMMENT_LABEL $F3BC y x y x ...
LABEL $F3BE Mov_Draw_VL_d
COMMENT_LABEL $F3BE y x y x ...
LABEL $F3CE Draw_VLc
COMMENT_LABEL $F3CE count y x y x ...
LABEL $F3D2 Draw_VL_b
COMMENT_LABEL $F3D2 y x y x ...
LABEL $F3D6 Draw_VLcs
COMMENT_LABEL $F3D6 count scale y x y x ...
LABEL $F3D8 Draw_VL_ab
COMMENT_LABEL $F3D8 y x y x ...
LABEL $F3DA Draw_VL_a
COMMENT_LABEL $F3DA y x y x ...
LABEL $F3DD Draw_VL
COMMENT_LABEL $F3DD y x y x ...
LABEL $F3DF Draw_Line_d
COMMENT_LABEL $F3DF y x y x ...
LABEL $F404 Draw_VLp_FF
COMMENT_LABEL $F404 pattern y x pattern y x ... $01
LABEL $F408 Draw_VLp_7F
COMMENT_LABEL $F408 pattern y x pattern y x ... $01
LABEL $F40C Draw_VLp_scale
COMMENT_LABEL $F40C scale pattern y x pattern y x ... $01
LABEL $F40E Draw_VLp_b
COMMENT_LABEL $F40E pattern y x pattern y x ... $01
LABEL $F410 Draw_VLp
COMMENT_LABEL $F410 pattern y x pattern y x ... $01
LABEL $F434 Draw_Pat_VL_a
COMMENT_LABEL $F434 y x y x ...
LABEL $F437 Draw_Pat_VL
COMMENT_LABEL $F437 y x y x ...
LABEL $F439 Draw_Pat_VL_d
COMMENT_LABEL $F439 y x y x ...
LABEL $F46E Draw_VL_mode
COMMENT_LABEL $F46E mode y x mode y x ... $01
LABEL $F495 Print_Str
LABEL $F511 Random_3
LABEL $F517 Random
LABEL $F533 Init_Music_Buf
LABEL $F53F Clear_x_b
LABEL $F542 Clear_C8_RAM
COMMENT_LABEL $F542 never used by GCE carts?
LABEL $F545 Clear_x_256
LABEL $F548 Clear_x_d
LABEL $F550 Clear_x_b_80
LABEL $F552 Clear_x_b_a
LABEL $F55A Dec_3_Counters
LABEL $F55E Dec_6_Counters
LABEL $F563 Dec_Counters
LABEL $F56D Delay_3
COMMENT_LABEL $F56D 30 cycles
LABEL $F571 Delay_2
COMMENT_LABEL $F571 25 cycles
LABEL $F575 Delay_1
COMMENT_LABEL $F575 20 cycles
LABEL $F579 Delay_0
COMMENT_LABEL $F579 12 cycles
LABEL $F57A Delay_b
COMMENT_LABEL $F57A 5*B + 10 cycles
LABEL $F57D Delay_RTS
COMMENT_LABEL $F57D 5 cycles
LABEL $F57E Bitmask_a
LABEL $F584 Abs_a_b
LABEL $F58B Abs_b
LABEL $F593 Rise_Run_Angle
LABEL $F5D9 Get_Rise_Idx
LABEL $F5DB Get_Run_Idx
LABEL $F5EF Get_Rise_Run
LABEL $F5FF Rise_Run_X
LABEL $F601 Rise_Run_Y
LABEL $F603 Rise_Run_Len
LABEL $F610 Rot_VL_ab
LABEL $F616 Rot_VL
LABEL $F61F Rot_VL_Mode
LABEL $F62B Rot_VL_M_dft
LABEL $F65B Xform_Run_a
LABEL $F65D Xform_Run
LABEL $F661 Xform_Rise_a
LABEL $F663 Xform_Rise
LABEL $F67F Move_Mem_a_1
LABEL $F683 Move_Mem_a
LABEL $F687 Init_Music_chk
LABEL $F68D Init_Music
LABEL $F692 Init_Music_x
LABEL $F7A9 Select_Game
LABEL $F84F Clear_Score
LABEL $F85E Add_Score_a
LABEL $F87C Add_Score_d
LABEL $F8B7 Strip_Zeros
LABEL $F8C7 Compare_Score
LABEL $F8D8 New_High_Score
LABEL $F8E5 Obj_Will_Hit_u
LABEL $F8F3 Obj_Will_Hit
LABEL $F8FF Obj_Hit
LABEL $F92E Explosion_Snd
LABEL $FF9F Draw_Grid_VL
LABEL $FD0D music1
LABEL $FD1D music2
LABEL $FD81 music3
LABEL $FDD3 music4
LABEL $FE38 music5
LABEL $FE76 music6
LABEL $FEC6 music7
LABEL $FEF8 music8
LABEL $FF26 music9
LABEL $FF44 musica
LABEL $FF62 musicb
LABEL $FF7A musicc
LABEL $FF8F musicd
LABEL $F9F4 Char_Table
LABEL $FBD4 Char_Table_End
EQU $0A DemoListEntry
EQU $00 BANK
COMMENT_LABEL $00 bank demo is in
EQU $02 SUBROUTINE
COMMENT_LABEL $02 subroutine to play demo (one cycle)
EQU $04 INITROUTINE
COMMENT_LABEL $04 init routine to play demo
EQU $06 CYCLES
EQU $08 LISTDATA
EQU $09 Demo
EQU $00 POINTER
COMMENT_LABEL $00 address of demo in list (bank 3)
EQU $02 STATE
COMMENT_LABEL $02 state machine of demo state
EQU $03 COUNTER
COMMENT_LABEL $03 some counter
EQU $04 BRIGHTNESS
COMMENT_LABEL $04 brightness if applicable
EQU $05 SAMPLE_POINTER
COMMENT_LABEL $05 for playing samples, stores the y reg
EQU $05 POS
COMMENT_LABEL $05 Position if applicable
EQU $05 POSY
EQU $06 POSX
EQU $07 DATA
COMMENT_LABEL $07 like a scene
LABEL $01F4 TEN_SECONDS
LABEL $03E8 TWENTY_SECONDS
LABEL $0BB8 ONE_MINUTE
EQU $01 STATE_FADE_IN
EQU $02 STATE_FADE_OUT
EQU $03 STATE_PLAY
EQU $04 STATE_DONE
EQU $00 USE_ENVELOPES
EQU $0B REGS_MAX
EQU $00 INFO_START
EQU $00 BYTE_POS
EQU $02 BIT_POS
EQU $03 CURRENT_DATA_BYTE
EQU $04 CURRENT_REG_BYTE
EQU $05 CURRENT_RLE_COUNTER
EQU $07 REG_PHRASE_MAP
EQU $09 CURRENT_IS_PHRASE
EQU $0B CURRENT_PLACE_IN_PHRASE
EQU $0C PHRASE_DEFINITION_START
EQU $0E REG_USED
EQU $0F CURRENT_PHRASE_LEN
EQU $10 INFO_END
EQU $10 STRUCT_LEN
LABEL $C82E demo1Data
LABEL $C837 random_a
LABEL $C838 random_b
LABEL $C839 random_c
LABEL $C83A random_x
LABEL $C83B bigCounter
LABEL $C83F demo2Data
LABEL $C848 demo3Data
LABEL $C851 demoFlag
LABEL $C852 current_song
LABEL $C853 firstDemoDone
LABEL $C854 demoRunningFlag
LABEL $C855 lastDemoPointer
LABEL $C857 cregister
LABEL $C858 temp
LABEL $C859 temp2
LABEL $C85A temp3
LABEL $C85B calc_coder
LABEL $C85C calc_bits
LABEL $C85D ym_len
LABEL $C85F ym_data_current
LABEL $C861 ym_name
LABEL $C863 ym_regs_used
LABEL $C864 ym_regs_count
LABEL $C865 ym_data_start
LABEL $C915 sample_ram
LABEL $C915 user_ram
LABEL $C915 user_ram_start
LABEL $C915 via_b_start
LABEL $C916 digit_sound_struct
LABEL $C916 digit_is_playing
LABEL $C917 digit_start_pos
LABEL $C919 digit_length
LABEL $C91B digit_looping
LABEL $C91C digit_current_pos
LABEL $C91E digit_end_pos
LABEL $C920 digit_recal_counter
LABEL $C922 digit_sound_struct_end
LABEL $C924 endOfNormalRam
LABEL $01D3 main
EQU $1B jmpBank0_T1
EQU $32 jmpBank1_T1
EQU $49 jmpBank0_Shift
EQU $63 jmpBank1_Shift
EQU $7D jmpBank2
LABEL $008F jmpBank3
LABEL $00A1 jsrBank3to0T1
LABEL $00C9 jsrBank3to0_Shift
LABEL $00F4 jsrBank2to0_T1
LABEL $010C jsrBank2to0_Shift
LABEL $0127 jsrBank1to0
LABEL $0127 jsrBank3to2
LABEL $013A jsrBank0to1
LABEL $013A jsrBank2to3
LABEL $014D jsrBank3to1T1
LABEL $0165 jsrBank3to1_Shift
LABEL $0180 jsrBank2to1T1
LABEL $01A8 jsrBank2to1_Shift
LABEL $01D3 init
LABEL $58AA initAll
LABEL $01D6 mainLoop
LABEL $01F3 button1NotPressed
LABEL $01E3 debounceLoop
LABEL $01F0 debounceDone
LABEL $58FC playDemos
LABEL $01F6 REPLACE_1_2_doBank0Stuff_varFromBank0_1
EQU $0E RocketEmitter
EQU $00 FW_Y_POS
EQU $02 FW_BEHAVIOUR
EQU $04 FW_NEXT_OBJECT
EQU $06 FW_X_POS
EQU $08 FW_Y_VEL
EQU $0A FW_X_VEL
EQU $0C FW_AGE
EQU $0D FW_ZERO_RGAL
EQU $0E VelocityParticle
EQU $0D FW_ZERO
LABEL $C915 PARTICLES_DONE_A
LABEL $C913 PARTICLES_DONE
LABEL $C917 PLIST_COMPARE_ADDRESS
EQU -$04 u_offset1
COMMENT_LABEL -$04 behaviour offset is determined by next structure element
LABEL $C917 tmp1
LABEL $C918 buttonStatus
EQU $32 PARTICLE1_MAX_COUNT
COMMENT_LABEL $32 50 max when using the expensive YM Player
LABEL $C919 plist_empty_head
LABEL $C91B plist_objects_head
LABEL $C91D pobject_list
LABEL $CBD9 pobject_list_end
LABEL $01FE newObject
COMMENT_LABEL $01FE #isfunction
LABEL $0214 cs_done_no
LABEL $0215 destroyPObject
COMMENT_LABEL $0215 #isfunction
LABEL $0223 was_not_first_enem
COMMENT_LABEL $0223 find previous, go thru all objects from first and look where "I" am the next...
LABEL $021C was_first_enem
LABEL $0234 pRemoveDone
LABEL $0227 try_next_enem
LABEL $0230 found_next_switch_enem
LABEL $0244 LF33D4343
EQU $14 PARTICLES_PER_FIRE
LABEL $024A rocketEmitterBehaviour
LABEL $028C explodeRocket
LABEL $027A LF33D4545
LABEL $0281 LF2CC_2_rl
LABEL $0295 contEmit_er
LABEL $0323 noNewParticle3_er
LABEL $0328 velocityPositiveXParticleParticleBehaviour
EQU $04 GRAVITY_Y
EQU $01 GRAVITY_X
LABEL $0343 xStays
LABEL $03A2 shiftValues
LABEL $0391 LF33D5252
LABEL $03BB LF33D5353
LABEL $03C5 LF2CC_vp
EQU $7F MOVE_SCALE
LABEL $03D0 initParticles
LABEL $03FD particleRet
LABEL $03E8 next_list_exentry_155
LABEL $03FE playParticles
LABEL $040C notFinishedStoryboardParticles
LABEL $040F REPLACE_2_2_HappyNewYearSceneData_varFromBank2_1
LABEL $0413 REPLACE_1_2_drawSmartScene_varFromBank2_3
LABEL $04C9 noRLNewEmitter
EQU $06 ParticleBase
EQU $00 P_SCALE
EQU $01 P_ANGLE
EQU $02 BEHAVIOUR_P
EQU $04 NEXT_OBJECT_P
EQU -$04 p_u_offset1
COMMENT_LABEL -$04 behaviour offset is determined by next structure element
LABEL $C915 P_PARTICLES_DONE_A
LABEL $C913 P_PARTICLES_DONE
LABEL $C917 P_PLIST_COMPARE_ADDRESS
LABEL $C917 outerCircle
LABEL $C918 startParticleRAM
EQU $5A P_PARTICLE1_MAX_COUNT
COMMENT_LABEL $5A max with below RAM
EQU $06 P_Emitter
EQU $00 PE_EMITTER_DATA
EQU $02 PE_BEHAVIOUR
EQU $04 PE_NEXT_OBJECT
EQU $06 P_EmitterData
EQU $00 PE_YPOS
EQU $01 PE_XPOS
EQU $02 PE_ECOUNTER_RESET
EQU $03 PE_EDATA
EQU $04 PE_ECOUNTER
EQU $05 PE_EANGLE_INC
EQU $06 P_Particle
EQU $00 PP_SCALE
EQU $01 PP_ANGLE
EQU $02 PP_BEHAVIOUR
EQU $04 PP_NEXT_OBJECT
LABEL $C918 anglechangeCountDown
LABEL $C919 angleChangePointer
LABEL $C91B emitterData1
LABEL $C921 emitterData2
LABEL $C927 emitterData3
LABEL $C92D p_plist_empty_head
LABEL $C92F p_plist_objects_head
LABEL $C931 pCount
LABEL $C932 p_pobject_list
LABEL $CB4E p_pobject_list_end
LABEL $04D2 initParticles2
LABEL $04FA initParticle1
LABEL $04DE playParticles2
LABEL $04EC notFinishedStoryboardParticles2
LABEL $056A playParticle1
LABEL $0599 objectsFinished1
LABEL $050F next_list_exentry_160
EQU $04 EMITT_ANGLE_ADD
EQU $01 EMITT_DELAY
LABEL $07EE buildStationaryEmitter
LABEL $059A angleAddData
LABEL $0590 noAngleChange
LABEL $07EE angleAddDataEnd
LABEL $0582 noAngleReset
LABEL $08DE circleData
LABEL $0888 p_newObject
COMMENT_LABEL $0888 #isfunction
LABEL $07FE noNewEmitter
LABEL $07FF stationaryEmitterBehaviour
LABEL $0826 noNewParticle
LABEL $0824 noNewParticle2
LABEL $082A scaledAngleParticleBehaviour
LABEL $08A2 p_destroyPObject
COMMENT_LABEL $08A2 #isfunction
LABEL $085B LF33D6464
LABEL $0877 LF33D6666
LABEL $087D LF2CC_1
LABEL $08A1 p_cs_done_no
LABEL $08B0 p_was_not_first_enem
COMMENT_LABEL $08B0 find previous, go thru all objects from first and look where "I" am the next...
LABEL $08A9 p_was_first_enem
LABEL $08CE p_pRemoveDone
LABEL $08B4 p_try_next_enem
LABEL $08BD p_found_next_switch_enem
LABEL $08D8 LF33D7070
EQU $04 NO_OF_LANES_SLED
COMMENT_LABEL $04 plus one for ZERO
EQU $00 BEHAVIOUR_NONE
EQU $04 BEHAVIOUR_PAUSE
EQU $08 BEHAVIOUR_ANIMATION_LOOP
EQU $00 ELEMENT_ANIM
EQU $01 ELEMENT_PAUSE
EQU $02 ELEMENT_LIST
EQU $03 ELEMENT_YM
EQU $04 ELEMENT_GOTO
EQU $1B laneData
EQU $00 LANE_CURRENT_ELEMENT
EQU $01 LANE_DELAY_COUNT
EQU $02 LANE_ANIM_COUNT
EQU $03 LANE_ANIM_LOOP
EQU $04 LANE_CURRENT_MOVE_SCALE
EQU $05 LANE_CURRENT_DRAW_SCALE
EQU $06 LANE_SCALE_TO
EQU $07 LANE_SCALE_DELAY
EQU $08 LANE_SCALE_INCREASE
EQU $09 LANE_CURRENT_INTENSITY
EQU $0A LANE_INTENSITY_DELAY
EQU $0B LANE_INTENSITY_TO
EQU $0C LANE_INTENSITY_INCREASE
EQU $0D LANE_CURRENT_POSITION
EQU $0D LANE_CURRENT_POSITION_Y
EQU $0E LANE_CURRENT_POSITION_X
EQU $0F LANE_POS_TO
EQU $0F LANE_POS_Y_TO
EQU $10 LANE_POS_X_TO
EQU $11 LANE_POS_DELAY
EQU $11 LANE_POS_DELAY_Y
EQU $12 LANE_POS_DELAY_X
EQU $13 LANE_POS_INCREASE
EQU $13 LANE_POS_INCREASE_Y
EQU $14 LANE_POS_INCREASE_X
EQU $15 LANE_ELEMENT_COUNT
EQU $17 LANE_DRAW
EQU $19 LANE_ROM_DATA
EQU $1A elementData
EQU $00 ELEMENT_ANIM_LIST
EQU $02 ELEMENT_ANIM_DELAY
EQU $03 ELEMENT_SCALE_FROM
EQU $04 ELEMENT_SCALE_TO
EQU $05 ELEMENT_SCALE_DELAY
EQU $06 ELEMENT_SCALE_INCREASE
EQU $07 ELEMENT_INTENSITY_FROM
EQU $08 ELEMENT_INTENSITY_TO
EQU $09 ELEMENT_INTENSITY_DELAY
EQU $0A ELEMENT_INTENSITY_INCREASE
EQU $0B ELEMENT_POS_FROM
EQU $0B ELEMENT_POS_FROM_Y
EQU $0C ELEMENT_POS_FROM_X
EQU $0D ELEMENT_POS_TO
EQU $0D ELEMENT_POS_TO_Y
EQU $0E ELEMENT_POS_TO_X
EQU $0F ELEMENT_POS_DELAY
EQU $0F ELEMENT_POS_DELAY_Y
EQU $10 ELEMENT_POS_DELAY_X
EQU $11 ELEMENT_POS_INCREASE
EQU $11 ELEMENT_POS_INCREASE_Y
EQU $12 ELEMENT_POS_INCREASE_X
EQU $13 ELEMENT_MOVE_SCALE
EQU $14 ELEMENT_DRAW
EQU $16 ELEMENT_BEHAVIOUR
EQU $17 ELEMENT_END_COUNT
EQU $19 ELEMENT_TYPE
LABEL $C915 laneRAM_SLED
LABEL $C981 roundCounter_SLED
LABEL $0ADE initStoryboardSLED
LABEL $0CDD lane37Data_SLED
LABEL $0B32 initLane
LABEL $0CFB lane38Data_SLED
LABEL $0D19 lane39Data_SLED
LABEL $0B0B playStoryboardSLED
LABEL $0B19 notFinishedStoryboardSLED
LABEL $0B1D doNextLane_SLED
LABEL $0B29 lanesDone_SLED
LABEL $0BA9 doLane
LABEL $0B39 init_element
LABEL $0B8A draw_pause
COMMENT_LABEL $0B8A some direct RTS
LABEL $0B8B initNextElement
LABEL $0B93 not_gotoElement
LABEL $0BA7 not_last_element
LABEL $0BB3 continueWithElement
LABEL $0BDA drawCurrentAnimationFrame
LABEL $0BD8 loopAnim
LABEL $0BF2 noScaleChange
LABEL $0BEE scale_final_not_reached
LABEL $0C0A noIntensityChange
LABEL $0C06 intensity_final_not_reached
LABEL $0C28 noXChange
LABEL $0C22 X_final_not_reached
LABEL $0C44 noYChange
LABEL $0C3F Y_final_not_reached
LABEL $0C53 noIntensity
EQU $07 ZERO_DELAY_AS
COMMENT_LABEL $07 delay 7 counter is exactly 111 cycles delay between zero SETTING and zero unsetting (in moveto_d)
LABEL $0C66 draw_synced_list
LABEL $0C6C sync_as
LABEL $0CDA drawdone_as
LABEL $0C79 zeroLoop_as
LABEL $0C98 LF33D7474
LABEL $0CA0 moveTo_as
LABEL $0CBA nextListEntry_as
LABEL $0CB6 LF33D7777
LABEL $0CD2 setPatternLoop_as
LABEL $0CE1 element_371_SLED
LABEL $0D37 AnimList_65_SLED
LABEL $0CFF element_381_SLED
LABEL $0DF9 AnimList_66_SLED
LABEL $0D1D element_391_SLED
LABEL $0F12 AnimList_67_SLED
EQU $01 BLOW_UP_66_SLED
LABEL $0D3B AnimList_65_SLED_0
EQU $01 BLOW_UP_67_SLED
LABEL $0DFD AnimList_66_SLED_0
EQU $01 BLOW_UP_68_SLED
LABEL $0F16 AnimList_67_SLED_0
EQU $04 NO_OF_LANES_DeerFeed
COMMENT_LABEL $04 plus one for ZERO
LABEL $C915 laneRAM_DeerFeed
LABEL $C981 roundCounter_DeerFeed
LABEL $1019 initStoryboardDeerFeed
LABEL $1070 lane72Data_DeerFeed
LABEL $10E2 lane95Data_DeerFeed
LABEL $1100 lane96Data_DeerFeed
LABEL $1049 playStoryboardDeerFeed
LABEL $1057 notFinishedStoryboardDeerFeed
LABEL $105B doNextLane_DeerFeed
LABEL $1067 lanesDone_DeerFeed
LABEL $107A element_721_DeerFeed
LABEL $1094 element_722_DeerFeed
LABEL $10AE element_723_DeerFeed
LABEL $10C8 element_724_DeerFeed
LABEL $111E AnimList_151_DeerFeed
LABEL $1213 AnimList_152_DeerFeed
LABEL $133B AnimList_153_DeerFeed
LABEL $1409 AnimList_154_DeerFeed
LABEL $10E6 element_951_DeerFeed
LABEL $1513 AnimList_155_DeerFeed
LABEL $1104 element_961_DeerFeed
LABEL $15C6 AnimList_156_DeerFeed
EQU $01 BLOW_UP_152_DeerFeed
LABEL $1122 AnimList_151_DeerFeed_0
EQU $02 BLOW_UP_153_DeerFeed
LABEL $1217 AnimList_152_DeerFeed_0
EQU $01 BLOW_UP_154_DeerFeed
LABEL $133F AnimList_153_DeerFeed_0
EQU $01 BLOW_UP_155_DeerFeed
LABEL $140D AnimList_154_DeerFeed_0
EQU $01 BLOW_UP_156_DeerFeed
LABEL $1517 AnimList_155_DeerFeed_0
EQU $01 BLOW_UP_157_DeerFeed
LABEL $15CA AnimList_156_DeerFeed_0
EQU $03 CAT_ANIM_TIMER
LABEL $0080 CAT_SCALE
EQU $40 CAT_WIDTH
LABEL $C915 catAnimCounter
LABEL $C916 catAnimDelay
LABEL $C917 catPos
LABEL $C917 catPosY
LABEL $C918 catPosX
LABEL $C919 rasterCounter1
LABEL $C91A rasterCounter2
LABEL $C91B rasterCounter3
LABEL $1655 initRasterCat
LABEL $166D playRasterCat
LABEL $16A5 catNoNewAnimStep
LABEL $1687 catNewAnimStepDone
LABEL $171F CatAnimation
LABEL $16BB draw_raster_image
EQU $04 RASTER_ZERO_DELAY
COMMENT_LABEL $04 delay 7 counter is exactly 111 cycles delay between zero SETTING and zero unsetting (in moveto_d)
LABEL $16CC next_rater_line
LABEL $16DC zeroLoop_raster
LABEL $1705 oneShiftOutForward_raster
LABEL $170B dummy1_raster
LABEL $1738 Cat1
LABEL $1940 Cat2
LABEL $1B48 Cat3
LABEL $1D50 Cat4
LABEL $1F58 Cat5
LABEL $2160 Cat6
LABEL $2368 Cat7
LABEL $2570 Cat8
LABEL $2778 Cat9
LABEL $2980 Cat10
LABEL $2B88 Cat11
LABEL $2D90 Cat12
EQU $07 CAT_SPEED
LABEL $2F97 C1_data
EQU $01 USE_COMPILED
LABEL $F30E Moveto_ix_a
EQU $01 MACRO_I
EQU $01 MY_MAKROS_I
LABEL $C915 c_bigCounter
LABEL $C917 simStage
LABEL $C918 last_joy_y
LABEL $C919 last_joy_x
LABEL $C91A yCoarse
LABEL $C91B xCoarse
LABEL $C91C xCoarseCheck
LABEL $C91D yFine
LABEL $C91E xFine
LABEL $C91F currentLevel
LABEL $C921 levelYSize
LABEL $C922 levelXSize
LABEL $C923 displayPosY
LABEL $C924 displayPosX
LABEL $C925 tmp_debug
LABEL $C92B speedy
LABEL $C92C speedx
LABEL $C92D anay
LABEL $C92E anax
LABEL $C92F counter0
LABEL $C930 counter1
LABEL $C931 counter2
LABEL $C932 counter3
LABEL $C933 counter4
LABEL $C934 counter5
LABEL $C935 counter6
LABEL $C936 counter7
LABEL $C937 animationDelay
LABEL $C938 nextDisplayPos
LABEL $C938 nextDisplayPosY
LABEL $C939 nextDisplayPosX
LABEL $C93A endVerticalcompare
LABEL $C93B divide_tmp
LABEL $C93D jtmp1
LABEL $C93F v0
LABEL $C93F y0
LABEL $C940 x0
LABEL $C941 v1
LABEL $C941 y1
LABEL $C942 x1
LABEL $C943 v2
LABEL $C943 y2
LABEL $C944 x2
EQU $06 CLIP_VECTORS
EQU $00 _pat1
EQU $01 _y1
EQU $02 _x1
EQU $03 _pat2
EQU $04 _y2
EQU $05 _x2
LABEL $C945 scrollReset
LABEL $C946 neggi
LABEL $C947 clip_test
LABEL $C949 clip_line_counter
LABEL $C94A clip_counter
LABEL $C94C clip_pattern
LABEL $C94E firstVector
LABEL $C94F BORDER
LABEL $C951 is_first_letter
LABEL $C952 do_another_letter
LABEL $C953 topclip
LABEL $C953 bottomclip
LABEL $C955 rightclip
LABEL $C955 leftclip
LABEL $C957 current_type
LABEL $C958 verticalBuffer
LABEL $C959 horizontalLeftBuffer
LABEL $C95A horizontalRightBuffer
LABEL $C95B clipped_vector_vertical_type
LABEL $C95C clipped_vector_vertical
LABEL $C998 clipped_vector_left
LABEL $C9D4 clipped_vector_final
LABEL $C9D4 clipped_vector_right
LABEL $CA10 clip_end
EQU $7F VERTICAL_MAX
EQU -$7F VERTICAL_MIN
EQU $7F HORIZONTAL_MAX
EQU -$7F HORIZONTAL_MIN
EQU $64 SCALE_MOVE
EQU $0B SCALE_VLIST
EQU $0C FULL_TILES_HORIZONTAL
EQU $0C FULL_TILES_VERTICAL
LABEL $00FE GRID_HEIGHT
LABEL $00FE GRID_WIDTH
EQU $0E ALL_TILES_HORIZONTAL
COMMENT_LABEL $0E scrolling allows on each side a partial tile
EQU $0E ALL_TILES_VERTICAL
COMMENT_LABEL $0E scrolling allows on each side a partial tile
EQU $12 TILE_WIDTH
EQU $12 TILE_HEIGHT
EQU $07 STEP_HORIZONTAL_TILE_IN_PIXEL
EQU $07 STEP_VERTICAL_TILE_IN_PIXEL
EQU $6C START_POS_VERTICAL
EQU -$6C START_POS_HORIZONTAL
LABEL $6C94 START_POS
EQU -$6C END_POS_VERTICAL
EQU $6C END_POS_HORIZONTAL
EQU -$7E END_POS_VERTICAL_TEST
EQU $7E END_POS_HORIZONTAL_TEST
EQU $12 FINE_MAX_VERTICAL
EQU $12 FINE_MAX_HORIZONTAL
EQU $00 TYPE_SIMPLE
COMMENT_LABEL $00 can do simple clipping
EQU $01 TYPE_EXPONENTIAL
COMMENT_LABEL $01 no easy clipping
EQU $02 TYPE_CONTINUE_RESET
COMMENT_LABEL $02 if = continue is possible after this tile, position is = to next start point
EQU $04 TYPE_CONTINUE_HERE
COMMENT_LABEL $04 if = continue is possible, leaving at some arbitrary point
EQU $08 TYPE_DOUBLE_SCALE
COMMENT_LABEL $08 if = continue is possible, leaving at some arbitrary point
EQU $10 TYPE_QUAD_SCALE
COMMENT_LABEL $10 if = continue is possible, leaving at some arbitrary point
LABEL $3061 initJumper
LABEL $4001 level0
LABEL $30A9 playJumper
LABEL $30B7 notFinishedJumper
LABEL $30D4 counter4Ok
LABEL $316B handleMove
LABEL $39BC displayFixedWorld_Clipped
LABEL $30E5 simAnalag
LABEL $311F simStages
LABEL $3103 normalStage
LABEL $3116 keepStage
LABEL $322C query_joystick_analog
LABEL $31CC moveXDoneComplete
LABEL $31A6 moveLeft
LABEL $317E moveRight
LABEL $31C3 moveXDone
LABEL $322B moveYDoneComplete
LABEL $31F6 moveDown
LABEL $31D9 moveUp
LABEL $321E moveYDone
LABEL $3253 xpositive
LABEL $325E no_64x
LABEL $328A xdone
LABEL $3269 no_32x
LABEL $3274 no_16x
LABEL $327F no_8x
LABEL $328A no_4x
LABEL $3290 ypositive
LABEL $329B no_64y
LABEL $32C7 ydone
LABEL $32A6 no_32y
LABEL $32B1 no_16y
LABEL $32BC no_8y
LABEL $32C7 no_4y
LABEL $32C8 CALC_P2
LABEL $32E0 is_pl12
LABEL $332B div_d_642
LABEL $338D div_d_322
LABEL $3351 div_d_162
LABEL $3365 div_d_82
LABEL $3379 div_d_42
LABEL $32F8 div_d_1282
LABEL $3301 is_pl2_1282
LABEL $3309 is_pl3_1282
LABEL $3320 no_neggi1_1282
LABEL $33B7 end_macro2
LABEL $3334 is_pl22
LABEL $333C is_pl32
LABEL $3347 no_neggi12
LABEL $335A is_pl42
LABEL $3362 is_pl52
LABEL $33A1 enter_div322
LABEL $336E is_pl482
LABEL $3376 is_pl582
LABEL $33A3 enter_div3282
LABEL $3382 is_pl442
LABEL $338A is_pl542
LABEL $33A5 enter_div3242
LABEL $3396 is_pl62
LABEL $339E is_pl72
LABEL $33AF no_neggi2
LABEL $33B8 CALC_P2_exact
LABEL $33D0 is_pl18
LABEL $33DC is_pl2_1288
LABEL $33E4 is_pl3_1288
LABEL $33E5 divStart
LABEL $340C divide_by_zero9
LABEL $3404 divide_next9
LABEL $33F6 divide_next19
LABEL $33FE divide_by_zero19
LABEL $340F divide_end9
LABEL $340F divEnd
LABEL $341F no_neggi1_1288
LABEL $3427 end_macro8
EQU $00 SIMPLE
COMMENT_LABEL $00 #noDoubleWarn
LABEL $3428 clip_vlp_nsleft
LABEL $3434 nextVector_nsleft10
LABEL $349F done_nsleft10
LABEL $3476 negativeAdd_nsleft10
LABEL $343F positiveAdd_nsleft10
LABEL $3468 addCompleteInvisible_nsleft10
LABEL $346E addCompleteVisible_nsleft10
EQU $00 EXPONENT
COMMENT_LABEL $00 #noDoubleWarn
LABEL $34A2 clip_vlp_p2_left
LABEL $34AE nextVector_nsleft13
LABEL $3510 done_nsleft13
LABEL $34EF negativeAdd_nsleft13
LABEL $34BA positiveAdd_nsleft13
LABEL $34DB addCompleteInvisible_nsleft13
LABEL $34E4 addCompleteVisible_nsleft13
EQU $00 EXACT
COMMENT_LABEL $00 #noDoubleWarn
LABEL $3513 clip_vlp_pExact_left
LABEL $351F nextVector_nsleft16
LABEL $3581 done_nsleft16
LABEL $3560 negativeAdd_nsleft16
LABEL $352B positiveAdd_nsleft16
LABEL $354C addCompleteInvisible_nsleft16
LABEL $3555 addCompleteVisible_nsleft16
LABEL $3584 clip_vlp_nsright
LABEL $3592 nextVector_nsright19
LABEL $35FD done_nsright19
LABEL $35D4 negativeAdd_nsright19
LABEL $359D positiveAdd_nsright19
LABEL $35CC addCompleteVisible_nsright19
LABEL $35C6 addCompleteInvisible_nsright19
LABEL $3600 clip_vlp_p2_right
LABEL $360E nextVector_nsright22
LABEL $3670 done_nsright22
LABEL $364F negativeAdd_nsright22
LABEL $361A positiveAdd_nsright22
LABEL $3644 addCompleteVisible_nsright22
LABEL $363B addCompleteInvisible_nsright22
LABEL $3673 clip_vlp_pExact_right
LABEL $3681 nextVector_nsright25
LABEL $36E3 done_nsright25
LABEL $36C2 negativeAdd_nsright25
LABEL $368D positiveAdd_nsright25
LABEL $36B7 addCompleteVisible_nsright25
LABEL $36AE addCompleteInvisible_nsright25
LABEL $36E6 CALC_P2_y
LABEL $36FE is_pl128
LABEL $3749 div_d_6428
LABEL $37AB div_d_3228
LABEL $376F div_d_1628
LABEL $3783 div_d_828
LABEL $3797 div_d_428
LABEL $3716 div_d_12828
LABEL $371F is_pl2_12828
LABEL $3727 is_pl3_12828
LABEL $373E no_neggi1_12828
LABEL $37D5 end_macro28
LABEL $3752 is_pl228
LABEL $375A is_pl328
LABEL $3765 no_neggi128
LABEL $3778 is_pl428
LABEL $3780 is_pl528
LABEL $37BF enter_div3228
LABEL $378C is_pl4828
LABEL $3794 is_pl5828
LABEL $37C1 enter_div32828
LABEL $37A0 is_pl4428
LABEL $37A8 is_pl5428
LABEL $37C3 enter_div32428
LABEL $37B4 is_pl628
LABEL $37BC is_pl728
LABEL $37CD no_neggi28
LABEL $37D6 clip_vlp_sbottom
LABEL $37E2 nextVector_nsbottom34
LABEL $3851 done_nsbottom34
LABEL $3826 negativeAdd_nsbottom34
LABEL $37EF positiveAdd_nsbottom34
LABEL $3818 addCompleteInvisible_nsbottom34
LABEL $381E addCompleteVisible_nsbottom34
LABEL $3854 clip_vlp_p2_bottom
LABEL $3860 nextVector_nsbottom37
LABEL $38C4 done_nsbottom37
LABEL $38A3 negativeAdd_nsbottom37
LABEL $386E positiveAdd_nsbottom37
LABEL $388F addCompleteInvisible_nsbottom37
LABEL $3898 addCompleteVisible_nsbottom37
LABEL $38C7 clip_vlp_stop
LABEL $38D5 nextVector_nstop40
LABEL $3942 done_nstop40
LABEL $3919 negativeAdd_nstop40
LABEL $38E2 positiveAdd_nstop40
LABEL $3911 addCompleteVisible_nstop40
LABEL $390B addCompleteInvisible_nstop40
LABEL $3945 clip_vlp_p2_top
LABEL $3953 nextVector_nstop43
LABEL $39B7 done_nstop43
LABEL $3996 negativeAdd_nstop43
LABEL $3961 positiveAdd_nstop43
LABEL $398B addCompleteVisible_nstop43
LABEL $3982 addCompleteInvisible_nstop43
EQU $05 X_ENTRY_LENGTH
COMMENT_LABEL $05 each x entry has a length of four bytes + one position
LABEL $39BA displaylevelDone
LABEL $4394 lines1
LABEL $3B3D keepLookingCenter
LABEL $39F2 keepLookingTop
LABEL $3B28 lineEndFoundTop
LABEL $3A01 xStartFoundTop
LABEL $39FD xNotEndOfLineFoundTop
LABEL $39FD seekNextTopClippedTileTop
LABEL $3E1D xPosLookup
LABEL $3A40 endTileListLoad49
LABEL $3A61 topBufferUsed
LABEL $3A5B fullClipp_top
LABEL $3A61 easyClipDone_top
LABEL $3A64 noTopClipNeccessary
LABEL $3AC3 noLeftClip_top
LABEL $3A7F fullClipp_left_top
LABEL $3A82 topLeftClipDone_top
LABEL $3A8D LF33D57
LABEL $442D myDraw_VL_mode2
COMMENT_LABEL $442D #isfunction
LABEL $3A99 xRightClip_Top_1tileAdd
LABEL $3AA6 really_right_Top_1tileAdd
LABEL $3B07 multiRightTop_cont
LABEL $3AAE xRightClip_Top_2tileAdd
LABEL $3ABB really_right_Top_2tileAdd
LABEL $3ADC noLeftClip_top_org
LABEL $3AF4 xRightClip_top
LABEL $3ACB addAnotherTileWidth_Top
LABEL $3AE0 displayCont_top
LABEL $3AE8 LF33D61
LABEL $3B04 really_right_top
LABEL $3B13 fullClipp_right_top
LABEL $3B16 easyRightClipDone_top
LABEL $3B21 LF33D68
LABEL $3B2F noTopClipDisplayEntry
LABEL $3B2F nextCenterLine
LABEL $3B37 continueCenterNextLine
LABEL $3B4A lineEndFoundCenter
LABEL $3B66 xStartFoundCenter
COMMENT_LABEL $3B66 here we reach if there is a printable tile
LABEL $3B46 xNotEndOfLineFoundCenter
LABEL $3B46 seekNextCenterTile
LABEL $3CD4 startBottomLine
LABEL $3B59 seekInNextLineCenter
LABEL $3B84 display_center_start
LABEL $3BA3 endTileListLoad72
LABEL $3C35 noLeftClip_center
LABEL $3BC0 startclip_center
LABEL $3C52 displayCont_center
LABEL $3BD5 fullClipp_left_center
LABEL $3BDD xRightClip_center
LABEL $3BEE really_right_center
LABEL $3BF1 multiRightcenter_cont
LABEL $3BFD fullClipp_right_center
LABEL $3C00 easyRightClipDone_center
LABEL $3C0B xRightClip_center_1tileAdd
LABEL $3C18 really_right_center_1tileAdd
LABEL $3C20 xRightClip_center_2tileAdd
LABEL $3C2D really_right_center_2tileAdd
LABEL $3C4E noLeftClip_center_org
LABEL $3C39 extraMultiTileTest_Center
LABEL $3C3D addAnotherTileWidth_Center
LABEL $3C52 seekNextCenterTile_inner
LABEL $3C54 keepLookingCenter_inner
LABEL $3C93 lineEndFoundCenter_inner
LABEL $3C5D xStartFoundCenter_inner
COMMENT_LABEL $3C5D here we reach if there is a printable tile
LABEL $3C82 LF33D81
LABEL $3CB1 goBottom_inner
LABEL $3CC2 goFinished_inner
LABEL $3CB9 LF33D87
LABEL $3CCA LF33D91
LABEL $3CE8 keepLookingBottom
LABEL $3CF7 xStartFoundBottom
LABEL $3CF3 xNotEndOfLineFoundBottom
LABEL $3CF3 seekNextClippedTileBottom
LABEL $3DE4 levelDoneBottom
LABEL $3D3D endTileListLoad95
LABEL $3D5E bottomBufferUsed
LABEL $3D58 fullClipp_bottom
LABEL $3D5E easyClipDone_bottom
LABEL $3DAE noLeftClip_bottom
LABEL $3D7C fullClipp_left_bottom
LABEL $3D7F leftClipDone_bottom
LABEL $3DCB displayCont_bottom
LABEL $3D84 xRightClip_bottom_1tileAdd
LABEL $3D91 really_right_bottom_1tileAdd
LABEL $3DF3 multiRightbottom_cont
LABEL $3D99 xRightClip_bottom_2tileAdd
LABEL $3DA6 really_right_bottom_2tileAdd
LABEL $3DC7 noLeftClip_bottom_org
LABEL $3DDF xRightClip_bottom
LABEL $3DB6 addAnotherTileWidth_bottom
LABEL $3DD3 LF33D103
LABEL $3DF0 really_right_bottom
LABEL $3DFF fullClipp_right_bottom
LABEL $3E02 easyRightClipDone_bottom
LABEL $3E13 LF33D110
EQU $04 BLOCK_SIZE
EQU $7F BLOCK_MAX
EQU $40 BLOCK_HALF
EQU $20 BLOCK_QUARTER
EQU $10 BLOCK_SMALL
EQU $08 BLOCK_MIN
LABEL $3E34 Trippling
LABEL $3E50 openRBlockList
LABEL $3E60 openLRBlockList
LABEL $3E73 openLBlockList
LABEL $3E80 testBlock
LABEL $3E93 Square
LABEL $3EA3 testPattern2
LABEL $3EB6 testPattern3
LABEL $3ECA openLRBlockList_double
LABEL $3ED7 testBlockDiaog
LABEL $3EE4 MultiTileTest
LABEL $3F49 StarFlashing_0
LABEL $3F73 StarFlashing_1
LABEL $3F9D StarFlashing_2
LABEL $3FC7 StarFlashing_3
EQU $08 BLOW_UP
LABEL $3EF2 AnimList_0
LABEL $3F01 AnimList_1
LABEL $3F16 AnimList_2
LABEL $3F28 AnimList_3
LABEL $3F3B StarFlashing
LABEL $3FD7 AnimList
LABEL $3FDF objectsPointers
LABEL $4005 levelCompiled1
LABEL $4005 line1_0
LABEL $400D line1_1
LABEL $401A line1_2
LABEL $401D line1_3
LABEL $4075 line1_4
LABEL $40B4 line1_5
LABEL $40F8 line1_6
LABEL $4123 line1_7
LABEL $4162 line1_8
LABEL $4165 line1_9
LABEL $4168 line1_10
LABEL $416B line1_11
LABEL $416E line1_12
LABEL $4171 line1_13
LABEL $4174 line1_14
LABEL $417C line1_15
LABEL $4198 line1_16
LABEL $41A5 line1_17
LABEL $41C6 line1_18
LABEL $4200 line1_19
LABEL $4217 line1_20
LABEL $426A line1_21
LABEL $429F line1_22
LABEL $42E3 line1_23
LABEL $4322 line1_24
LABEL $4366 line1_25
LABEL $436E line1_26
LABEL $4371 line1_27
LABEL $4374 line1_28
LABEL $437C line1_29
LABEL $437F line1_30
LABEL $4382 line1_31
LABEL $4385 line1_32
LABEL $4388 line1_33
LABEL $438B line1_34
LABEL $438E line1_35
LABEL $4391 line1_36
LABEL $FFFF line1_37
LABEL $43E0 myDraw_VL_mode
COMMENT_LABEL $43E0 #isfunction
LABEL $43E4 next_line
LABEL $4412 move_vl
LABEL $43F2 draw_vl
LABEL $43EA done_vl
LABEL $4431 next_line2
LABEL $4460 move_vl2
LABEL $4443 draw_vl2
LABEL $4437 done_vl2
LABEL $4479 myDraw_VL_mode3
LABEL $447D next_line3
LABEL $44B4 move_vl3
LABEL $4493 draw_vl3
LABEL $4483 done_vl3
LABEL $449E wait_bra_1
LABEL $44BF wait_bra_2
LABEL $44D5 myDraw_VL_mode4
LABEL $4518 move_vl4
LABEL $44EF draw_vl4
LABEL $44DF done_vl4
LABEL $4541 myDraw_VL_mode32
LABEL $457A move_vl32
LABEL $4557 draw_vl32
LABEL $454B done_vl32
LABEL $459B myDraw_VL_mode2_full
COMMENT_LABEL $459B #isfunction
LABEL $45A3 LF33D252
LABEL $45A9 next_line2_full
LABEL $45D8 move_vl2_full
LABEL $45BB draw_vl2_full
LABEL $45AF done_vl2_full
LABEL $45F1 font_5_data_shift_0
LABEL $45F1 font5a_line1
LABEL $464C font5a_line2
EQU $05 FONT_HEIGHT
EQU $5B FONT_LENGTH
LABEL $45D1 FONT_START_A
COMMENT_LABEL $45D1 // space is 1
LABEL $473D FONT_END
LABEL $C915 ma_counter1
LABEL $C916 ma_counter2
LABEL $C917 ma_counter3
LABEL $C918 maState
LABEL $C919 maIntensity
LABEL $C91A linePrinting
LABEL $C91B angleUse
LABEL $C91D angleTmp
LABEL $C91F ySpinOffset
LABEL $C920 stackSafe
LABEL $C922 yTempPos
LABEL $C923 spinCenterScale
LABEL $C924 rotationSpeed
LABEL $C926 alternatingRotation
EQU $60 RA_SCALE_DRAW
EQU $20 RA_SCALE_MOVE
EQU $40 MA_WIDTH
EQU $0A MA_HEIGHT
EQU -$40 MA_XPOS
EQU $7F MA_YPOS
EQU $08 MAX_STEP_WIDTH
EQU $02 STEP_WIDTH
EQU $01 STEP_WIDTH1
EQU $02 INC_ANGLE
EQU $00 MA_STATE_FADE_IN_MALBAN
EQU $01 MA_STATE_FADE_HOLD_MALBAN
EQU $02 MA_STATE_FADE_OUT_MALBAN
EQU $03 MA_STATE_FADE_IN_PRESENTS
EQU $04 MA_STATE_FADE_IN_WHO
LABEL $47B8 IntroInit
LABEL $47DC IntroPlay
LABEL $4921 introlastStage
LABEL $4803 ma_notFadeIn
LABEL $4830 contIntro
LABEL $482E contIntro_5f
LABEL $4817 ma_notHolding
LABEL $482A ma_notFadeOut
LABEL $486C goPresents
LABEL $4958 someText
LABEL $5122 sync_Print_Str_d_16
COMMENT_LABEL $5122 #isfunction
LABEL $4857 MalbanFading
LABEL $51A4 rac_draw_raster_image
LABEL $489E doAlternatingRotation
LABEL $488B rotationspeedReached
LABEL $48F3 printDaString
LABEL $4914 printPresents
LABEL $48BB doAlternate
LABEL $48D9 negativeAlternate
LABEL $48BF positiveAlternate
LABEL $495F someText2
LABEL $5228 displayCenterRotatedString
LABEL $4908 initLastStage
LABEL $4917 REPLACE_2_2_PresentsSceneData_varFromBank2_1
LABEL $491B REPLACE_1_2_drawSmartScene_varFromBank2_55
LABEL $492F introStageNotDone
LABEL $4968 xmas
LABEL $4973 for
LABEL $4996 alex
LABEL $4979 torben
LABEL $4982 volkmar
LABEL $498C daniele
LABEL $499D john
LABEL $49A2 font_16_data_shift_0
LABEL $49A2 font16start_even
LABEL $49A2 l_01e
LABEL $49DE l_02e
LABEL $4A1A l_03e
LABEL $4A56 l_04e
LABEL $4A92 l_05e
LABEL $4ACE l_06e
LABEL $4B0A l_07e
LABEL $4B46 l_08e
LABEL $4B82 l_09e
LABEL $4BBE l_10e
LABEL $4BFA l_11e
LABEL $4C36 l_12e
LABEL $4C72 l_13e
LABEL $4CAE l_14e
LABEL $4CEA l_15e
LABEL $4D26 l_16e
LABEL $4D62 font16start_odd
LABEL $4D62 l_01o
LABEL $4D9E l_02o
LABEL $4DDA l_03o
LABEL $4E16 l_04o
LABEL $4E52 l_05o
LABEL $4E8E l_06o
LABEL $4ECA l_07o
LABEL $4F06 l_08o
LABEL $4F42 l_09o
LABEL $4F7E l_10o
LABEL $4FBA l_11o
LABEL $4FF6 l_12o
LABEL $5032 l_13o
LABEL $506E l_14o
LABEL $50AA l_15o
LABEL $50E6 l_16o
EQU $10 FONT16_HEIGHT
EQU $3C FONT16_LENGTH
LABEL $4982 FONT16_START_A_EVEN
COMMENT_LABEL $4982 // space is 1
LABEL $4D42 FONT16_START_A_ODD
COMMENT_LABEL $4D42 // space is 1
LABEL $4D06 FONT16_END
LABEL $03C0 ODD_EVEN_OFFSET
EQU $02 ZERO_DELAY_P
COMMENT_LABEL $02 delay 7 counter is exactly 111 cycles delay between zero SETTING and zero unsetting (in moveto_d)
LABEL $5122 sync_Print_Str_d_fixed_16
LABEL $5132 next_line_a_16
LABEL $513E zeroLoop_a_16
LABEL $5158 LF33D7979
LABEL $515C Print_Str_a_16
EQU $58 PLAYERONESIZE
COMMENT_LABEL $58 SIZE OF FONT - HORIZONTALLY
LABEL $517E LF4CB_a16
LABEL $5172 LF4C7_a16
LABEL $519B LF50A_a16
EQU $01 ZERO_DELAY
COMMENT_LABEL $01 delay 7 counter is exactly 111 cycles delay between zero SETTING and zero unsetting (in moveto_d)
LABEL $51B5 rac_next_line
LABEL $51C5 rac_zeroLoop
LABEL $51ED rac_m2d
LABEL $5210 rac_oneShiftOutForward
LABEL $5216 rac_dummy1
EQU $50 FONT_LENGTH_BIOS
LABEL $F9D4 FONT_START_BIOS
COMMENT_LABEL $F9D4 // space is 1
LABEL $FBB4 FONT_END_BIOS
EQU $01 USE_LARGE_FONT
EQU $08 STRLEN
LABEL $523A nextRotateStringLine
LABEL $5328 wheelcircleData
LABEL $530A printAngleOffsets
LABEL $5271 movetoWaitLoopstwOffset
LABEL $52B2 movetoWaitLoopstw
LABEL $52E9 startShift380
LABEL $52DC nextChar380
LABEL $5305 stringRotatePrintDone
LABEL $C915 it_stringCounter
LABEL $C916 it_lineCounter
LABEL $C917 it_linePrintOffset
LABEL $C918 it_xlinePrintOffset
LABEL $C919 tmp2_lc
LABEL $C91A tmp3_lc
EQU $35 SCROLLTEXTSIZE
EQU $23 BITMAP_LINES_TITLE
COMMENT_LABEL $23 45 ; if higher, the positioning has 8 bit problems, than the "spacing" (4/8) must be adjusted to fit 8 bit ; 25
EQU $02 SPACE_BETWEEN_LINES
COMMENT_LABEL $02 2
EQU $0C SPACE_BETWEEN_STRINGS
COMMENT_LABEL $0C must be multiplyer of lines
LABEL $5528 printStringList_25_Sync_direct
COMMENT_LABEL $5528 #isfunction
LABEL $552D overstepOtherFontLine2
LABEL $5535 fontPosOk2
LABEL $555B LF33D8282
LABEL $559E continuePrinting83
LABEL $5591 nextOne83
LABEL $55A8 skipWait83
LABEL $55BF decodeChar83
LABEL $55CC repeatTillBreak
LABEL $5643 breakDueTo25Lines
LABEL $5612 nextLineToPrint92
LABEL $560E continueNormalLinePrinting92
LABEL $561B continuePrinting92
LABEL $564E completelyOutOfHere
LABEL $5634 decodeChar92
LABEL $5646 LF33D9494
LABEL $5650 LF33D9595
EQU $42 MAX_STRING_NO_DISPLAY
COMMENT_LABEL $42 64
LABEL $565B initExtro
LABEL $5665 playExtro
LABEL $5665 REPLACE_2_2_BellaSceneData_varFromBank2_1
LABEL $5669 REPLACE_1_2_drawSmartScene_varFromBank2_12
LABEL $56CE IntroTextScrollPointers
LABEL $56C0 noChangeStageScroller
LABEL $56C5 offsetChangeOnly
LABEL $56BD staLineCounter
LABEL $56BA keepStrinGlines
LABEL $56C1 StageScrollerFinished
LABEL $5754 line01a_it
LABEL $5757 line01b_it
LABEL $575A line01_it
LABEL $575D line02_it
LABEL $5760 line03_it
LABEL $5763 line04_it
LABEL $5766 line05_it
LABEL $5769 line06_it
LABEL $576C line07_it
LABEL $5778 line08_it
LABEL $5781 line09_it
LABEL $5784 line10_it
LABEL $5787 line11_it
LABEL $578A line12_it
LABEL $5795 line13_it
LABEL $579D line14_it
LABEL $57A7 line15_it
LABEL $57AA line16_it
LABEL $57AD line17_it
LABEL $57B0 line18_it
LABEL $57B3 line19_it
LABEL $57BD line20_it
LABEL $57C5 line21_it
LABEL $57D0 line22_it
LABEL $57D3 line23_it
LABEL $57D6 line24_it
LABEL $57D9 line25_it
LABEL $57DC line22_ita
LABEL $57DF line23_ita
LABEL $57E2 line24_ita
LABEL $57E5 line25_ita
LABEL $57E8 line26_it
LABEL $57F4 line27_it
LABEL $57FE line28_it
LABEL $5801 line29_it
LABEL $5804 line30_it
LABEL $5807 line31_it
LABEL $580A line32_it
LABEL $5816 line33_it
LABEL $581E line34_it
LABEL $5821 line40_it
LABEL $582A line41_it
LABEL $5835 line52_1_it
LABEL $583F line52_2_it
LABEL $5849 line52_3_it
LABEL $5853 line52ae1_it
LABEL $5856 line52ae2_it
LABEL $5859 line55_it
LABEL $585C line56_it
LABEL $585F line57_it
LABEL $5862 line58_it
LABEL $5865 line59_it
LABEL $5870 line60_it
LABEL $587B line61_it
LABEL $5885 line62_it
LABEL $5888 line63_it
LABEL $588B line64_it
LABEL $588E line65_it
LABEL $5891 line66_it
LABEL $5894 line67_it
LABEL $5897 line68_it
LABEL $589A line69_it
LABEL $589D line70_it
LABEL $58A0 line71_it
LABEL $58A3 line72_it
LABEL $58A6 line73_it
EQU $00 NONE_CHAR
EQU $0A HALF_CHAR
EQU $05 QUAR_CHAR
LABEL $5754 scrollTextsDirect
LABEL $59D8 Demos
COMMENT_LABEL $59D8 of type DemoList
LABEL $58F5 REPLACE_1_2_initBank0_varFromBank0_1
LABEL $5921 runDemos
LABEL $5901 firstDemoIsDone
LABEL $5913 demoPointerGot
LABEL $599E initDemoInX
LABEL $593E runDemo2
LABEL $5979 runOneDemo
LABEL $595B runDemo3
LABEL $5978 demosDone
LABEL $598C runBank3
LABEL $598F runBank2
LABEL $5994 runBank1
LABEL $5999 runBank0
LABEL $59B5 initBank3
LABEL $59BB initBank2
LABEL $59C2 initBank1
LABEL $59C9 initBank0
LABEL $59B4 ret
LABEL $59D0 SampleIntro
COMMENT_LABEL $59D0 of type DemoList
LABEL $59D0 REPLACE_2_2_samplePlay_varFromBank1_1
LABEL $59D0 REPLACE_4_2_sampleInit_varFromBank1_1
LABEL $59D8 REPLACE_2_2_IntroPlay_varFromBank3_11
COMMENT_LABEL $59D8 in largeFont.asm
LABEL $59D8 REPLACE_4_2_IntroInit_varFromBank3_11
LABEL $59E2 REPLACE_2_2_ScenePlay_varFromBank2_11
LABEL $59E2 REPLACE_4_2_SceneInit_varFromBank2_11
LABEL $59E2 REPLACE_8_2_Krippe3SceneData_varFromBank2_11
LABEL $59EC REPLACE_2_2_playStoryboardDeerFeed_varFromBank3_1
LABEL $59EC REPLACE_4_2_initStoryboardDeerFeed_varFromBank3_1
LABEL $59F6 REPLACE_2_2_playRasterCat_varFromBank3_1
LABEL $59F6 REPLACE_4_2_initRasterCat_varFromBank3_1
LABEL $5A00 REPLACE_2_2_ScenePlay_varFromBank2_4
LABEL $5A00 REPLACE_4_2_SceneInit_varFromBank2_4
LABEL $5A00 REPLACE_8_2_MariaJosephSceneData_varFromBank2_4
LABEL $5A0A REPLACE_2_2_playJumper_varFromBank3_1
LABEL $5A0A REPLACE_4_2_initJumper_varFromBank3_1
LABEL $5A14 REPLACE_2_2_ScenePlay_varFromBank2_7
LABEL $5A14 REPLACE_4_2_SceneInit_varFromBank2_7
LABEL $5A14 REPLACE_8_2_KrippeSceneData_varFromBank2_7
LABEL $5A1E REPLACE_2_2_playRasterCat_varFromBank3_11
LABEL $5A1E REPLACE_4_2_initRasterCat_varFromBank3_11
LABEL $5A28 REPLACE_2_2_playStoryboardSLED_varFromBank3_1
LABEL $5A28 REPLACE_4_2_initStoryboardSLED_varFromBank3_1
LABEL $5A32 REPLACE_2_2_ScenePlay_varFromBank2_6
LABEL $5A32 REPLACE_4_2_SceneInit_varFromBank2_6
LABEL $5A32 REPLACE_8_2_Deer2SceneData_varFromBank2_6
LABEL $5A3C REPLACE_2_2_playParticles2_varFromBank3_1
LABEL $5A3C REPLACE_4_2_initParticles2_varFromBank3_1
LABEL $5A46 REPLACE_2_2_playRasterCat_varFromBank3_12
LABEL $5A46 REPLACE_4_2_initRasterCat_varFromBank3_12
LABEL $5A50 REPLACE_2_2_ScenePlay_varFromBank2_2
LABEL $5A50 REPLACE_4_2_SceneInit_varFromBank2_2
LABEL $5A50 REPLACE_8_2_MegaStarSceneData_varFromBank2_2
LABEL $5A5A REPLACE_2_2_playParticles_varFromBank3_1
LABEL $5A5A REPLACE_4_2_initParticles_varFromBank3_1
LABEL $5A64 REPLACE_2_2_ScenePlay_varFromBank2_10
LABEL $5A64 REPLACE_4_2_SceneInit_varFromBank2_10
LABEL $5A64 REPLACE_8_2_WatchingSledSceneData_varFromBank2_10
LABEL $5A6E REPLACE_2_2_playCandles_varFromBank2_1
LABEL $5A6E REPLACE_4_2_initCandles_varFromBank2_1
LABEL $5A78 REPLACE_2_2_playRasterCat_varFromBank3_14
LABEL $5A78 REPLACE_4_2_initRasterCat_varFromBank3_14
LABEL $5A82 REPLACE_2_2_ScenePlay_varFromBank2_3
LABEL $5A82 REPLACE_4_2_SceneInit_varFromBank2_3
LABEL $5A82 REPLACE_8_2_RendeerSceneData_varFromBank2_3
LABEL $5A8C REPLACE_2_2_playFlakes_varFromBank2_1
LABEL $5A8C REPLACE_4_2_initFlakes_varFromBank2_1
LABEL $5A96 REPLACE_2_2_ScenePlay_varFromBank2_9
LABEL $5A96 REPLACE_4_2_SceneInit_varFromBank2_9
LABEL $5A96 REPLACE_8_2_ThingsSceneData_varFromBank2_9
LABEL $5AA0 REPLACE_2_2_playExtro_varFromBank3_1
LABEL $5AA0 REPLACE_4_2_initExtro_varFromBank3_1
LABEL $5AAA REPLACE_2_2_ScenePlay_varFromBank2_5
LABEL $5AAA REPLACE_4_2_SceneInit_varFromBank2_5
LABEL $5AAA REPLACE_8_2_CherubinSceneData_varFromBank2_5
LABEL $5AB4 REPLACE_2_2_ScenePlay_varFromBank2_8
LABEL $5AB4 REPLACE_4_2_SceneInit_varFromBank2_8
LABEL $5AB4 REPLACE_8_2_Krippe2SceneData_varFromBank2_8
LABEL $5ABE REPLACE_2_2_playRasterCat_varFromBank3_13
LABEL $5ABE REPLACE_4_2_initRasterCat_varFromBank3_13
LABEL $5AC8 REPLACE_2_2_samplePlay_varFromBank1_2
LABEL $5AC8 REPLACE_4_2_sampleInit_varFromBank1_2
LABEL $5B5E *
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 all banks start with this!
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 DEFINE SECTION
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 load vectrex bios routine definitions
COMMENT $C880 RAM and defines
COMMENT_LINE $C880 load vectrex bios routine definitions
COMMENT $C880 vectrex function includes
COMMENT_LINE $C880 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C880 this file contains includes for vectrex BIOS functions and variables      ;
COMMENT_LINE $C880 it was written by Bruce Tomlin, slighte changed by Malban                 ;
COMMENT_LINE $C880 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C880 $C839                             ;Pointer to copyright string during startup
COMMENT_LINE $C880 $C83B                             ;High score cold-start flag (=0 if valid)
COMMENT_LINE $C880 $C83C                             ;temp byte
COMMENT_LINE $C880 $C843                             ;        register 9
COMMENT_LINE $C880 $C844                             ;        register 8
COMMENT_LINE $C880 $C848                             ;        register 4
COMMENT_LINE $C880 $C849                             ;        register 3
COMMENT_LINE $C880 $C84A                             ;        register 2
COMMENT_LINE $C880 $C84C                             ;        register 0
COMMENT_LINE $C880 $C85E                             ;Scratch 'score' storage for Display_Option (7 bytes)
COMMENT_LINE $C880 $C868...$C876                             ;Unused?
COMMENT_LINE $C880 $C878                             ;Unused?
COMMENT_LINE $C880 $C880 - $CBEA is user RAM                            ;
COMMENT_LINE $C880 0 sample/hold (0=enable  mux 1=disable mux)
COMMENT_LINE $C880 1 mux sel 0
COMMENT_LINE $C880 2 mux sel 1
COMMENT_LINE $C880 3 sound BC1
COMMENT_LINE $C880 4 sound BDIR
COMMENT_LINE $C880 5 comparator input
COMMENT_LINE $C880 6 external device (slot pin 35) initialized to input
COMMENT_LINE $C880 7 /RAMP
COMMENT_LINE $C880 0 PA latch enable
COMMENT_LINE $C880 1 PB latch enable
COMMENT_LINE $C880 2 \                     110=output to CB2 under control of phase 2 clock
COMMENT_LINE $C880 3  > shift register control     (110 is the only mode used by the Vectrex ROM)
COMMENT_LINE $C880 4 /
COMMENT_LINE $C880 5 0=t2 one shot                 1=t2 free running
COMMENT_LINE $C880 6 0=t1 one shot                 1=t1 free running
COMMENT_LINE $C880 7 0=t1 disable PB7 output       1=t1 enable PB7 output
COMMENT_LINE $C880 0 CA1 control     CA1 -> SW7    0=IRQ on low 1=IRQ on high
COMMENT_LINE $C880 1 \
COMMENT_LINE $C880 2  > CA2 control  CA2 -> /ZERO  110=low 111=high
COMMENT_LINE $C880 3 /
COMMENT_LINE $C880 4 CB1 control     CB1 -> NC     0=IRQ on low 1=IRQ on high
COMMENT_LINE $C880 5 \
COMMENT_LINE $C880 6  > CB2 control  CB2 -> /BLANK 110=low 111=high
COMMENT_LINE $C880 7 /
COMMENT_LINE $C880 bit                             cleared by
COMMENT_LINE $C880 0 CA2 interrupt flag            reading or writing port A I/O
COMMENT_LINE $C880 1 CA1 interrupt flag            reading or writing port A I/O
COMMENT_LINE $C880 2 shift register interrupt flag reading or writing shift register
COMMENT_LINE $C880 3 CB2 interrupt flag            reading or writing port B I/O
COMMENT_LINE $C880 4 CB1 interrupt flag            reading or writing port A I/O
COMMENT_LINE $C880 5 timer 2 interrupt flag        read t2 low or write t2 high
COMMENT_LINE $C880 6 timer 1 interrupt flag        read t1 count low or write t1 high
COMMENT_LINE $C880 7 IRQ status flag               write logic 0 to IER or IFR bit
COMMENT_LINE $C880 0 CA2 interrupt enable
COMMENT_LINE $C880 1 CA1 interrupt enable
COMMENT_LINE $C880 2 shift register interrupt enable
COMMENT_LINE $C880 3 CB2 interrupt enable
COMMENT_LINE $C880 4 CB1 interrupt enable
COMMENT_LINE $C880 5 timer 2 interrupt enable
COMMENT_LINE $C880 6 timer 1 interrupt enable
COMMENT_LINE $C880 7 IER set/clear control
COMMENT_LINE $C880 Rot_VL_dft      EQU     $F637   ;
COMMENT_LINE $C880 Rot_VL_ab       EQU     $F610   ;
COMMENT_LINE $C880 Rot_VL          EQU     $F616   ;
COMMENT_LINE $C880 Rot_VL_Mode_a   EQU     $F61F   ;
COMMENT_LINE $C880 Rot_VL_Mode     EQU     $F62B   ;
COMMENT_LINE $C880 Rot_VL_dft      EQU     $F637   ;
COMMENT $C880 vectrex macro includes
COMMENT_LINE $C880 PC not usable :-)
COMMENT_LINE $C880 cmpx #4
COMMENT_LINE $C880 pshs d,y,x,pc,u,cc;16
COMMENT_LINE $C880 puls d,y,x,pc,u,cc; 16
COMMENT_LINE $C880 pshs y,x,pc,u,d;15
COMMENT_LINE $C880 puls y,x,pc,u,d; 15
COMMENT_LINE $C880 pshs y,x,pc,u,cc;14
COMMENT_LINE $C880 puls y,x,pc,u,cc; 14
COMMENT_LINE $C880 pshs a,x,pc,u,cc;13
COMMENT_LINE $C880 puls a,x,pc,u,cc;13
COMMENT_LINE $C880 pshs x,pc,u,cc;12
COMMENT_LINE $C880 puls x,pc,u,cc;12
COMMENT_LINE $C880 pshs pc,u,d;11
COMMENT_LINE $C880 puls pc,u,d;11
COMMENT_LINE $C880 pshs pc,u,cc;10
COMMENT_LINE $C880 puls pc,u,cc;10
COMMENT_LINE $C880 pshs u,d;9
COMMENT_LINE $C880 puls u,d;9
COMMENT_LINE $C880 pshs u,cc;8
COMMENT_LINE $C880 puls u,cc;8
COMMENT_LINE $C880 pshs u;7
COMMENT_LINE $C880 puls u;7
COMMENT_LINE $C880 pshs cc;6
COMMENT_LINE $C880 puls cc;6
COMMENT_LINE $C880 tfr a,a; 6
COMMENT_LINE $C880 brn 0; 3
COMMENT_LINE $C880 NOP ; 2
COMMENT_LINE $C880 the "massive" stack usage is forbidden -> since stack is rare and
COMMENT_LINE $C880 can overwrite data
COMMENT $0000 wait 2 cycles
COMMENT $0000 wait 3 cycles
COMMENT $0000 wait 6 cycles
COMMENT $0000 wait 12 cycles
COMMENT $0000 wait 14 cycles
COMMENT $0000 wait 16 cycles
COMMENT $0000 wait 18 cycles
COMMENT $0000 wait 20 cycles
COMMENT $0000 wait 22 cycles
COMMENT $0000 wait 24 cycles
COMMENT $0000 wait 26 cycles
COMMENT $0000 wait 28 cycles
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 pretty for optimizing to use a makro :-)
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 pretty for optimizing to use a makro :-)
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 done
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 macro D = D *2
COMMENT $0000 done
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 macro D = D /2
COMMENT $0000 done
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 definition of bank switch macros
COMMENT $0000 Prepare DDR Registers % 1101 1111 1111 1111
COMMENT $0000 all ORB/ORA to output except ORB 5, PB6 goes LOW
COMMENT $0000 A = $01, B = 0
COMMENT $0000 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
COMMENT_LINE $0000 .....
COMMENT $0000 Prepare DDR Registers % 1001 1111 1111 1111
COMMENT $0000 all ORB/ORA to output except ORB 5, PB6 goes LOW
COMMENT $0000 A = $01, B = 0
COMMENT $0000 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
COMMENT_LINE $0000 .....
COMMENT $0000 interrupt DISABLED - clear ALL interrupts to ensure other bank
COMMENT $0000 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
COMMENT_LINE $0000 ensure shift is "normal"
COMMENT $0000 0 = shift,
COMMENT_LINE $0000 .....
COMMENT $0000 interrupt ENABLED
COMMENT $0000 bit 7 = 1, each other "1" sets the IEflag, bit 6 = T1
COMMENT_LINE $0000 and now "trigger a interrupt"
COMMENT $0000 a VERY short T1 timer
COMMENT $0000 start timer
COMMENT $0000 by the time, the macros "leaves" the interrupt is set!
COMMENT_LINE $0000 .....
COMMENT $0000 interrupt ENABLED
COMMENT $0000 ensure that shift can generate interrupt
COMMENT_LINE $0000 for some reason or another, VIA doesn't like a
COMMENT_LINE $0000 std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $0000 (only on a real vectrex, not Vide)
COMMENT $0000 and write 0 to shift (a) and $98 to aux (shift out enable)
COMMENT $0000 bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
COMMENT_LINE $0000 wait 20 cycles till store of aux (these are 23)
COMMENT $0000 12
COMMENT $0000 3
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 macro D = D *2
COMMENT $0000 done
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 macro D = D /2
COMMENT $0000 done
COMMENT $0000 Store intensity in D/A
COMMENT $0000 mux disabled channel 2
COMMENT $0000 mux enabled channel 2
COMMENT $0000 turn off mux
COMMENT $0000 Store Y in D/A register
COMMENT $0000 Blank low, zero high?
COMMENT $0000 Enable mux ; hey dis si "break integratorzero 440"
COMMENT $0000 Clear shift regigster
COMMENT $0000 Disable mux
COMMENT $0000 Store X in D/A register
COMMENT $0000 enable timer
COMMENT_LINE $0000 optimzed, tweaked not perfect... 'MOVE TO D' makro
COMMENT_LINE $0000 *******************************************************************
COMMENT_LINE $0000 ********************** STRUCTRUES *********************************
COMMENT_LINE $0000 *******************************************************************
COMMENT $C880 bank demo is in
COMMENT $C880 subroutine to play demo (one cycle)
COMMENT $C880 init routine to play demo
COMMENT $C880 address of demo in list (bank 3)
COMMENT $C880 state machine of demo state
COMMENT $C880 some counter
COMMENT $C880 brightness if applicable
COMMENT $C880 for playing samples, stores the y reg
COMMENT $C880 Position if applicable
COMMENT $C880 like a scene
COMMENT_LINE $C880 *******************************************************************
COMMENT_LINE $C880 YM
COMMENT_LINE $C880 *******************************************************************
COMMENT_LINE $C880 *******************************************************************
COMMENT_LINE $C880 YM END
COMMENT_LINE $C880 *******************************************************************
COMMENT_LINE $C880 ...
COMMENT_LINE $C880 *******************************************************************
COMMENT_LINE $C880 ********************** CONSTANTS **********************************
COMMENT_LINE $C880 *******************************************************************
COMMENT_LINE $C880 ...
COMMENT_LINE $C880 *******************************************************************
COMMENT_LINE $C880 ********************** RAM ****************************************
COMMENT_LINE $C880 *******************************************************************
COMMENT_LINE $C880 RAM that is "always" the same
COMMENT_LINE $C880 include  "RAMLayoutStatic.asm"
COMMENT_LINE $C880 saving memory, using BIOS MEM
COMMENT $C880 14 bytes available
COMMENT $C82E 9
COMMENT $C837 vars for own "random" - is much better than the internal BIOS one!
COMMENT $C838 see https://www.electro-tech-online.com/threads/ultra-fast-pseudorandom-number-generator-for-8-bit.124249/
COMMENT $C83A c83a
COMMENT $C83B -> not anymore!!! -> 2 byte left for use
COMMENT_LINE $C851 c85d
COMMENT $C851 = to 1 when a demo starts a round, if demo is finished - flag will be 0
COMMENT_LINE $C857 ATTENTION!
COMMENT_LINE $C857 We are not using RANDOM
COMMENT_LINE $C857 Vec_Seed_Ptr        EQU      $C87B                        ;Pointer to 3-byte random number seed (=$C87D)
COMMENT_LINE $C857 Vec_Random_Seed     EQU      $C87D
COMMENT_LINE $C857 *******************************************************************
COMMENT_LINE $C857 YM
COMMENT_LINE $C857 *******************************************************************
COMMENT_LINE $C857 end of "normal" ram - now something the the player
COMMENT_LINE $C915 *******************************************************************
COMMENT_LINE $C915 YM END
COMMENT_LINE $C915 *******************************************************************
COMMENT_LINE $C915 *******************************************************************
COMMENT_LINE $C915 SAMPLE
COMMENT_LINE $C915 *******************************************************************
COMMENT_LINE $C915 sample RAM can be used, when not sample playing...
COMMENT_LINE $C924 *******************************************************************
COMMENT_LINE $C924 SAMPLE END
COMMENT_LINE $C924 *******************************************************************
COMMENT_LINE $C924 ***************************************************************************
COMMENT_LINE $C924 HEADER SECTION
COMMENT_LINE $C924 ***************************************************************************
COMMENT_LINE $C924 The cartridge ROM starts at address 0
COMMENT_LINE $0000 for dissi compatability I leave the header in for now!
COMMENT_LINE $0000 the first few bytes are mandatory, otherwise the BIOS will not load
COMMENT_LINE $0000 the ROM file, and will start MineStorm instead
COMMENT $0000 'g' is copyright sign
COMMENT $000B music from the rom
COMMENT $000D hight, width, rel y, rel x (from 0,0)
COMMENT $0011 some game information, ending with $80
COMMENT $0017 end of game header
COMMENT_LINE $0018 ***************************************************************************
COMMENT_LINE $0018 CODE SECTION
COMMENT_LINE $0018 ***************************************************************************
FORCE_SYMBOL $0018 main
COMMENT_LINE $001B .....................................................
COMMENT $001B bit 7 = 1, each other "1" sets the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $001B
FORCE_SYMBOL $001D VIA_int_enable
COMMENT_LINE $001F and now "trigger a interrupt"
COMMENT $001F a VERY short T1 timer
FORCE_NO_SYMBOL $001F
FORCE_SYMBOL $0021 VIA_t1_cnt_lo
COMMENT $0024 start timer
FORCE_SYMBOL $0024 VIA_t1_cnt_hi
COMMENT $0026 by the time, the macros "leaves" the interrupt is set!
COMMENT $0028 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0028
COMMENT $002A all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $002A VIA_DDR_b
COMMENT $002C A = $01, B = 0
FORCE_NO_SYMBOL $002C
COMMENT $002E ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $002E VIA_port_b
FORCE_NO_SYMBOL $0030
COMMENT_LINE $0032 ...........
COMMENT $0032 bit 7 = 1, each other "1" sets the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0032
FORCE_SYMBOL $0034 VIA_int_enable
COMMENT_LINE $0036 and now "trigger a interrupt"
COMMENT $0036 a VERY short T1 timer
FORCE_NO_SYMBOL $0036
FORCE_SYMBOL $0038 VIA_t1_cnt_lo
COMMENT $003B start timer
FORCE_SYMBOL $003B VIA_t1_cnt_hi
COMMENT $003D by the time, the macros "leaves" the interrupt is set!
COMMENT $003F Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $003F
COMMENT $0041 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0041 VIA_DDR_b
COMMENT $0043 A = $01, B = 0
FORCE_NO_SYMBOL $0043
COMMENT $0045 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0045 VIA_port_b
FORCE_NO_SYMBOL $0047
COMMENT_LINE $0049 ...........
COMMENT $0049 ensure that shift can generate interrupt
FORCE_NO_SYMBOL $0049
COMMENT_LINE $004C for some reason or another, VIA doesn't like a
COMMENT_LINE $004C std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $004C (only on a real vectrex, not Vide)
FORCE_SYMBOL $004C VIA_aux_cntl
COMMENT $004E and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $004E VIA_shift_reg
COMMENT $0050 bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $0050
FORCE_SYMBOL $0052 VIA_int_enable
COMMENT_LINE $0054 wait 20 cycles till store of aux (these are 23)
COMMENT $0054 12
COMMENT $0055 3
FORCE_NO_SYMBOL $0055
FORCE_SYMBOL $0057 VIA_aux_cntl
COMMENT $0059 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0059
COMMENT $005B all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $005B VIA_DDR_b
COMMENT $005D A = $01, B = 0
FORCE_NO_SYMBOL $005D
COMMENT $005F ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $005F VIA_port_b
FORCE_NO_SYMBOL $0061
COMMENT_LINE $0063 ...........
COMMENT $0063 ensure that shift can generate interrupt
FORCE_NO_SYMBOL $0063
COMMENT_LINE $0066 for some reason or another, VIA doesn't like a
COMMENT_LINE $0066 std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $0066 (only on a real vectrex, not Vide)
FORCE_SYMBOL $0066 VIA_aux_cntl
COMMENT $0068 and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $0068 VIA_shift_reg
COMMENT $006A bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $006A
FORCE_SYMBOL $006C VIA_int_enable
COMMENT_LINE $006E wait 20 cycles till store of aux (these are 23)
COMMENT $006E 12
COMMENT $006F 3
FORCE_NO_SYMBOL $006F
FORCE_SYMBOL $0071 VIA_aux_cntl
COMMENT $0073 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $0073
COMMENT $0075 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0075 VIA_DDR_b
COMMENT $0077 A = $01, B = 0
FORCE_NO_SYMBOL $0077
COMMENT $0079 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0079 VIA_port_b
FORCE_NO_SYMBOL $007B
COMMENT_LINE $007D ...........
COMMENT $007D bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $007D
FORCE_SYMBOL $007F VIA_int_enable
COMMENT_LINE $0081 ensure shift is "normal"
COMMENT $0081 0 = shift,
FORCE_NO_SYMBOL $0081
FORCE_SYMBOL $0083 VIA_aux_cntl
COMMENT $0085 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0085
COMMENT $0087 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0087 VIA_DDR_b
COMMENT $0089 A = $01, B = 0
FORCE_NO_SYMBOL $0089
COMMENT $008B ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $008B VIA_port_b
FORCE_NO_SYMBOL $008D
COMMENT_LINE $008F ...........
COMMENT $008F bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $008F
FORCE_SYMBOL $0091 VIA_int_enable
COMMENT_LINE $0093 ensure shift is "normal"
COMMENT $0093 0 = shift,
FORCE_NO_SYMBOL $0093
FORCE_SYMBOL $0095 VIA_aux_cntl
COMMENT $0097 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $0097
COMMENT $0099 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0099 VIA_DDR_b
COMMENT $009B A = $01, B = 0
FORCE_NO_SYMBOL $009B
COMMENT $009D ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $009D VIA_port_b
FORCE_NO_SYMBOL $009F
COMMENT_LINE $00A1 ...........
COMMENT $00A1 bit 7 = 1, each other "1" sets the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $00A1
FORCE_SYMBOL $00A3 VIA_int_enable
COMMENT_LINE $00A5 and now "trigger a interrupt"
COMMENT $00A5 a VERY short T1 timer
FORCE_NO_SYMBOL $00A5
FORCE_SYMBOL $00A7 VIA_t1_cnt_lo
COMMENT $00AA start timer
FORCE_SYMBOL $00AA VIA_t1_cnt_hi
COMMENT $00AC by the time, the macros "leaves" the interrupt is set!
COMMENT $00AE Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $00AE
COMMENT $00B0 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $00B0 VIA_DDR_b
COMMENT $00B2 A = $01, B = 0
FORCE_NO_SYMBOL $00B2
COMMENT $00B4 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $00B4 VIA_port_b
FORCE_NO_SYMBOL $00B6
COMMENT $00B8 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $00B8
COMMENT $00BA all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $00BA VIA_DDR_b
COMMENT $00BC A = $01, B = 0
FORCE_NO_SYMBOL $00BC
COMMENT $00BE ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $00BE VIA_port_b
COMMENT $00C0 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $00C0
FORCE_SYMBOL $00C2 VIA_int_enable
COMMENT_LINE $00C4 ensure shift is "normal"
COMMENT $00C4 0 = shift,
FORCE_NO_SYMBOL $00C4
FORCE_SYMBOL $00C6 VIA_aux_cntl
COMMENT_LINE $00C9 ...........
COMMENT $00C9 ensure that shift can generate interrupt
FORCE_NO_SYMBOL $00C9
COMMENT_LINE $00CC for some reason or another, VIA doesn't like a
COMMENT_LINE $00CC std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $00CC (only on a real vectrex, not Vide)
FORCE_SYMBOL $00CC VIA_aux_cntl
COMMENT $00CE and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $00CE VIA_shift_reg
COMMENT $00D0 bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $00D0
FORCE_SYMBOL $00D2 VIA_int_enable
COMMENT_LINE $00D4 wait 20 cycles till store of aux (these are 23)
COMMENT $00D4 12
COMMENT $00D5 3
FORCE_NO_SYMBOL $00D5
FORCE_SYMBOL $00D7 VIA_aux_cntl
COMMENT $00D9 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $00D9
COMMENT $00DB all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $00DB VIA_DDR_b
COMMENT $00DD A = $01, B = 0
FORCE_NO_SYMBOL $00DD
COMMENT $00DF ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $00DF VIA_port_b
FORCE_NO_SYMBOL $00E1
COMMENT $00E3 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $00E3
COMMENT $00E5 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $00E5 VIA_DDR_b
COMMENT $00E7 A = $01, B = 0
FORCE_NO_SYMBOL $00E7
COMMENT $00E9 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $00E9 VIA_port_b
COMMENT $00EB bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $00EB
FORCE_SYMBOL $00ED VIA_int_enable
COMMENT_LINE $00EF ensure shift is "normal"
COMMENT $00EF 0 = shift,
FORCE_NO_SYMBOL $00EF
FORCE_SYMBOL $00F1 VIA_aux_cntl
COMMENT_LINE $00F4 ...........
COMMENT_LINE $00F4 PB6 stays
COMMENT $00F4 bit 7 = 1, each other "1" sets the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $00F4
FORCE_SYMBOL $00F6 VIA_int_enable
COMMENT_LINE $00F8 and now "trigger a interrupt"
COMMENT $00F8 a VERY short T1 timer
FORCE_NO_SYMBOL $00F8
FORCE_SYMBOL $00FA VIA_t1_cnt_lo
COMMENT $00FD start timer
FORCE_SYMBOL $00FD VIA_t1_cnt_hi
COMMENT $00FF by the time, the macros "leaves" the interrupt is set!
FORCE_NO_SYMBOL $0101
COMMENT $0103 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0103
FORCE_SYMBOL $0105 VIA_int_enable
COMMENT_LINE $0107 ensure shift is "normal"
COMMENT $0107 0 = shift,
FORCE_NO_SYMBOL $0107
FORCE_SYMBOL $0109 VIA_aux_cntl
COMMENT_LINE $010C ...........
COMMENT_LINE $010C PB6 stays
COMMENT $010C ensure that shift can generate interrupt
FORCE_NO_SYMBOL $010C
COMMENT_LINE $010F for some reason or another, VIA doesn't like a
COMMENT_LINE $010F std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $010F (only on a real vectrex, not Vide)
FORCE_SYMBOL $010F VIA_aux_cntl
COMMENT $0111 and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $0111 VIA_shift_reg
COMMENT $0113 bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $0113
FORCE_SYMBOL $0115 VIA_int_enable
COMMENT_LINE $0117 wait 20 cycles till store of aux (these are 23)
COMMENT $0117 12
COMMENT $0118 3
FORCE_NO_SYMBOL $0118
FORCE_SYMBOL $011A VIA_aux_cntl
FORCE_NO_SYMBOL $011C
COMMENT $011E bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $011E
FORCE_SYMBOL $0120 VIA_int_enable
COMMENT_LINE $0122 ensure shift is "normal"
COMMENT $0122 0 = shift,
FORCE_NO_SYMBOL $0122
FORCE_SYMBOL $0124 VIA_aux_cntl
COMMENT_LINE $0127 ...........
COMMENT $0127 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0127
COMMENT $0129 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0129 VIA_DDR_b
COMMENT $012B A = $01, B = 0
FORCE_NO_SYMBOL $012B
COMMENT $012D ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $012D VIA_port_b
FORCE_NO_SYMBOL $012F
COMMENT $0131 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $0131
COMMENT $0133 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0133 VIA_DDR_b
COMMENT $0135 A = $01, B = 0
FORCE_NO_SYMBOL $0135
COMMENT $0137 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0137 VIA_port_b
COMMENT_LINE $013A ...........
COMMENT $013A Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $013A
COMMENT $013C all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $013C VIA_DDR_b
COMMENT $013E A = $01, B = 0
FORCE_NO_SYMBOL $013E
COMMENT $0140 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0140 VIA_port_b
FORCE_NO_SYMBOL $0142
COMMENT $0144 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0144
COMMENT $0146 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0146 VIA_DDR_b
COMMENT $0148 A = $01, B = 0
FORCE_NO_SYMBOL $0148
COMMENT $014A ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $014A VIA_port_b
COMMENT_LINE $014D ...........
COMMENT $014D bit 7 = 1, each other "1" sets the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $014D
FORCE_SYMBOL $014F VIA_int_enable
COMMENT_LINE $0151 and now "trigger a interrupt"
COMMENT $0151 a VERY short T1 timer
FORCE_NO_SYMBOL $0151
FORCE_SYMBOL $0153 VIA_t1_cnt_lo
COMMENT $0156 start timer
FORCE_SYMBOL $0156 VIA_t1_cnt_hi
COMMENT $0158 by the time, the macros "leaves" the interrupt is set!
FORCE_NO_SYMBOL $015A
COMMENT $015C bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $015C
FORCE_SYMBOL $015E VIA_int_enable
COMMENT_LINE $0160 ensure shift is "normal"
COMMENT $0160 0 = shift,
FORCE_NO_SYMBOL $0160
FORCE_SYMBOL $0162 VIA_aux_cntl
COMMENT_LINE $0165 ...........
COMMENT $0165 ensure that shift can generate interrupt
FORCE_NO_SYMBOL $0165
COMMENT_LINE $0168 for some reason or another, VIA doesn't like a
COMMENT_LINE $0168 std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $0168 (only on a real vectrex, not Vide)
FORCE_SYMBOL $0168 VIA_aux_cntl
COMMENT $016A and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $016A VIA_shift_reg
COMMENT $016C bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $016C
FORCE_SYMBOL $016E VIA_int_enable
COMMENT_LINE $0170 wait 20 cycles till store of aux (these are 23)
COMMENT $0170 12
COMMENT $0171 3
FORCE_NO_SYMBOL $0171
FORCE_SYMBOL $0173 VIA_aux_cntl
FORCE_NO_SYMBOL $0175
COMMENT $0177 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0177
FORCE_SYMBOL $0179 VIA_int_enable
COMMENT_LINE $017B ensure shift is "normal"
COMMENT $017B 0 = shift,
FORCE_NO_SYMBOL $017B
FORCE_SYMBOL $017D VIA_aux_cntl
COMMENT_LINE $0180 ...........
COMMENT $0180 bit 7 = 1, each other "1" sets the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0180
FORCE_SYMBOL $0182 VIA_int_enable
COMMENT_LINE $0184 and now "trigger a interrupt"
COMMENT $0184 a VERY short T1 timer
FORCE_NO_SYMBOL $0184
FORCE_SYMBOL $0186 VIA_t1_cnt_lo
COMMENT $0189 start timer
FORCE_SYMBOL $0189 VIA_t1_cnt_hi
COMMENT $018B by the time, the macros "leaves" the interrupt is set!
COMMENT $018D Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $018D
COMMENT $018F all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $018F VIA_DDR_b
COMMENT $0191 A = $01, B = 0
FORCE_NO_SYMBOL $0191
COMMENT $0193 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0193 VIA_port_b
FORCE_NO_SYMBOL $0195
COMMENT $0197 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0197
COMMENT $0199 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0199 VIA_DDR_b
COMMENT $019B A = $01, B = 0
FORCE_NO_SYMBOL $019B
COMMENT $019D ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $019D VIA_port_b
COMMENT $019F bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $019F
FORCE_SYMBOL $01A1 VIA_int_enable
COMMENT_LINE $01A3 ensure shift is "normal"
COMMENT $01A3 0 = shift,
FORCE_NO_SYMBOL $01A3
FORCE_SYMBOL $01A5 VIA_aux_cntl
COMMENT_LINE $01A8 ...........
COMMENT $01A8 ensure that shift can generate interrupt
FORCE_NO_SYMBOL $01A8
COMMENT_LINE $01AB for some reason or another, VIA doesn't like a
COMMENT_LINE $01AB std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $01AB (only on a real vectrex, not Vide)
FORCE_SYMBOL $01AB VIA_aux_cntl
COMMENT $01AD and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $01AD VIA_shift_reg
COMMENT $01AF bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $01AF
FORCE_SYMBOL $01B1 VIA_int_enable
COMMENT_LINE $01B3 wait 20 cycles till store of aux (these are 23)
COMMENT $01B3 12
COMMENT $01B4 3
FORCE_NO_SYMBOL $01B4
FORCE_SYMBOL $01B6 VIA_aux_cntl
COMMENT $01B8 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $01B8
COMMENT $01BA all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $01BA VIA_DDR_b
COMMENT $01BC A = $01, B = 0
FORCE_NO_SYMBOL $01BC
COMMENT $01BE ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $01BE VIA_port_b
FORCE_NO_SYMBOL $01C0
COMMENT $01C2 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $01C2
COMMENT $01C4 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $01C4 VIA_DDR_b
COMMENT $01C6 A = $01, B = 0
FORCE_NO_SYMBOL $01C6
COMMENT $01C8 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $01C8 VIA_port_b
COMMENT $01CA bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $01CA
FORCE_SYMBOL $01CC VIA_int_enable
COMMENT_LINE $01CE ensure shift is "normal"
COMMENT $01CE 0 = shift,
FORCE_NO_SYMBOL $01CE
FORCE_SYMBOL $01D0 VIA_aux_cntl
COMMENT_LINE $01D3 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $01D3 following is needed for VIDE
COMMENT_LINE $01D3 to replace "vars" in this bank with values from the other bank
COMMENT_LINE $01D3 #genVarlist# varFromBank3
COMMENT_LINE $01D3 ***************************************************************************
COMMENT_LINE $01D3 CODE SECTION
COMMENT_LINE $01D3 ***************************************************************************
COMMENT_LINE $01D3 NOTE!
COMMENT_LINE $01D3 the PrintStr_d in the other banks subroutines
COMMENT_LINE $01D3 use BIOS routines, which (inherently) also switch banks!
COMMENT_LINE $01D3 (since they use SHIFT and T1 timer of VIA, and thus also change the Interrupt flag)
COMMENT_LINE $01D3 in this example this is "ok", since the interrupt flags upon
COMMENT_LINE $01D3 entering and exiting the BIOS functions are equal
COMMENT_LINE $01D3 and so they "return" to the correct banks!
FORCE_SYMBOL $01D3 initAll
COMMENT_LINE $01D6 ***************************************************************************
COMMENT_LINE $01D6 ** Main Loop
COMMENT_LINE $01D6 ***************************************************************************
COMMENT $01D6 get button status
FORCE_SYMBOL $01D6 Read_Btns
COMMENT $01D9 Vectrex BIOS recalibration
FORCE_SYMBOL $01D9 Wait_Recal
COMMENT $01DC button pressed - any
FORCE_NO_SYMBOL $01DC
COMMENT $01DF is button 4
FORCE_NO_SYMBOL $01DF
COMMENT $01E3 get button status
FORCE_SYMBOL $01E3 Read_Btns
COMMENT $01E6 Vectrex BIOS recalibration
FORCE_SYMBOL $01E6 Wait_Recal
COMMENT $01E9 button pressed - any
FORCE_NO_SYMBOL $01E9
COMMENT $01EC is button 4
FORCE_NO_SYMBOL $01EC
FORCE_SYMBOL $01F0 demoRunningFlag
FORCE_SYMBOL $01F3 playDemos
FORCE_NO_SYMBOL $01F6
FORCE_SYMBOL $01F9 jsrBank3to0T1
COMMENT_LINE $01FC check button - and skip to next music
COMMENT $01FC and repeat forever
COMMENT_LINE $01FE ------------------------------
COMMENT_LINE $01FE -- VARS
COMMENT_LINE $01FE ------------------------------
COMMENT_LINE $C915 VARS
COMMENT_LINE $C915 RAM
COMMENT_LINE $C915 jump back addresses
COMMENT_LINE $C915 for "last" behaviour routine
COMMENT $C919 if empty these contain a value that points to a RTS, smaller than OBJECT_LIST_COMPARE_ADDRESS
COMMENT $C91B if greater OBJECT_LIST_COMPARE_ADDRESS, than this is a pointer to a RAM location of an Object
COMMENT_LINE $CBD9 ------------------------------
COMMENT_LINE $CBD9 -- END
COMMENT_LINE $CBD9 ------------------------------
COMMENT_LINE $01FE ------------------------------
COMMENT_LINE $01FE -- Macros
COMMENT_LINE $01FE ------------------------------
COMMENT $0000 /BLANK low and /ZERO low
COMMENT $0000 Store Y in D/A register
COMMENT $0000 Blank low, zero high?
COMMENT $0000 Enable mux ; hey dis si "break integratorzero 440"
COMMENT_LINE $0000 STA      <VIA_shift_reg               ;Clear shift regigster
COMMENT $0000 y must be set more than xx cycles on some vectrex
COMMENT $0000 Disable mux
COMMENT $0000 Store X in D/A register
COMMENT $0000 enable timer
COMMENT $0000 explosions jump back to here after all have been rendered
COMMENT_LINE $0000 setup objects
COMMENT_LINE $0000 ------------------------------
COMMENT_LINE $0000 -- Macros End
COMMENT_LINE $0000 ------------------------------
COMMENT_LINE $0000 ------------------------------
COMMENT_LINE $0000 -- object handling
COMMENT_LINE $0000 ------------------------------
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 new list object to U
COMMENT_LINE $0000 destroys d, u
FORCE_SYMBOL $01FE plist_empty_head
FORCE_SYMBOL $0201 PLIST_COMPARE_ADDRESS
COMMENT_LINE $0207 set the new empty head
COMMENT $0207 the next in out empty list will be the new
FORCE_SYMBOL $0207 FW_NEXT_OBJECT
COMMENT $0209 head of our empty list
FORCE_SYMBOL $0209 plist_empty_head
COMMENT_LINE $020C load last of current object list
COMMENT_LINE $020C the old head is always our next
FORCE_SYMBOL $020C plist_objects_head
FORCE_SYMBOL $020F FW_NEXT_OBJECT
COMMENT_LINE $0211 newobject is always head
FORCE_SYMBOL $0211 plist_objects_head
COMMENT_LINE $0215 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0215 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0215 this macro is placed at the end of each possible "remove" exit
COMMENT_LINE $0215 it stores the just removed object at the head of the "empty" list and
COMMENT_LINE $0215 sets up its "next" pointer
COMMENT $0000 set u free, as new free head
COMMENT $0000 load to u the next linked list element
COMMENT_LINE $0215 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0215 in ds+u_offset1 pointer to the object that must be removed
COMMENT_LINE $0215 destroys x, y
COMMENT_LINE $0215 puls from ds the next object behaviour
COMMENT_LINE $0215 this version is called at the end of an explosion called by "behaviours"
COMMENT $0215 x -> pointer object struture (correction of offset)
FORCE_SYMBOL $0215 u_offset1
COMMENT $0217 is it the first?
FORCE_SYMBOL $0217 plist_objects_head
COMMENT $021A no -> jump
COMMENT $021C s pointer to next objext
FORCE_SYMBOL $021C FW_NEXT_OBJECT
COMMENT $021E the next object will be the first
FORCE_SYMBOL $021E plist_objects_head
COMMENT $0223 start at list head
FORCE_SYMBOL $0223 plist_objects_head
COMMENT $0227 am I the next object of the current investigated list element
FORCE_SYMBOL $0227 FW_NEXT_OBJECT
COMMENT $0229 jup -> jump
COMMENT $022B otherwise load the next as new current
FORCE_SYMBOL $022B FW_NEXT_OBJECT
COMMENT $022E and search further
COMMENT $0230 we load "our" next object to s
FORCE_SYMBOL $0230 FW_NEXT_OBJECT
COMMENT $0232 and store our next in the place of our previous next and thus eleminate ourselfs
FORCE_SYMBOL $0232 FW_NEXT_OBJECT
COMMENT $0234 and clean up the empties
COMMENT $0234 set u free, as new free head
FORCE_SYMBOL $0234 plist_empty_head
COMMENT $0238 load to u the next linked list element
FORCE_SYMBOL $0238 FW_NEXT_OBJECT
FORCE_SYMBOL $023B plist_empty_head
COMMENT_LINE $023E do a clean ending - which is usually done at the end of "SmartDraw"
COMMENT_LINE $023E lda      #$7f
COMMENT_LINE $023E STa      <VIA_t1_cnt_lo
FORCE_NO_SYMBOL $023E
COMMENT $0240 /BLANK low and /ZERO low
FORCE_SYMBOL $0240 VIA_cntl
FORCE_NO_SYMBOL $0242
FORCE_SYMBOL $0244 VIA_int_flags
COMMENT $0248 (D = y,x, X = vectorlist)
COMMENT_LINE $024A ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $024A ------------------------------
COMMENT_LINE $024A -- object handling - end
COMMENT_LINE $024A ------------------------------
COMMENT_LINE $024A ------------------------------
COMMENT_LINE $024A -- particle handling - start
COMMENT_LINE $024A ------------------------------
COMMENT_LINE $024A MEGA simple particles and emitters
COMMENT_LINE $024A one object only has 6 byte
COMMENT_LINE $024A thus nearly 140 objects can be created!
COMMENT_LINE $024A the demo runs with abour 135 dots
COMMENT_LINE $024A ***************************************************************************
COMMENT $024C Store Y in D/A register
FORCE_SYMBOL $024C VIA_port_a
COMMENT $024E Blank low, zero high?
FORCE_NO_SYMBOL $024E
FORCE_SYMBOL $0250 VIA_cntl
COMMENT $0253 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $0253 VIA_port_b
COMMENT_LINE $0255 STA      <VIA_shift_reg               ;Clear shift regigster
COMMENT $0255 y must be set more than xx cycles on some vectrex
COMMENT $0256 Disable mux
FORCE_SYMBOL $0256 VIA_port_b
COMMENT $0258 Store X in D/A register
FORCE_SYMBOL $0258 VIA_port_a
COMMENT $025A enable timer
FORCE_SYMBOL $025A VIA_t1_cnt_hi
COMMENT_LINE $025C change coordinates, 16 bit
COMMENT_LINE $025C ypos
COMMENT_LINE $0266 xpos
COMMENT $0274 preload next user stack
COMMENT $0276 really BRIGHT
FORCE_NO_SYMBOL $0276
FORCE_NO_SYMBOL $0278
FORCE_SYMBOL $027A VIA_int_flags
COMMENT $027F Store in VIA shift register
FORCE_SYMBOL $027F VIA_shift_reg
COMMENT $0281 Delay leaving beam in place
COMMENT $0284 Blank beam in VIA shift register
FORCE_SYMBOL $0284 VIA_shift_reg
FORCE_NO_SYMBOL $0286
COMMENT $0288 /BLANK low and /ZERO low
FORCE_SYMBOL $0288 VIA_cntl
COMMENT_LINE $028C ...............................................
FORCE_NO_SYMBOL $028E
FORCE_SYMBOL $0290 PARTICLES_PER_FIRE
FORCE_SYMBOL $0292 tmp1
FORCE_SYMBOL $0295 newObject
FORCE_SYMBOL $0298 PLIST_COMPARE_ADDRESS
COMMENT_LINE $02A0 16 bit position of velocityParticle
FORCE_SYMBOL $02A3 FW_Y_POS
FORCE_SYMBOL $02A7 FW_X_POS
FORCE_SYMBOL $02A9 FW_ZERO
FORCE_SYMBOL $02AC random_x
FORCE_SYMBOL $02AF random_a
FORCE_SYMBOL $02B2 random_b
FORCE_SYMBOL $02B5 random_x
FORCE_SYMBOL $02B8 random_a
FORCE_SYMBOL $02BB random_b
FORCE_SYMBOL $02BE random_b
FORCE_SYMBOL $02C2 random_a
FORCE_SYMBOL $02C5 random_c
FORCE_SYMBOL $02C8 random_c
FORCE_SYMBOL $02CB FW_Y_VEL
FORCE_SYMBOL $02CD random_x
FORCE_SYMBOL $02D0 random_a
FORCE_SYMBOL $02D3 random_b
FORCE_SYMBOL $02D6 random_x
FORCE_SYMBOL $02D9 random_a
FORCE_SYMBOL $02DC random_b
FORCE_SYMBOL $02DF random_b
FORCE_SYMBOL $02E3 random_a
FORCE_SYMBOL $02E6 random_c
FORCE_SYMBOL $02E9 random_c
COMMENT $02EC slightly different FW_AGE
FORCE_NO_SYMBOL $02EC
FORCE_NO_SYMBOL $02EF
FORCE_SYMBOL $02F1 FW_AGE
FORCE_SYMBOL $02F3 random_x
FORCE_SYMBOL $02F6 random_a
FORCE_SYMBOL $02F9 random_b
FORCE_SYMBOL $02FC random_x
FORCE_SYMBOL $02FF random_a
FORCE_SYMBOL $0302 random_b
FORCE_SYMBOL $0305 random_b
FORCE_SYMBOL $0309 random_a
FORCE_SYMBOL $030C random_c
FORCE_SYMBOL $030F random_c
FORCE_SYMBOL $0315 FW_X_VEL
FORCE_SYMBOL $0317 velocityPositiveXParticleParticleBehaviour
FORCE_SYMBOL $031A FW_BEHAVIOUR
FORCE_SYMBOL $031C tmp1
FORCE_SYMBOL $0325 destroyPObject
COMMENT_LINE $0328 ***************************************************************************
COMMENT_LINE $0328 position to
COMMENT $032A Store Y in D/A register
FORCE_SYMBOL $032A VIA_port_a
COMMENT $032C Blank low, zero high?
FORCE_NO_SYMBOL $032C
FORCE_SYMBOL $032E VIA_cntl
COMMENT $0331 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $0331 VIA_port_b
COMMENT_LINE $0333 STA      <VIA_shift_reg               ;Clear shift regigster
COMMENT $0333 y must be set more than xx cycles on some vectrex
COMMENT $0334 Disable mux
FORCE_SYMBOL $0334 VIA_port_b
COMMENT $0336 Store X in D/A register
FORCE_SYMBOL $0336 VIA_port_a
COMMENT $0338 enable timer
FORCE_SYMBOL $0338 VIA_t1_cnt_hi
COMMENT_LINE $033A Thought:
COMMENT_LINE $033A the velocity stuuf needs only be done ONCE per 'rocket', not per particle!
COMMENT_LINE $033A update
COMMENT_LINE $033A x velocity towards 0
FORCE_SYMBOL $033E GRAVITY_X
COMMENT_LINE $0343 xpos
COMMENT_LINE $034B y velocity towards -128
FORCE_SYMBOL $034D GRAVITY_Y
COMMENT_LINE $0350 Hm... no overflow occurs - so don't check... (experimental proof :-) )
COMMENT_LINE $0352 change coordinates, 16 bit
COMMENT_LINE $0352 ypos
COMMENT_LINE $035A aging
FORCE_SYMBOL $0365 shiftValues
COMMENT $036E Store in VIA shift register
FORCE_SYMBOL $036E VIA_shift_reg
COMMENT $0373 Store in VIA shift register
FORCE_SYMBOL $0373 VIA_shift_reg
FORCE_NO_SYMBOL $0376
COMMENT $037D Store Y in D/A register
FORCE_SYMBOL $037D VIA_port_a
COMMENT $037F Blank low, zero high?
FORCE_NO_SYMBOL $037F
FORCE_SYMBOL $0381 VIA_cntl
COMMENT $0384 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $0384 VIA_port_b
COMMENT_LINE $0386 STA      <VIA_shift_reg               ;Clear shift regigster
COMMENT $0386 y must be set more than xx cycles on some vectrex
COMMENT $0387 Disable mux
FORCE_SYMBOL $0387 VIA_port_b
COMMENT $0389 Store X in D/A register
FORCE_SYMBOL $0389 VIA_port_a
COMMENT $038B enable timer
FORCE_SYMBOL $038B VIA_t1_cnt_hi
FORCE_NO_SYMBOL $038F
FORCE_SYMBOL $0391 VIA_int_flags
COMMENT $0395 preload next user stack
COMMENT $0397 Store in VIA shift register
FORCE_SYMBOL $0397 VIA_shift_reg
FORCE_NO_SYMBOL $039A
COMMENT $039C Store in VIA shift register
FORCE_SYMBOL $039C VIA_shift_reg
COMMENT $039E /BLANK low and /ZERO low
FORCE_SYMBOL $039E VIA_cntl
FORCE_NO_SYMBOL $03B9
FORCE_SYMBOL $03BB VIA_int_flags
COMMENT $03C0 Store in VIA shift register
FORCE_SYMBOL $03C0 VIA_shift_reg
COMMENT $03C5 Delay leaving beam in place
COMMENT $03C8 Blank beam in VIA shift register
FORCE_SYMBOL $03C8 VIA_shift_reg
FORCE_NO_SYMBOL $03CA
COMMENT $03CC /BLANK low and /ZERO low
FORCE_SYMBOL $03CC VIA_cntl
COMMENT_LINE $03D0 ------------------------------
COMMENT_LINE $03D0 -- particle handling - end
COMMENT_LINE $03D0 ------------------------------
COMMENT $03D0 ten seconds
FORCE_SYMBOL $03D0 TWENTY_SECONDS
FORCE_SYMBOL $03D3 bigCounter
COMMENT $03D6 explosions jump back to here after all have been rendered
FORCE_SYMBOL $03D6 particleRet
FORCE_SYMBOL $03D9 PARTICLES_DONE_A
COMMENT_LINE $03DC setup objects
FORCE_SYMBOL $03DC PARTICLE1_MAX_COUNT
FORCE_SYMBOL $03DE pobject_list
FORCE_SYMBOL $03E1 plist_empty_head
FORCE_SYMBOL $03E4 PARTICLES_DONE
FORCE_SYMBOL $03E8 VelocityParticle
FORCE_SYMBOL $03EA FW_NEXT_OBJECT
FORCE_NO_SYMBOL $03EC
FORCE_SYMBOL $03F3 FW_NEXT_OBJECT
FORCE_SYMBOL $03F6 plist_objects_head
FORCE_SYMBOL $03FA buttonStatus
FORCE_SYMBOL $03FE bigCounter
FORCE_NO_SYMBOL $0401
FORCE_SYMBOL $0404 bigCounter
FORCE_SYMBOL $0409 demoRunningFlag
FORCE_SYMBOL $040C Intensity_1F
FORCE_NO_SYMBOL $040F
FORCE_NO_SYMBOL $0413
FORCE_SYMBOL $0416 jsrBank3to2
FORCE_SYMBOL $0419 Intensity_7F
FORCE_NO_SYMBOL $041C
FORCE_SYMBOL $041E VIA_t1_cnt_lo
FORCE_SYMBOL $0420 random_x
FORCE_SYMBOL $0423 random_a
FORCE_SYMBOL $0426 random_b
FORCE_SYMBOL $0429 random_x
FORCE_SYMBOL $042C random_a
FORCE_SYMBOL $042F random_b
FORCE_SYMBOL $0432 random_b
FORCE_SYMBOL $0436 random_a
FORCE_SYMBOL $0439 random_c
FORCE_SYMBOL $043C random_c
FORCE_NO_SYMBOL $043F
COMMENT_LINE $0445 TODO
COMMENT_LINE $0445 randomize start of new missile
COMMENT_LINE $0445 Launch a rocket on the press of a button
FORCE_SYMBOL $0445 newObject
FORCE_SYMBOL $0448 PLIST_COMPARE_ADDRESS
FORCE_SYMBOL $044E rocketEmitterBehaviour
FORCE_SYMBOL $0451 FW_BEHAVIOUR
FORCE_NO_SYMBOL $0453
COMMENT $0456 current POS 16 bit
FORCE_SYMBOL $0456 FW_Y_POS
FORCE_NO_SYMBOL $0458
COMMENT $045B current POS
FORCE_SYMBOL $045B FW_X_POS
FORCE_SYMBOL $045E random_x
FORCE_SYMBOL $0461 random_a
FORCE_SYMBOL $0464 random_b
FORCE_SYMBOL $0467 random_x
FORCE_SYMBOL $046A random_a
FORCE_SYMBOL $046D random_b
FORCE_SYMBOL $0470 random_b
FORCE_SYMBOL $0474 random_a
FORCE_SYMBOL $0477 random_c
FORCE_SYMBOL $047A random_c
FORCE_NO_SYMBOL $047D
FORCE_SYMBOL $047F FW_Y_VEL
FORCE_SYMBOL $0481 random_x
FORCE_SYMBOL $0484 random_a
FORCE_SYMBOL $0487 random_b
FORCE_SYMBOL $048A random_x
FORCE_SYMBOL $048D random_a
FORCE_SYMBOL $0490 random_b
FORCE_SYMBOL $0493 random_b
FORCE_SYMBOL $0497 random_a
FORCE_SYMBOL $049A random_c
FORCE_SYMBOL $049D random_c
FORCE_SYMBOL $04A1 FW_X_VEL
FORCE_SYMBOL $04A3 random_x
FORCE_SYMBOL $04A6 random_a
FORCE_SYMBOL $04A9 random_b
FORCE_SYMBOL $04AC random_x
FORCE_SYMBOL $04AF random_a
FORCE_SYMBOL $04B2 random_b
FORCE_SYMBOL $04B5 random_b
FORCE_SYMBOL $04B9 random_a
FORCE_SYMBOL $04BC random_c
FORCE_SYMBOL $04BF random_c
COMMENT $04C2 slightly different age
FORCE_NO_SYMBOL $04C2
FORCE_NO_SYMBOL $04C5
FORCE_SYMBOL $04C7 FW_AGE
FORCE_SYMBOL $04C9 buttonStatus
FORCE_SYMBOL $04CC plist_objects_head
COMMENT $04CF (D = y,x) ; do all objects
COMMENT_LINE $04D2 ************************************************************************************************
COMMENT_LINE $04D2 ************************** PARTICLE II *********************************************************
COMMENT_LINE $04D2 ************************************************************************************************
COMMENT_LINE $C917 jump back addresses
COMMENT_LINE $C917 for "last" behaviour routine
COMMENT_LINE $C918 PARTICLE1_MAX_COUNT  =       139                          ; max with below RAM
COMMENT_LINE $C918 PARTICLE1_MAX_COUNT  =       70                          ; max with below RAM
COMMENT_LINE $C918 Structures
COMMENT $C92D if empty these contain a value that points to a RTS, smaller than OBJECT_LIST_COMPARE_ADDRESS
COMMENT $C92F if greater OBJECT_LIST_COMPARE_ADDRESS, than this is a pointer to a RAM location of an Object
COMMENT_LINE $CB4E ROM
COMMENT $04D2 ten seconds
FORCE_SYMBOL $04D2 TWENTY_SECONDS
FORCE_SYMBOL $04D5 bigCounter
FORCE_SYMBOL $04DA outerCircle
FORCE_SYMBOL $04DE bigCounter
FORCE_NO_SYMBOL $04E1
FORCE_SYMBOL $04E4 bigCounter
FORCE_SYMBOL $04E9 demoRunningFlag
COMMENT $04EC Sets the intensity of the
FORCE_SYMBOL $04EC Intensity_5F
COMMENT_LINE $04EF jsr playParticle1
FORCE_SYMBOL $04EF outerCircle
FORCE_NO_SYMBOL $04F2
FORCE_SYMBOL $04F4 outerCircle
COMMENT $04F7 playParticleInteractive
COMMENT_LINE $04FA ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0000 explosions jump back to here after all have been rendered
COMMENT_LINE $0000 setup objects
FORCE_SYMBOL $04FA pCount
COMMENT $04FD explosions jump back to here after all have been rendered
FORCE_SYMBOL $04FD objectsFinished1
FORCE_SYMBOL $0500 P_PARTICLES_DONE_A
COMMENT_LINE $0503 setup objects
FORCE_SYMBOL $0503 P_PARTICLE1_MAX_COUNT
FORCE_SYMBOL $0505 p_pobject_list
FORCE_SYMBOL $0508 p_plist_empty_head
FORCE_SYMBOL $050B P_PARTICLES_DONE
FORCE_SYMBOL $050F P_Particle
FORCE_SYMBOL $0511 NEXT_OBJECT_P
FORCE_NO_SYMBOL $0513
FORCE_SYMBOL $051A NEXT_OBJECT_P
FORCE_SYMBOL $051D p_plist_objects_head
FORCE_SYMBOL $0521 emitterData1
COMMENT $0524 position of emitter
FORCE_NO_SYMBOL $0524
FORCE_SYMBOL $0527 PE_YPOS
COMMENT $0529 delay 1, start angle 0
FORCE_SYMBOL $052C PE_ECOUNTER_RESET
COMMENT $052E start countdown = 0, angle inc = 3
FORCE_SYMBOL $0531 PE_ECOUNTER
FORCE_SYMBOL $0533 buildStationaryEmitter
FORCE_SYMBOL $0536 emitterData2
COMMENT $0539 position of emitter
FORCE_NO_SYMBOL $0539
FORCE_SYMBOL $053C PE_YPOS
COMMENT $053E delay 1, start angle 0
FORCE_SYMBOL $0541 PE_ECOUNTER_RESET
COMMENT $0543 start countdown = 0, angle inc = 3
FORCE_SYMBOL $0546 PE_ECOUNTER
FORCE_SYMBOL $0548 buildStationaryEmitter
FORCE_SYMBOL $054B emitterData3
COMMENT $054E position of emitter
FORCE_NO_SYMBOL $054E
FORCE_SYMBOL $0551 PE_YPOS
COMMENT $0553 delay 1, start angle 0
FORCE_SYMBOL $0556 PE_ECOUNTER_RESET
COMMENT $0558 start countdown = 0, angle inc = 3
FORCE_SYMBOL $055B PE_ECOUNTER
FORCE_SYMBOL $055D buildStationaryEmitter
FORCE_SYMBOL $0560 anglechangeCountDown
FORCE_SYMBOL $0563 angleAddData
FORCE_SYMBOL $0566 angleChangePointer
COMMENT_LINE $056A ***************************************************************************
FORCE_SYMBOL $056A anglechangeCountDown
FORCE_NO_SYMBOL $056F
FORCE_SYMBOL $0571 anglechangeCountDown
FORCE_SYMBOL $0574 angleChangePointer
FORCE_NO_SYMBOL $0577
FORCE_SYMBOL $0579 angleAddDataEnd
FORCE_SYMBOL $057F angleAddData
FORCE_SYMBOL $0582 angleChangePointer
FORCE_NO_SYMBOL $0585
COMMENT_LINE $0590 pointer to circle data - is a constant!
FORCE_SYMBOL $0590 circleData
FORCE_SYMBOL $0594 p_plist_objects_head
COMMENT $0597 (D = y,x) ; do all objects
COMMENT_LINE $059A ***************************************************************************
COMMENT_LINE $07EE ***************************************************************************
COMMENT_LINE $07EE ...........................................................................
FORCE_SYMBOL $07EE p_newObject
FORCE_SYMBOL $07F1 P_PLIST_COMPARE_ADDRESS
FORCE_SYMBOL $07F7 PE_EMITTER_DATA
FORCE_SYMBOL $07F9 stationaryEmitterBehaviour
FORCE_SYMBOL $07FC PE_BEHAVIOUR
COMMENT_LINE $07FF ...........................................................................
FORCE_SYMBOL $0801 PE_EDATA
FORCE_SYMBOL $0803 PE_EANGLE_INC
FORCE_SYMBOL $0805 PE_EDATA
FORCE_SYMBOL $0807 PE_ECOUNTER
FORCE_SYMBOL $080D PE_ECOUNTER_RESET
FORCE_SYMBOL $080F PE_ECOUNTER
FORCE_SYMBOL $0813 P_PLIST_COMPARE_ADDRESS
COMMENT $0819 start scale
FORCE_NO_SYMBOL $0819
COMMENT $081B position / angle
FORCE_SYMBOL $081B PE_EDATA
FORCE_SYMBOL $081D PP_SCALE
FORCE_SYMBOL $081F scaledAngleParticleBehaviour
FORCE_SYMBOL $0822 PP_BEHAVIOUR
COMMENT $0826 preload next user stack
COMMENT_LINE $082A ...........................................................................
COMMENT_LINE $082A position to
FORCE_SYMBOL $082A VIA_t1_cnt_lo
COMMENT $0831 Store Y in D/A register
FORCE_SYMBOL $0831 VIA_port_a
COMMENT $0833 Blank low, zero high?
FORCE_NO_SYMBOL $0833
FORCE_SYMBOL $0835 VIA_cntl
COMMENT $0838 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $0838 VIA_port_b
COMMENT_LINE $083A STA      <VIA_shift_reg               ;Clear shift regigster
COMMENT $083A y must be set more than xx cycles on some vectrex
COMMENT $083B Disable mux
FORCE_SYMBOL $083B VIA_port_b
COMMENT $083D Store X in D/A register
FORCE_SYMBOL $083D VIA_port_a
COMMENT $083F enable timer
FORCE_SYMBOL $083F VIA_t1_cnt_hi
FORCE_NO_SYMBOL $0843
FORCE_NO_SYMBOL $0845
COMMENT $084B preload next user stack
FORCE_NO_SYMBOL $084D
FORCE_SYMBOL $084F VIA_t1_cnt_lo
FORCE_SYMBOL $0852 outerCircle
FORCE_NO_SYMBOL $0859
FORCE_SYMBOL $085B VIA_int_flags
COMMENT $0861 Store Y in D/A register
FORCE_SYMBOL $0861 VIA_port_a
COMMENT $0863 Blank low, zero high?
FORCE_NO_SYMBOL $0863
FORCE_SYMBOL $0865 VIA_cntl
COMMENT $0868 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $0868 VIA_port_b
COMMENT_LINE $086A STA      <VIA_shift_reg               ;Clear shift regigster
COMMENT $086A y must be set more than xx cycles on some vectrex
COMMENT $086B Disable mux
FORCE_SYMBOL $086B VIA_port_b
COMMENT $086D Store X in D/A register
FORCE_SYMBOL $086D VIA_port_a
COMMENT $086F enable timer
FORCE_SYMBOL $086F VIA_t1_cnt_hi
COMMENT $0871 Get dot dwell (brightness)
FORCE_SYMBOL $0871 Vec_Dot_Dwell
COMMENT $0874 Delay leaving beam in place
FORCE_NO_SYMBOL $0875
FORCE_SYMBOL $0877 VIA_int_flags
COMMENT $087B Store in VIA shift register
FORCE_SYMBOL $087B VIA_shift_reg
COMMENT $087D Delay leaving beam in place
COMMENT $0880 Blank beam in VIA shift register
FORCE_SYMBOL $0880 VIA_shift_reg
FORCE_NO_SYMBOL $0882
COMMENT $0884 /BLANK low and /ZERO low
FORCE_SYMBOL $0884 VIA_cntl
COMMENT_LINE $0888 ************************************************************************************************
COMMENT_LINE $0888 ************************** OBJECTS II *********************************************************
COMMENT_LINE $0888 ************************************************************************************************
COMMENT_LINE $0888 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0888 new list object to U
COMMENT_LINE $0888 destroys d, u
FORCE_SYMBOL $0888 p_plist_empty_head
FORCE_SYMBOL $088B P_PLIST_COMPARE_ADDRESS
COMMENT_LINE $0891 set the new empty head
COMMENT $0891 the next in out empty list will be the new
FORCE_SYMBOL $0891 NEXT_OBJECT_P
COMMENT $0893 head of our empty list
FORCE_SYMBOL $0893 p_plist_empty_head
COMMENT_LINE $0896 load last of current object list
COMMENT_LINE $0896 the old head is always our next
FORCE_SYMBOL $0896 p_plist_objects_head
FORCE_SYMBOL $0899 NEXT_OBJECT_P
COMMENT_LINE $089B newobject is always head
FORCE_SYMBOL $089B p_plist_objects_head
COMMENT $089E and remember that we created a new object
FORCE_SYMBOL $089E pCount
COMMENT_LINE $08A2 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $08A2 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $08A2 this macro is placed at the end of each possible "remove" exit
COMMENT_LINE $08A2 it stores the just removed object at the head of the "empty" list and
COMMENT_LINE $08A2 sets up its "next" pointer
COMMENT $0000 set u free, as new free head
COMMENT $0000 load to u the next linked list element
COMMENT_LINE $08A2 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $08A2 in ds+u_offset1 pointer to the object that must be removed
COMMENT_LINE $08A2 destroys x, y
COMMENT_LINE $08A2 puls from ds the next object behaviour
COMMENT_LINE $08A2 this version is called at the end of an explosion called by "behaviours"
COMMENT $08A2 x -> pointer object struture (correction of offset)
FORCE_SYMBOL $08A2 p_u_offset1
COMMENT $08A4 is it the first?
FORCE_SYMBOL $08A4 p_plist_objects_head
COMMENT $08A7 no -> jump
COMMENT $08A9 s pointer to next objext
FORCE_SYMBOL $08A9 NEXT_OBJECT_P
COMMENT $08AB the next object will be the first
FORCE_SYMBOL $08AB p_plist_objects_head
COMMENT $08B0 start at list head
FORCE_SYMBOL $08B0 p_plist_objects_head
COMMENT $08B4 am I the next object of the current investigated list element
FORCE_SYMBOL $08B4 NEXT_OBJECT_P
COMMENT $08B6 jup -> jump
COMMENT $08B8 otherwise load the next as new current
FORCE_SYMBOL $08B8 NEXT_OBJECT_P
COMMENT $08BB and search further
COMMENT $08BD we load "our" next object to s
FORCE_SYMBOL $08BD NEXT_OBJECT_P
COMMENT $08BF and store our next in the place of our previous next and thus eleminate ourselfs
FORCE_SYMBOL $08BF NEXT_OBJECT_P
COMMENT $08C1 and clean up the empties
FORCE_SYMBOL $08C1 pCount
COMMENT $08C4 set u free, as new free head
FORCE_SYMBOL $08C4 p_plist_empty_head
COMMENT $08C8 load to u the next linked list element
FORCE_SYMBOL $08C8 NEXT_OBJECT_P
FORCE_SYMBOL $08CB p_plist_empty_head
COMMENT_LINE $08CE do a clean ending - which is usually done at the end of "SmartDraw"
FORCE_NO_SYMBOL $08CE
FORCE_SYMBOL $08D0 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $08D2
COMMENT $08D4 /BLANK low and /ZERO low
FORCE_SYMBOL $08D4 VIA_cntl
FORCE_NO_SYMBOL $08D6
FORCE_SYMBOL $08D8 VIA_int_flags
COMMENT $08DC (D = y,x, X = vectorlist)
COMMENT_LINE $08DE ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $08DE circle generated 0-360 in 255 steps (cos, -sin), radius: 127
COMMENT $08DE degrees: 0
COMMENT $08E0 degrees: 1
COMMENT $08E2 degrees: 2
COMMENT $08E4 degrees: 4
COMMENT $08E6 degrees: 5
COMMENT $08E8 degrees: 7
COMMENT $08EA degrees: 8
COMMENT $08EC degrees: 9
COMMENT $08EE degrees: 11
COMMENT $08F0 degrees: 12
COMMENT $08F2 degrees: 14
COMMENT $08F4 degrees: 15
COMMENT $08F6 degrees: 16
COMMENT $08F8 degrees: 18
COMMENT $08FA degrees: 19
COMMENT $08FC degrees: 21
COMMENT $08FE degrees: 22
COMMENT $0900 degrees: 23
COMMENT $0902 degrees: 25
COMMENT $0904 degrees: 26
COMMENT $0906 degrees: 28
COMMENT $0908 degrees: 29
COMMENT $090A degrees: 31
COMMENT $090C degrees: 32
COMMENT $090E degrees: 33
COMMENT $0910 degrees: 35
COMMENT $0912 degrees: 36
COMMENT $0914 degrees: 38
COMMENT $0916 degrees: 39
COMMENT $0918 degrees: 40
COMMENT $091A degrees: 42
COMMENT $091C degrees: 43
COMMENT $091E degrees: 45
COMMENT $0920 degrees: 46
COMMENT $0922 degrees: 48
COMMENT $0924 degrees: 49
COMMENT $0926 degrees: 50
COMMENT $0928 degrees: 52
COMMENT $092A degrees: 53
COMMENT $092C degrees: 55
COMMENT $092E degrees: 56
COMMENT $0930 degrees: 57
COMMENT $0932 degrees: 59
COMMENT $0934 degrees: 60
COMMENT $0936 degrees: 62
COMMENT $0938 degrees: 63
COMMENT $093A degrees: 64
COMMENT $093C degrees: 66
COMMENT $093E degrees: 67
COMMENT $0940 degrees: 69
COMMENT $0942 degrees: 70
COMMENT $0944 degrees: 72
COMMENT $0946 degrees: 73
COMMENT $0948 degrees: 74
COMMENT $094A degrees: 76
COMMENT $094C degrees: 77
COMMENT $094E degrees: 79
COMMENT $0950 degrees: 80
COMMENT $0952 degrees: 81
COMMENT $0954 degrees: 83
COMMENT $0956 degrees: 84
COMMENT $0958 degrees: 86
COMMENT $095A degrees: 87
COMMENT $095C degrees: 88
COMMENT $095E degrees: 90
COMMENT $0960 degrees: 91
COMMENT $0962 degrees: 93
COMMENT $0964 degrees: 94
COMMENT $0966 degrees: 95
COMMENT $0968 degrees: 97
COMMENT $096A degrees: 98
COMMENT $096C degrees: 100
COMMENT $096E degrees: 101
COMMENT $0970 degrees: 103
COMMENT $0972 degrees: 104
COMMENT $0974 degrees: 105
COMMENT $0976 degrees: 107
COMMENT $0978 degrees: 108
COMMENT $097A degrees: 110
COMMENT $097C degrees: 111
COMMENT $097E degrees: 112
COMMENT $0980 degrees: 114
COMMENT $0982 degrees: 115
COMMENT $0984 degrees: 117
COMMENT $0986 degrees: 118
COMMENT $0988 degrees: 119
COMMENT $098A degrees: 121
COMMENT $098C degrees: 122
COMMENT $098E degrees: 124
COMMENT $0990 degrees: 125
COMMENT $0992 degrees: 127
COMMENT $0994 degrees: 128
COMMENT $0996 degrees: 129
COMMENT $0998 degrees: 131
COMMENT $099A degrees: 132
COMMENT $099C degrees: 134
COMMENT $099E degrees: 135
COMMENT $09A0 degrees: 136
COMMENT $09A2 degrees: 138
COMMENT $09A4 degrees: 139
COMMENT $09A6 degrees: 141
COMMENT $09A8 degrees: 142
COMMENT $09AA degrees: 143
COMMENT $09AC degrees: 145
COMMENT $09AE degrees: 146
COMMENT $09B0 degrees: 148
COMMENT $09B2 degrees: 149
COMMENT $09B4 degrees: 151
COMMENT $09B6 degrees: 152
COMMENT $09B8 degrees: 153
COMMENT $09BA degrees: 155
COMMENT $09BC degrees: 156
COMMENT $09BE degrees: 158
COMMENT $09C0 degrees: 159
COMMENT $09C2 degrees: 160
COMMENT $09C4 degrees: 162
COMMENT $09C6 degrees: 163
COMMENT $09C8 degrees: 165
COMMENT $09CA degrees: 166
COMMENT $09CC degrees: 167
COMMENT $09CE degrees: 169
COMMENT $09D0 degrees: 170
COMMENT $09D2 degrees: 172
COMMENT $09D4 degrees: 173
COMMENT $09D6 degrees: 175
COMMENT $09D8 degrees: 176
COMMENT $09DA degrees: 177
COMMENT $09DC degrees: 179
COMMENT $09DE degrees: 180
COMMENT $09E0 degrees: 182
COMMENT $09E2 degrees: 183
COMMENT $09E4 degrees: 184
COMMENT $09E6 degrees: 186
COMMENT $09E8 degrees: 187
COMMENT $09EA degrees: 189
COMMENT $09EC degrees: 190
COMMENT $09EE degrees: 191
COMMENT $09F0 degrees: 193
COMMENT $09F2 degrees: 194
COMMENT $09F4 degrees: 196
COMMENT $09F6 degrees: 197
COMMENT $09F8 degrees: 199
COMMENT $09FA degrees: 200
COMMENT $09FC degrees: 201
COMMENT $09FE degrees: 203
COMMENT $0A00 degrees: 204
COMMENT $0A02 degrees: 206
COMMENT $0A04 degrees: 207
COMMENT $0A06 degrees: 208
COMMENT $0A08 degrees: 210
COMMENT $0A0A degrees: 211
COMMENT $0A0C degrees: 213
COMMENT $0A0E degrees: 214
COMMENT $0A10 degrees: 215
COMMENT $0A12 degrees: 217
COMMENT $0A14 degrees: 218
COMMENT $0A16 degrees: 220
COMMENT $0A18 degrees: 221
COMMENT $0A1A degrees: 223
COMMENT $0A1C degrees: 224
COMMENT $0A1E degrees: 225
COMMENT $0A20 degrees: 227
COMMENT $0A22 degrees: 228
COMMENT $0A24 degrees: 230
COMMENT $0A26 degrees: 231
COMMENT $0A28 degrees: 232
COMMENT $0A2A degrees: 234
COMMENT $0A2C degrees: 235
COMMENT $0A2E degrees: 237
COMMENT $0A30 degrees: 238
COMMENT $0A32 degrees: 239
COMMENT $0A34 degrees: 241
COMMENT $0A36 degrees: 242
COMMENT $0A38 degrees: 244
COMMENT $0A3A degrees: 245
COMMENT $0A3C degrees: 247
COMMENT $0A3E degrees: 248
COMMENT $0A40 degrees: 249
COMMENT $0A42 degrees: 251
COMMENT $0A44 degrees: 252
COMMENT $0A46 degrees: 254
COMMENT $0A48 degrees: 255
COMMENT $0A4A degrees: 256
COMMENT $0A4C degrees: 258
COMMENT $0A4E degrees: 259
COMMENT $0A50 degrees: 261
COMMENT $0A52 degrees: 262
COMMENT $0A54 degrees: 263
COMMENT $0A56 degrees: 265
COMMENT $0A58 degrees: 266
COMMENT $0A5A degrees: 268
COMMENT $0A5C degrees: 269
COMMENT $0A5E degrees: 271
COMMENT $0A60 degrees: 272
COMMENT $0A62 degrees: 273
COMMENT $0A64 degrees: 275
COMMENT $0A66 degrees: 276
COMMENT $0A68 degrees: 278
COMMENT $0A6A degrees: 279
COMMENT $0A6C degrees: 280
COMMENT $0A6E degrees: 282
COMMENT $0A70 degrees: 283
COMMENT $0A72 degrees: 285
COMMENT $0A74 degrees: 286
COMMENT $0A76 degrees: 287
COMMENT $0A78 degrees: 289
COMMENT $0A7A degrees: 290
COMMENT $0A7C degrees: 292
COMMENT $0A7E degrees: 293
COMMENT $0A80 degrees: 295
COMMENT $0A82 degrees: 296
COMMENT $0A84 degrees: 297
COMMENT $0A86 degrees: 299
COMMENT $0A88 degrees: 300
COMMENT $0A8A degrees: 302
COMMENT $0A8C degrees: 303
COMMENT $0A8E degrees: 304
COMMENT $0A90 degrees: 306
COMMENT $0A92 degrees: 307
COMMENT $0A94 degrees: 309
COMMENT $0A96 degrees: 310
COMMENT $0A98 degrees: 312
COMMENT $0A9A degrees: 313
COMMENT $0A9C degrees: 314
COMMENT $0A9E degrees: 316
COMMENT $0AA0 degrees: 317
COMMENT $0AA2 degrees: 319
COMMENT $0AA4 degrees: 320
COMMENT $0AA6 degrees: 321
COMMENT $0AA8 degrees: 323
COMMENT $0AAA degrees: 324
COMMENT $0AAC degrees: 326
COMMENT $0AAE degrees: 327
COMMENT $0AB0 degrees: 328
COMMENT $0AB2 degrees: 330
COMMENT $0AB4 degrees: 331
COMMENT $0AB6 degrees: 333
COMMENT $0AB8 degrees: 334
COMMENT $0ABA degrees: 336
COMMENT $0ABC degrees: 337
COMMENT $0ABE degrees: 338
COMMENT $0AC0 degrees: 340
COMMENT $0AC2 degrees: 341
COMMENT $0AC4 degrees: 343
COMMENT $0AC6 degrees: 344
COMMENT $0AC8 degrees: 345
COMMENT $0ACA degrees: 347
COMMENT $0ACC degrees: 348
COMMENT $0ACE degrees: 350
COMMENT $0AD0 degrees: 351
COMMENT $0AD2 degrees: 352
COMMENT $0AD4 degrees: 354
COMMENT $0AD6 degrees: 355
COMMENT $0AD8 degrees: 357
COMMENT $0ADA degrees: 358
COMMENT $0ADC degrees: 0
COMMENT_LINE $C915 V2
COMMENT $0ADE ten seconds
FORCE_SYMBOL $0AE1 bigCounter
FORCE_SYMBOL $0AE7 laneData
FORCE_SYMBOL $0AEA lane37Data_SLED
FORCE_SYMBOL $0AEF laneData
FORCE_SYMBOL $0AF2 lane38Data_SLED
FORCE_SYMBOL $0AF7 laneData
FORCE_SYMBOL $0AFA lane39Data_SLED
FORCE_NO_SYMBOL $0AFF
FORCE_SYMBOL $0B02 roundCounter_SLED
FORCE_SYMBOL $0B05 laneData
FORCE_NO_SYMBOL $0B08
FORCE_SYMBOL $0B0B bigCounter
FORCE_NO_SYMBOL $0B0E
FORCE_SYMBOL $0B11 bigCounter
FORCE_SYMBOL $0B16 demoRunningFlag
FORCE_SYMBOL $0B19 laneRAM_SLED
FORCE_NO_SYMBOL $0B1D
FORCE_SYMBOL $0B21 doLane
FORCE_SYMBOL $0B24 laneData
COMMENT_LINE $0B29 increase round counter!
FORCE_SYMBOL $0B29 roundCounter_SLED
FORCE_NO_SYMBOL $0B2C
FORCE_SYMBOL $0B2E roundCounter_SLED
COMMENT_LINE $0B32 V2
COMMENT_LINE $0B32 ***************************************************************************
COMMENT_LINE $0B32 in U pointer to lane RAM
COMMENT_LINE $0B32 in X pointer to lane Data
FORCE_SYMBOL $0B32 LANE_ROM_DATA
COMMENT $0B35 first element
FORCE_NO_SYMBOL $0B35
FORCE_SYMBOL $0B37 LANE_CURRENT_ELEMENT
FORCE_SYMBOL $0B39 ELEMENT_BEHAVIOUR
FORCE_SYMBOL $0B3C BEHAVIOUR_ANIMATION_LOOP
FORCE_SYMBOL $0B3E LANE_ANIM_LOOP
FORCE_SYMBOL $0B40 ELEMENT_MOVE_SCALE
FORCE_SYMBOL $0B43 LANE_CURRENT_MOVE_SCALE
FORCE_SYMBOL $0B45 ELEMENT_ANIM_DELAY
FORCE_SYMBOL $0B47 LANE_DELAY_COUNT
FORCE_SYMBOL $0B49 LANE_ANIM_COUNT
COMMENT_LINE $0B4B SCALE
FORCE_SYMBOL $0B4B ELEMENT_SCALE_FROM
FORCE_SYMBOL $0B4D LANE_CURRENT_DRAW_SCALE
FORCE_SYMBOL $0B4F ELEMENT_SCALE_DELAY
FORCE_SYMBOL $0B51 LANE_SCALE_DELAY
FORCE_SYMBOL $0B53 ELEMENT_SCALE_INCREASE
FORCE_SYMBOL $0B55 LANE_SCALE_INCREASE
FORCE_SYMBOL $0B57 ELEMENT_SCALE_TO
FORCE_SYMBOL $0B59 LANE_SCALE_TO
COMMENT_LINE $0B5B INTENSITY
FORCE_SYMBOL $0B5B ELEMENT_INTENSITY_FROM
FORCE_SYMBOL $0B5D LANE_CURRENT_INTENSITY
FORCE_SYMBOL $0B5F ELEMENT_INTENSITY_DELAY
FORCE_SYMBOL $0B61 LANE_INTENSITY_DELAY
FORCE_SYMBOL $0B63 ELEMENT_INTENSITY_INCREASE
FORCE_SYMBOL $0B65 LANE_INTENSITY_INCREASE
FORCE_SYMBOL $0B67 ELEMENT_INTENSITY_TO
FORCE_SYMBOL $0B69 LANE_INTENSITY_TO
COMMENT_LINE $0B6B POS
FORCE_SYMBOL $0B6B ELEMENT_POS_FROM
FORCE_SYMBOL $0B6D LANE_CURRENT_POSITION
FORCE_SYMBOL $0B6F ELEMENT_POS_DELAY
FORCE_SYMBOL $0B71 LANE_POS_DELAY
FORCE_SYMBOL $0B74 ELEMENT_POS_INCREASE
FORCE_SYMBOL $0B77 LANE_POS_INCREASE
FORCE_SYMBOL $0B7A ELEMENT_POS_TO
FORCE_SYMBOL $0B7C LANE_POS_TO
FORCE_SYMBOL $0B7E ELEMENT_DRAW
FORCE_SYMBOL $0B81 LANE_DRAW
FORCE_SYMBOL $0B84 ELEMENT_END_COUNT
FORCE_SYMBOL $0B87 LANE_ELEMENT_COUNT
COMMENT_LINE $0B8B pointer to lane RAM in Y
FORCE_SYMBOL $0B8B LANE_ROM_DATA
FORCE_SYMBOL $0B8E LANE_CURRENT_ELEMENT
FORCE_SYMBOL $0B95 LANE_CURRENT_ELEMENT
FORCE_SYMBOL $0B97 LANE_CURRENT_ELEMENT
FORCE_SYMBOL $0B99 LANE_ROM_DATA
FORCE_NO_SYMBOL $0BA1
FORCE_SYMBOL $0BA3 LANE_CURRENT_ELEMENT
COMMENT_LINE $0BA9 ***************************************************************************
COMMENT_LINE $0BA9 pointer to lane RAM in Y
FORCE_SYMBOL $0BA9 LANE_ELEMENT_COUNT
COMMENT $0BAE dec element counter
FORCE_SYMBOL $0BAE LANE_ELEMENT_COUNT
FORCE_SYMBOL $0BB3 LANE_ROM_DATA
FORCE_SYMBOL $0BB6 LANE_CURRENT_ELEMENT
COMMENT_LINE $0BBB in x pointer to ROM element data struct
FORCE_SYMBOL $0BBB LANE_DELAY_COUNT
FORCE_SYMBOL $0BBF ELEMENT_ANIM_DELAY
FORCE_SYMBOL $0BC1 LANE_DELAY_COUNT
FORCE_SYMBOL $0BC3 LANE_ANIM_COUNT
COMMENT $0BC6 current animation frame
FORCE_SYMBOL $0BC6 LANE_ANIM_COUNT
COMMENT $0BC8 times two since it is a word pointer
COMMENT $0BCA address of data
FORCE_NO_SYMBOL $0BCA
COMMENT_LINE $0BD0 otherwise this animation is done
COMMENT_LINE $0BD0 check for loop - or init next lane element!
FORCE_SYMBOL $0BD0 LANE_ANIM_LOOP
COMMENT_LINE $0BD4 stay at current frame
FORCE_SYMBOL $0BD4 LANE_ANIM_COUNT
COMMENT $0BD8 for now reset animation
FORCE_SYMBOL $0BD8 LANE_ANIM_COUNT
COMMENT_LINE $0BDA todo check for "stay"continueWithElement
FORCE_SYMBOL $0BDA LANE_SCALE_INCREASE
FORCE_SYMBOL $0BDE LANE_SCALE_DELAY
FORCE_SYMBOL $0BE2 LANE_CURRENT_DRAW_SCALE
FORCE_SYMBOL $0BE4 LANE_CURRENT_DRAW_SCALE
FORCE_SYMBOL $0BE6 LANE_SCALE_TO
COMMENT $0BEA zero means no change
FORCE_SYMBOL $0BEA LANE_SCALE_INCREASE
FORCE_SYMBOL $0BEE ELEMENT_SCALE_DELAY
FORCE_SYMBOL $0BF0 LANE_SCALE_DELAY
FORCE_SYMBOL $0BF2 LANE_INTENSITY_INCREASE
FORCE_SYMBOL $0BF6 LANE_INTENSITY_DELAY
FORCE_SYMBOL $0BFA LANE_CURRENT_INTENSITY
FORCE_SYMBOL $0BFC LANE_CURRENT_INTENSITY
FORCE_SYMBOL $0BFE LANE_INTENSITY_TO
COMMENT $0C02 zero means no change
FORCE_SYMBOL $0C02 LANE_INTENSITY_INCREASE
FORCE_SYMBOL $0C06 ELEMENT_INTENSITY_DELAY
FORCE_SYMBOL $0C08 LANE_INTENSITY_DELAY
FORCE_SYMBOL $0C0A LANE_POS_INCREASE_X
FORCE_SYMBOL $0C0F LANE_POS_DELAY_X
FORCE_SYMBOL $0C14 LANE_CURRENT_POSITION_X
FORCE_SYMBOL $0C16 LANE_CURRENT_POSITION_X
FORCE_SYMBOL $0C18 LANE_POS_X_TO
COMMENT $0C1D zero means no change
FORCE_SYMBOL $0C1D LANE_POS_INCREASE_X
FORCE_SYMBOL $0C22 ELEMENT_POS_DELAY_X
FORCE_SYMBOL $0C25 LANE_POS_DELAY_X
FORCE_SYMBOL $0C28 LANE_POS_INCREASE_Y
FORCE_SYMBOL $0C2D LANE_POS_DELAY_Y
FORCE_SYMBOL $0C32 LANE_CURRENT_POSITION_Y
FORCE_SYMBOL $0C34 LANE_CURRENT_POSITION_Y
FORCE_SYMBOL $0C36 LANE_POS_Y_TO
COMMENT $0C3A zero means no change
FORCE_SYMBOL $0C3A LANE_POS_INCREASE_Y
FORCE_SYMBOL $0C3F ELEMENT_POS_DELAY_Y
FORCE_SYMBOL $0C41 LANE_POS_DELAY_Y
FORCE_SYMBOL $0C44 LANE_CURRENT_INTENSITY
COMMENT $0C48 Store intensity in D/A
FORCE_SYMBOL $0C48 VIA_port_a
COMMENT $0C4A mux disabled channel 2
FORCE_NO_SYMBOL $0C4A
FORCE_SYMBOL $0C4D VIA_port_b
COMMENT $0C4F mux enabled channel 2
FORCE_SYMBOL $0C4F VIA_port_b
COMMENT $0C51 turn off mux
FORCE_SYMBOL $0C51 VIA_port_b
COMMENT_LINE $0C53 todo = intensity - when another vlist that extended sync is done
COMMENT $0C54 current animation frame
FORCE_SYMBOL $0C54 LANE_ANIM_COUNT
COMMENT $0C56 times two since it is a word pointer
COMMENT $0C58 address of data
FORCE_NO_SYMBOL $0C58
COMMENT $0C5C current animation frame
FORCE_SYMBOL $0C5C LANE_CURRENT_POSITION
COMMENT $0C5E in x position of list
COMMENT_LINE $0C60 A scale positioning
COMMENT_LINE $0C60 N scale move in list
FORCE_SYMBOL $0C60 LANE_CURRENT_MOVE_SCALE
COMMENT $0C62 Vectrex BIOS print routine
FORCE_SYMBOL $0C62 LANE_DRAW
COMMENT_LINE $0C66 SUB_START
COMMENT_LINE $0C66 ***************************************************************************
COMMENT_LINE $0C66 SUBROUTINE SECTION
COMMENT_LINE $0C66 ***************************************************************************
COMMENT_LINE $0C66 ZERO ing the integrators takes time. Measures at my vectrex show e.g.:
COMMENT_LINE $0C66 If you move the beam with a to x = -127 and y = -127 at diffferent scale values, the time to reach zero:
COMMENT_LINE $0C66 - scale $ff -> zero 110 cycles
COMMENT_LINE $0C66 - scale $7f -> zero 75 cycles
COMMENT_LINE $0C66 - scale $40 -> zero 57 cycles
COMMENT_LINE $0C66 - scale $20 -> zero 53 cycles
COMMENT_LINE $0C66 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0C66 U = address of vectorlist
COMMENT_LINE $0C66 X = (y,x) position of vectorlist (this will be point 0,0), positioning on screen
COMMENT_LINE $0C66 A = scalefactor "Move" (after sync)
COMMENT_LINE $0C66 B = scalefactor "Vector" (vectors in vectorlist)
COMMENT_LINE $0C66 mode, rel y, rel x,
COMMENT_LINE $0C66 mode, rel y, rel x,
COMMENT_LINE $0C66 .      .      .
COMMENT_LINE $0C66 .      .      .
COMMENT_LINE $0C66 mode, rel y, rel x,
COMMENT_LINE $0C66 0x02
COMMENT_LINE $0C66 where mode has the following meaning:
COMMENT_LINE $0C66 negative draw line
COMMENT_LINE $0C66 0 move to specified endpoint
COMMENT_LINE $0C66 1 sync (and move to list start and than to place in vectorlist)
COMMENT_LINE $0C66 2 end
COMMENT_LINE $0C66 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0C66 remember out different scale factors
COMMENT_LINE $0C6A first list entry (first will be a sync + moveto_d, so we just stay here!)
COMMENT $0C6A this will be a "1"
COMMENT $0C6C test if real sync - or end of list (2)
COMMENT $0C6D if end of list -> jump
COMMENT_LINE $0C6F zero integrators
COMMENT $0C6F zero the integrators
FORCE_NO_SYMBOL $0C6F
COMMENT $0C71 store zeroing values to cntl
FORCE_SYMBOL $0C71 VIA_cntl
COMMENT $0C73 and wait for zeroing to be actually done
FORCE_SYMBOL $0C73 ZERO_DELAY_AS
COMMENT_LINE $0C75 reset integrators
COMMENT $0C75 reset integrator offset
FORCE_SYMBOL $0C75 VIA_port_a
FORCE_NO_SYMBOL $0C77
COMMENT_LINE $0C79 wait that zeroing surely has the desired effect!
COMMENT $0C79 while waiting, zero offsets
FORCE_SYMBOL $0C79 VIA_port_b
FORCE_SYMBOL $0C7E VIA_port_b
COMMENT_LINE $0C80 unzero is done by moveto_d
COMMENT $0C80 scalefactor move
FORCE_NO_SYMBOL $0C80
COMMENT $0C82 to timer t1 (lo=
FORCE_SYMBOL $0C82 VIA_t1_cnt_lo
COMMENT $0C84 load our coordinates of "entry" of vectorlist
COMMENT $0C86 jsr      Moveto_d                     ; move there
COMMENT_LINE $0C86 optimzed, tweaked not perfect... 'MOVE TO D' makro
COMMENT $0C86 Store Y in D/A register
FORCE_SYMBOL $0C86 VIA_port_a
COMMENT $0C88 Blank low, zero high?
FORCE_NO_SYMBOL $0C88
FORCE_SYMBOL $0C8A VIA_cntl
COMMENT $0C8D Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $0C8D VIA_port_b
COMMENT_LINE $0C8F STA      <VIA_shift_reg               ;Clear shift regigster
COMMENT $0C8F y must be set more than xx cycles on some vectrex
COMMENT $0C90 Disable mux
FORCE_SYMBOL $0C90 VIA_port_b
COMMENT $0C92 Store X in D/A register
FORCE_SYMBOL $0C92 VIA_port_a
COMMENT $0C94 enable timer
FORCE_SYMBOL $0C94 VIA_t1_cnt_hi
FORCE_NO_SYMBOL $0C96
FORCE_SYMBOL $0C98 VIA_int_flags
COMMENT $0C9C scale factor vector
FORCE_NO_SYMBOL $0C9C
COMMENT $0C9E to timer T1 (lo)
FORCE_SYMBOL $0C9E VIA_t1_cnt_lo
COMMENT $0CA0 do our "internal" moveto d
COMMENT $0CA2 there was a move 0,0, if so
COMMENT $0CA4 jsr      Moveto_d
COMMENT_LINE $0CA4 optimzed, tweaked not perfect... 'MOVE TO D' makro
COMMENT $0CA4 Store Y in D/A register
FORCE_SYMBOL $0CA4 VIA_port_a
COMMENT $0CA6 Blank low, zero high?
FORCE_NO_SYMBOL $0CA6
FORCE_SYMBOL $0CA8 VIA_cntl
COMMENT $0CAB Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $0CAB VIA_port_b
COMMENT_LINE $0CAD STA      <VIA_shift_reg               ;Clear shift regigster
COMMENT $0CAD y must be set more than xx cycles on some vectrex
COMMENT $0CAE Disable mux
FORCE_SYMBOL $0CAE VIA_port_b
COMMENT $0CB0 Store X in D/A register
FORCE_SYMBOL $0CB0 VIA_port_a
COMMENT $0CB2 enable timer
FORCE_SYMBOL $0CB2 VIA_t1_cnt_hi
FORCE_NO_SYMBOL $0CB4
FORCE_SYMBOL $0CB6 VIA_int_flags
COMMENT $0CBA load next "mode" byte
COMMENT $0CBC if 0, than we should move somewhere
COMMENT $0CBE if still positive it is a 1 pr 2 _> goto sync
COMMENT_LINE $0CC0 now we should draw a vector
COMMENT $0CC0 Get next coordinate pair
COMMENT $0CC2 Send Y to A/D
FORCE_SYMBOL $0CC2 VIA_port_a
COMMENT $0CC4 Enable mux
FORCE_SYMBOL $0CC4 VIA_port_b
COMMENT $0CC6 Get pattern byte
FORCE_NO_SYMBOL $0CC6
COMMENT $0CC8 Disable mux
FORCE_SYMBOL $0CC8 VIA_port_b
COMMENT $0CCA Send X to A/D
FORCE_SYMBOL $0CCA VIA_port_a
COMMENT $0CCC B-reg = T1 interrupt bit
FORCE_NO_SYMBOL $0CCC
COMMENT $0CCE Clear T1H
FORCE_SYMBOL $0CCE VIA_t1_cnt_hi
COMMENT $0CD0 Store pattern in shift register
FORCE_SYMBOL $0CD0 VIA_shift_reg
COMMENT $0CD2 Wait for T1 to time out
FORCE_SYMBOL $0CD2 VIA_int_flags
COMMENT $0CD4 wait till line is finished
COMMENT $0CD6 switch the light off (for sure)
FORCE_SYMBOL $0CD6 VIA_shift_reg
COMMENT $0CDA correct stack and go back
COMMENT_LINE $0CDD ***************************************************************************
COMMENT_LINE $0CDD SUB_END
COMMENT_LINE $0CDD SUB_END
COMMENT $0CE3 delay
COMMENT $0CE4 scale from
COMMENT $0CE5 scale to
COMMENT $0CE6 scale delay
COMMENT $0CE7 scale increase
COMMENT $0CE8 intensityFrom
COMMENT $0CE9 intensityTo
COMMENT $0CEA intensityDelay
COMMENT $0CEB intensityIncrease
COMMENT $0CEC position from (y,x)
COMMENT $0CEE position to (y,x)
COMMENT $0CF0 position delay (y,x)
COMMENT $0CF2 position increase (y,x)
COMMENT $0CF4 move scale
COMMENT $0CF5 draw jsr
COMMENT $0CF7 BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP
COMMENT $0CF8 element end count
COMMENT $0CFA type of element
COMMENT $0D01 delay
COMMENT $0D02 scale from
COMMENT $0D03 scale to
COMMENT $0D04 scale delay
COMMENT $0D05 scale increase
COMMENT $0D06 intensityFrom
COMMENT $0D07 intensityTo
COMMENT $0D08 intensityDelay
COMMENT $0D09 intensityIncrease
COMMENT $0D0A position from (y,x)
COMMENT $0D0C position to (y,x)
COMMENT $0D0E position delay (y,x)
COMMENT $0D10 position increase (y,x)
COMMENT $0D12 move scale
COMMENT $0D13 draw jsr
COMMENT $0D15 BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP
COMMENT $0D16 element end count
COMMENT $0D18 type of element
COMMENT $0D1F delay
COMMENT $0D20 scale from
COMMENT $0D21 scale to
COMMENT $0D22 scale delay
COMMENT $0D23 scale increase
COMMENT $0D24 intensityFrom
COMMENT $0D25 intensityTo
COMMENT $0D26 intensityDelay
COMMENT $0D27 intensityIncrease
COMMENT $0D28 position from (y,x)
COMMENT $0D2A position to (y,x)
COMMENT $0D2C position delay (y,x)
COMMENT $0D2E position increase (y,x)
COMMENT $0D30 move scale
COMMENT $0D31 draw jsr
COMMENT $0D33 BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP
COMMENT $0D34 element end count
COMMENT $0D36 type of element
COMMENT $0D37 list of all single vectorlists in this
COMMENT $0D3B sync and move to y, x
COMMENT $0D3E draw, y, x
COMMENT $0D41 draw, y, x
COMMENT $0D44 draw, y, x
COMMENT $0D47 draw, y, x
COMMENT $0D4A draw, y, x
COMMENT $0D4D draw, y, x
COMMENT $0D50 draw, y, x
COMMENT $0D53 draw, y, x
COMMENT $0D56 draw, y, x
COMMENT $0D59 draw, y, x
COMMENT $0D5C draw, y, x
COMMENT $0D5F draw, y, x
COMMENT $0D62 draw, y, x
COMMENT $0D65 sync and move to y, x
COMMENT $0D68 additional sync move to y, x
COMMENT $0D6B draw, y, x
COMMENT $0D6E draw, y, x
COMMENT $0D71 draw, y, x
COMMENT $0D74 draw, y, x
COMMENT $0D77 draw, y, x
COMMENT $0D7A draw, y, x
COMMENT $0D7D draw, y, x
COMMENT $0D80 draw, y, x
COMMENT $0D83 draw, y, x
COMMENT $0D86 draw, y, x
COMMENT $0D89 draw, y, x
COMMENT $0D8C draw, y, x
COMMENT $0D8F draw, y, x
COMMENT $0D92 sync and move to y, x
COMMENT $0D95 draw, y, x
COMMENT $0D98 draw, y, x
COMMENT $0D9B draw, y, x
COMMENT $0D9E draw, y, x
COMMENT $0DA1 draw, y, x
COMMENT $0DA4 draw, y, x
COMMENT $0DA7 draw, y, x
COMMENT $0DAA draw, y, x
COMMENT $0DAD draw, y, x
COMMENT $0DB0 draw, y, x
COMMENT $0DB3 draw, y, x
COMMENT $0DB6 draw, y, x
COMMENT $0DB9 draw, y, x
COMMENT $0DBC sync and move to y, x
COMMENT $0DBF draw, y, x
COMMENT $0DC2 draw, y, x
COMMENT $0DC5 draw, y, x
COMMENT $0DC8 draw, y, x
COMMENT $0DCB draw, y, x
COMMENT $0DCE draw, y, x
COMMENT $0DD1 draw, y, x
COMMENT $0DD4 draw, y, x
COMMENT $0DD7 draw, y, x
COMMENT $0DDA draw, y, x
COMMENT $0DDD draw, y, x
COMMENT $0DE0 draw, y, x
COMMENT $0DE3 draw, y, x
COMMENT $0DE6 draw, y, x
COMMENT $0DE9 sync and move to y, x
COMMENT $0DEC draw, y, x
COMMENT $0DEF draw, y, x
COMMENT $0DF2 draw, y, x
COMMENT $0DF5 draw, y, x
COMMENT $0DF8 endmarker
COMMENT $0DF9 list of all single vectorlists in this
COMMENT $0DFD sync and move to y, x
COMMENT $0E00 additional sync move to y, x
COMMENT $0E03 draw, y, x
COMMENT $0E06 draw, y, x
COMMENT $0E09 draw, y, x
COMMENT $0E0C draw, y, x
COMMENT $0E0F draw, y, x
COMMENT $0E12 draw, y, x
COMMENT $0E15 draw, y, x
COMMENT $0E18 draw, y, x
COMMENT $0E1B draw, y, x
COMMENT $0E1E draw, y, x
COMMENT $0E21 draw, y, x
COMMENT $0E24 draw, y, x
COMMENT $0E27 draw, y, x
COMMENT $0E2A draw, y, x
COMMENT $0E2D draw, y, x
COMMENT $0E30 draw, y, x
COMMENT $0E33 draw, y, x
COMMENT $0E36 sync and move to y, x
COMMENT $0E39 additional sync move to y, x
COMMENT $0E3C additional sync move to y, x
COMMENT $0E3F draw, y, x
COMMENT $0E42 draw, y, x
COMMENT $0E45 draw, y, x
COMMENT $0E48 draw, y, x
COMMENT $0E4B draw, y, x
COMMENT $0E4E draw, y, x
COMMENT $0E51 draw, y, x
COMMENT $0E54 draw, y, x
COMMENT $0E57 draw, y, x
COMMENT $0E5A draw, y, x
COMMENT $0E5D draw, y, x
COMMENT $0E60 draw, y, x
COMMENT $0E63 draw, y, x
COMMENT $0E66 draw, y, x
COMMENT $0E69 draw, y, x
COMMENT $0E6C draw, y, x
COMMENT $0E6F sync and move to y, x
COMMENT $0E72 additional sync move to y, x
COMMENT $0E75 additional sync move to y, x
COMMENT $0E78 draw, y, x
COMMENT $0E7B draw, y, x
COMMENT $0E7E draw, y, x
COMMENT $0E81 draw, y, x
COMMENT $0E84 draw, y, x
COMMENT $0E87 draw, y, x
COMMENT $0E8A draw, y, x
COMMENT $0E8D draw, y, x
COMMENT $0E90 draw, y, x
COMMENT $0E93 draw, y, x
COMMENT $0E96 draw, y, x
COMMENT $0E99 draw, y, x
COMMENT $0E9C draw, y, x
COMMENT $0E9F draw, y, x
COMMENT $0EA2 draw, y, x
COMMENT $0EA5 draw, y, x
COMMENT $0EA8 draw, y, x
COMMENT $0EAB sync and move to y, x
COMMENT $0EAE additional sync move to y, x
COMMENT $0EB1 draw, y, x
COMMENT $0EB4 draw, y, x
COMMENT $0EB7 draw, y, x
COMMENT $0EBA draw, y, x
COMMENT $0EBD draw, y, x
COMMENT $0EC0 draw, y, x
COMMENT $0EC3 draw, y, x
COMMENT $0EC6 draw, y, x
COMMENT $0EC9 draw, y, x
COMMENT $0ECC draw, y, x
COMMENT $0ECF draw, y, x
COMMENT $0ED2 draw, y, x
COMMENT $0ED5 draw, y, x
COMMENT $0ED8 draw, y, x
COMMENT $0EDB sync and move to y, x
COMMENT $0EDE additional sync move to y, x
COMMENT $0EE1 additional sync move to y, x
COMMENT $0EE4 draw, y, x
COMMENT $0EE7 draw, y, x
COMMENT $0EEA draw, y, x
COMMENT $0EED draw, y, x
COMMENT $0EF0 draw, y, x
COMMENT $0EF3 draw, y, x
COMMENT $0EF6 draw, y, x
COMMENT $0EF9 draw, y, x
COMMENT $0EFC draw, y, x
COMMENT $0EFF draw, y, x
COMMENT $0F02 draw, y, x
COMMENT $0F05 draw, y, x
COMMENT $0F08 draw, y, x
COMMENT $0F0B draw, y, x
COMMENT $0F0E draw, y, x
COMMENT $0F11 endmarker
COMMENT $0F12 list of all single vectorlists in this
COMMENT $0F16 sync and move to y, x
COMMENT $0F19 additional sync move to y, x
COMMENT $0F1C draw, y, x
COMMENT $0F1F draw, y, x
COMMENT $0F22 draw, y, x
COMMENT $0F25 draw, y, x
COMMENT $0F28 draw, y, x
COMMENT $0F2B draw, y, x
COMMENT $0F2E draw, y, x
COMMENT $0F31 draw, y, x
COMMENT $0F34 draw, y, x
COMMENT $0F37 draw, y, x
COMMENT $0F3A draw, y, x
COMMENT $0F3D draw, y, x
COMMENT $0F40 draw, y, x
COMMENT $0F43 draw, y, x
COMMENT $0F46 draw, y, x
COMMENT $0F49 draw, y, x
COMMENT $0F4C draw, y, x
COMMENT $0F4F draw, y, x
COMMENT $0F52 draw, y, x
COMMENT $0F55 sync and move to y, x
COMMENT $0F58 additional sync move to y, x
COMMENT $0F5B draw, y, x
COMMENT $0F5E draw, y, x
COMMENT $0F61 draw, y, x
COMMENT $0F64 draw, y, x
COMMENT $0F67 draw, y, x
COMMENT $0F6A draw, y, x
COMMENT $0F6D draw, y, x
COMMENT $0F70 draw, y, x
COMMENT $0F73 draw, y, x
COMMENT $0F76 draw, y, x
COMMENT $0F79 draw, y, x
COMMENT $0F7C draw, y, x
COMMENT $0F7F draw, y, x
COMMENT $0F82 draw, y, x
COMMENT $0F85 draw, y, x
COMMENT $0F88 draw, y, x
COMMENT $0F8B draw, y, x
COMMENT $0F8E draw, y, x
COMMENT $0F91 draw, y, x
COMMENT $0F94 sync and move to y, x
COMMENT $0F97 additional sync move to y, x
COMMENT $0F9A draw, y, x
COMMENT $0F9D draw, y, x
COMMENT $0FA0 draw, y, x
COMMENT $0FA3 draw, y, x
COMMENT $0FA6 draw, y, x
COMMENT $0FA9 draw, y, x
COMMENT $0FAC draw, y, x
COMMENT $0FAF draw, y, x
COMMENT $0FB2 draw, y, x
COMMENT $0FB5 draw, y, x
COMMENT $0FB8 draw, y, x
COMMENT $0FBB draw, y, x
COMMENT $0FBE draw, y, x
COMMENT $0FC1 draw, y, x
COMMENT $0FC4 draw, y, x
COMMENT $0FC7 draw, y, x
COMMENT $0FCA draw, y, x
COMMENT $0FCD draw, y, x
COMMENT $0FD0 draw, y, x
COMMENT $0FD3 sync and move to y, x
COMMENT $0FD6 draw, y, x
COMMENT $0FD9 draw, y, x
COMMENT $0FDC draw, y, x
COMMENT $0FDF draw, y, x
COMMENT $0FE2 draw, y, x
COMMENT $0FE5 draw, y, x
COMMENT $0FE8 draw, y, x
COMMENT $0FEB draw, y, x
COMMENT $0FEE draw, y, x
COMMENT $0FF1 draw, y, x
COMMENT $0FF4 sync and move to y, x
COMMENT $0FF7 additional sync move to y, x
COMMENT $0FFA draw, y, x
COMMENT $0FFD draw, y, x
COMMENT $1000 draw, y, x
COMMENT $1003 draw, y, x
COMMENT $1006 draw, y, x
COMMENT $1009 draw, y, x
COMMENT $100C draw, y, x
COMMENT $100F draw, y, x
COMMENT $1012 draw, y, x
COMMENT $1015 draw, y, x
COMMENT $1018 endmarker
COMMENT_LINE $1019 **********************************************************************************
COMMENT_LINE $1019 **********************************************************************************
COMMENT_LINE $1019 ** Deer Feed
COMMENT_LINE $1019 **********************************************************************************
COMMENT_LINE $1019 here the cartridge program starts off
COMMENT $1019 ten seconds
FORCE_SYMBOL $1019 TEN_SECONDS
FORCE_SYMBOL $101C bigCounter
FORCE_SYMBOL $1022 laneData
FORCE_SYMBOL $1025 lane72Data_DeerFeed
FORCE_SYMBOL $1028 initLane
FORCE_SYMBOL $102B laneData
FORCE_SYMBOL $102E lane95Data_DeerFeed
FORCE_SYMBOL $1031 initLane
FORCE_SYMBOL $1034 laneData
FORCE_SYMBOL $1037 lane96Data_DeerFeed
FORCE_SYMBOL $103A initLane
FORCE_NO_SYMBOL $103D
FORCE_SYMBOL $1040 roundCounter_DeerFeed
FORCE_SYMBOL $1043 laneData
FORCE_NO_SYMBOL $1046
FORCE_SYMBOL $1049 bigCounter
FORCE_NO_SYMBOL $104C
FORCE_SYMBOL $104F bigCounter
FORCE_SYMBOL $1054 demoRunningFlag
FORCE_SYMBOL $1057 laneRAM_DeerFeed
FORCE_NO_SYMBOL $105B
FORCE_SYMBOL $105F doLane
FORCE_SYMBOL $1062 laneData
COMMENT_LINE $1067 increase round counter!
FORCE_SYMBOL $1067 roundCounter_DeerFeed
FORCE_NO_SYMBOL $106A
FORCE_SYMBOL $106C roundCounter_DeerFeed
COMMENT_LINE $1070 SUB_START
COMMENT $107C delay
COMMENT $107D scale from
COMMENT $107E scale to
COMMENT $107F scale delay
COMMENT $1080 scale increase
COMMENT $1081 intensityFrom
COMMENT $1082 intensityTo
COMMENT $1083 intensityDelay
COMMENT $1084 intensityIncrease
COMMENT $1085 position from (y,x)
COMMENT $1087 position to (y,x)
COMMENT $1089 position delay (y,x)
COMMENT $108B position increase (y,x)
COMMENT $108D move scale
COMMENT $108E draw jsr
COMMENT $1090 BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP
COMMENT $1091 element end count
COMMENT $1093 type of element
COMMENT $1096 delay
COMMENT $1097 scale from
COMMENT $1098 scale to
COMMENT $1099 scale delay
COMMENT $109A scale increase
COMMENT $109B intensityFrom
COMMENT $109C intensityTo
COMMENT $109D intensityDelay
COMMENT $109E intensityIncrease
COMMENT $109F position from (y,x)
COMMENT $10A1 position to (y,x)
COMMENT $10A3 position delay (y,x)
COMMENT $10A5 position increase (y,x)
COMMENT $10A7 move scale
COMMENT $10A8 draw jsr
COMMENT $10AA BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP
COMMENT $10AB element end count
COMMENT $10AD type of element
COMMENT $10B0 delay
COMMENT $10B1 scale from
COMMENT $10B2 scale to
COMMENT $10B3 scale delay
COMMENT $10B4 scale increase
COMMENT $10B5 intensityFrom
COMMENT $10B6 intensityTo
COMMENT $10B7 intensityDelay
COMMENT $10B8 intensityIncrease
COMMENT $10B9 position from (y,x)
COMMENT $10BB position to (y,x)
COMMENT $10BD position delay (y,x)
COMMENT $10BF position increase (y,x)
COMMENT $10C1 move scale
COMMENT $10C2 draw jsr
COMMENT $10C4 BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP
COMMENT $10C5 element end count
COMMENT $10C7 type of element
COMMENT $10CA delay
COMMENT $10CB scale from
COMMENT $10CC scale to
COMMENT $10CD scale delay
COMMENT $10CE scale increase
COMMENT $10CF intensityFrom
COMMENT $10D0 intensityTo
COMMENT $10D1 intensityDelay
COMMENT $10D2 intensityIncrease
COMMENT $10D3 position from (y,x)
COMMENT $10D5 position to (y,x)
COMMENT $10D7 position delay (y,x)
COMMENT $10D9 position increase (y,x)
COMMENT $10DB move scale
COMMENT $10DC draw jsr
COMMENT $10DE BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP
COMMENT $10DF element end count
COMMENT $10E1 type of element
COMMENT $10E8 delay
COMMENT $10E9 scale from
COMMENT $10EA scale to
COMMENT $10EB scale delay
COMMENT $10EC scale increase
COMMENT $10ED intensityFrom
COMMENT $10EE intensityTo
COMMENT $10EF intensityDelay
COMMENT $10F0 intensityIncrease
COMMENT $10F1 position from (y,x)
COMMENT $10F3 position to (y,x)
COMMENT $10F5 position delay (y,x)
COMMENT $10F7 position increase (y,x)
COMMENT $10F9 move scale
COMMENT $10FA draw jsr
COMMENT $10FC BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP
COMMENT $10FD element end count
COMMENT $10FF type of element
COMMENT $1106 delay
COMMENT $1107 scale from
COMMENT $1108 scale to
COMMENT $1109 scale delay
COMMENT $110A scale increase
COMMENT $110B intensityFrom
COMMENT $110C intensityTo
COMMENT $110D intensityDelay
COMMENT $110E intensityIncrease
COMMENT $110F position from (y,x)
COMMENT $1111 position to (y,x)
COMMENT $1113 position delay (y,x)
COMMENT $1115 position increase (y,x)
COMMENT $1117 move scale
COMMENT $1118 draw jsr
COMMENT $111A BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP
COMMENT $111B element end count
COMMENT $111D type of element
COMMENT $111E list of all single vectorlists in this
COMMENT $1122 sync and move to y, x
COMMENT $1125 additional sync move to y, x
COMMENT $1128 draw, y, x
COMMENT $112B draw, y, x
COMMENT $112E draw, y, x
COMMENT $1131 draw, y, x
COMMENT $1134 draw, y, x
COMMENT $1137 draw, y, x
COMMENT $113A draw, y, x
COMMENT $113D draw, y, x
COMMENT $1140 draw, y, x
COMMENT $1143 draw, y, x
COMMENT $1146 sync and move to y, x
COMMENT $1149 draw, y, x
COMMENT $114C draw, y, x
COMMENT $114F draw, y, x
COMMENT $1152 draw, y, x
COMMENT $1155 draw, y, x
COMMENT $1158 draw, y, x
COMMENT $115B draw, y, x
COMMENT $115E draw, y, x
COMMENT $1161 draw, y, x
COMMENT $1164 draw, y, x
COMMENT $1167 sync and move to y, x
COMMENT $116A additional sync move to y, x
COMMENT $116D draw, y, x
COMMENT $1170 draw, y, x
COMMENT $1173 draw, y, x
COMMENT $1176 draw, y, x
COMMENT $1179 draw, y, x
COMMENT $117C draw, y, x
COMMENT $117F draw, y, x
COMMENT $1182 draw, y, x
COMMENT $1185 draw, y, x
COMMENT $1188 sync and move to y, x
COMMENT $118B additional sync move to y, x
COMMENT $118E draw, y, x
COMMENT $1191 draw, y, x
COMMENT $1194 draw, y, x
COMMENT $1197 draw, y, x
COMMENT $119A draw, y, x
COMMENT $119D draw, y, x
COMMENT $11A0 draw, y, x
COMMENT $11A3 draw, y, x
COMMENT $11A6 draw, y, x
COMMENT $11A9 draw, y, x
COMMENT $11AC draw, y, x
COMMENT $11AF draw, y, x
COMMENT $11B2 draw, y, x
COMMENT $11B5 draw, y, x
COMMENT $11B8 draw, y, x
COMMENT $11BB draw, y, x
COMMENT $11BE sync and move to y, x
COMMENT $11C1 additional sync move to y, x
COMMENT $11C4 draw, y, x
COMMENT $11C7 draw, y, x
COMMENT $11CA draw, y, x
COMMENT $11CD draw, y, x
COMMENT $11D0 draw, y, x
COMMENT $11D3 draw, y, x
COMMENT $11D6 draw, y, x
COMMENT $11D9 draw, y, x
COMMENT $11DC sync and move to y, x
COMMENT $11DF additional sync move to y, x
COMMENT $11E2 draw, y, x
COMMENT $11E5 draw, y, x
COMMENT $11E8 draw, y, x
COMMENT $11EB draw, y, x
COMMENT $11EE draw, y, x
COMMENT $11F1 draw, y, x
COMMENT $11F4 draw, y, x
COMMENT $11F7 draw, y, x
COMMENT $11FA draw, y, x
COMMENT $11FD draw, y, x
COMMENT $1200 draw, y, x
COMMENT $1203 draw, y, x
COMMENT $1206 draw, y, x
COMMENT $1209 draw, y, x
COMMENT $120C draw, y, x
COMMENT $120F draw, y, x
COMMENT $1212 endmarker
COMMENT $1213 list of all single vectorlists in this
COMMENT $1217 sync and move to y, x
COMMENT $121A additional sync move to y, x
COMMENT $121D additional sync move to y, x
COMMENT $1220 draw, y, x
COMMENT $1223 draw, y, x
COMMENT $1226 draw, y, x
COMMENT $1229 draw, y, x
COMMENT $122C draw, y, x
COMMENT $122F draw, y, x
COMMENT $1232 draw, y, x
COMMENT $1235 draw, y, x
COMMENT $1238 draw, y, x
COMMENT $123B draw, y, x
COMMENT $123E sync and move to y, x
COMMENT $1241 additional sync move to y, x
COMMENT $1244 draw, y, x
COMMENT $1247 draw, y, x
COMMENT $124A draw, y, x
COMMENT $124D draw, y, x
COMMENT $1250 draw, y, x
COMMENT $1253 draw, y, x
COMMENT $1256 draw, y, x
COMMENT $1259 draw, y, x
COMMENT $125C draw, y, x
COMMENT $125F draw, y, x
COMMENT $1262 sync and move to y, x
COMMENT $1265 additional sync move to y, x
COMMENT $1268 draw, y, x
COMMENT $126B draw, y, x
COMMENT $126E draw, y, x
COMMENT $1271 draw, y, x
COMMENT $1274 draw, y, x
COMMENT $1277 draw, y, x
COMMENT $127A draw, y, x
COMMENT $127D draw, y, x
COMMENT $1280 draw, y, x
COMMENT $1283 draw, y, x
COMMENT $1286 sync and move to y, x
COMMENT $1289 additional sync move to y, x
COMMENT $128C draw, y, x
COMMENT $128F draw, y, x
COMMENT $1292 draw, y, x
COMMENT $1295 draw, y, x
COMMENT $1298 draw, y, x
COMMENT $129B draw, y, x
COMMENT $129E draw, y, x
COMMENT $12A1 draw, y, x
COMMENT $12A4 draw, y, x
COMMENT $12A7 draw, y, x
COMMENT $12AA sync and move to y, x
COMMENT $12AD additional sync move to y, x
COMMENT $12B0 draw, y, x
COMMENT $12B3 draw, y, x
COMMENT $12B6 draw, y, x
COMMENT $12B9 draw, y, x
COMMENT $12BC draw, y, x
COMMENT $12BF draw, y, x
COMMENT $12C2 draw, y, x
COMMENT $12C5 draw, y, x
COMMENT $12C8 draw, y, x
COMMENT $12CB draw, y, x
COMMENT $12CE sync and move to y, x
COMMENT $12D1 additional sync move to y, x
COMMENT $12D4 draw, y, x
COMMENT $12D7 draw, y, x
COMMENT $12DA draw, y, x
COMMENT $12DD draw, y, x
COMMENT $12E0 draw, y, x
COMMENT $12E3 draw, y, x
COMMENT $12E6 draw, y, x
COMMENT $12E9 draw, y, x
COMMENT $12EC draw, y, x
COMMENT $12EF draw, y, x
COMMENT $12F2 sync and move to y, x
COMMENT $12F5 additional sync move to y, x
COMMENT $12F8 draw, y, x
COMMENT $12FB draw, y, x
COMMENT $12FE draw, y, x
COMMENT $1301 draw, y, x
COMMENT $1304 draw, y, x
COMMENT $1307 draw, y, x
COMMENT $130A draw, y, x
COMMENT $130D draw, y, x
COMMENT $1310 draw, y, x
COMMENT $1313 draw, y, x
COMMENT $1316 sync and move to y, x
COMMENT $1319 draw, y, x
COMMENT $131C draw, y, x
COMMENT $131F draw, y, x
COMMENT $1322 draw, y, x
COMMENT $1325 draw, y, x
COMMENT $1328 draw, y, x
COMMENT $132B draw, y, x
COMMENT $132E draw, y, x
COMMENT $1331 draw, y, x
COMMENT $1334 draw, y, x
COMMENT $1337 draw, y, x
COMMENT $133A endmarker
COMMENT $133B list of all single vectorlists in this
COMMENT $133F sync and move to y, x
COMMENT $1342 additional sync move to y, x
COMMENT $1345 additional sync move to y, x
COMMENT $1348 draw, y, x
COMMENT $134B draw, y, x
COMMENT $134E draw, y, x
COMMENT $1351 draw, y, x
COMMENT $1354 draw, y, x
COMMENT $1357 draw, y, x
COMMENT $135A draw, y, x
COMMENT $135D draw, y, x
COMMENT $1360 draw, y, x
COMMENT $1363 draw, y, x
COMMENT $1366 draw, y, x
COMMENT $1369 draw, y, x
COMMENT $136C draw, y, x
COMMENT $136F draw, y, x
COMMENT $1372 sync and move to y, x
COMMENT $1375 draw, y, x
COMMENT $1378 draw, y, x
COMMENT $137B draw, y, x
COMMENT $137E draw, y, x
COMMENT $1381 draw, y, x
COMMENT $1384 draw, y, x
COMMENT $1387 draw, y, x
COMMENT $138A draw, y, x
COMMENT $138D draw, y, x
COMMENT $1390 draw, y, x
COMMENT $1393 draw, y, x
COMMENT $1396 draw, y, x
COMMENT $1399 draw, y, x
COMMENT $139C draw, y, x
COMMENT $139F draw, y, x
COMMENT $13A2 draw, y, x
COMMENT $13A5 sync and move to y, x
COMMENT $13A8 draw, y, x
COMMENT $13AB draw, y, x
COMMENT $13AE draw, y, x
COMMENT $13B1 draw, y, x
COMMENT $13B4 draw, y, x
COMMENT $13B7 draw, y, x
COMMENT $13BA draw, y, x
COMMENT $13BD draw, y, x
COMMENT $13C0 draw, y, x
COMMENT $13C3 draw, y, x
COMMENT $13C6 draw, y, x
COMMENT $13C9 draw, y, x
COMMENT $13CC draw, y, x
COMMENT $13CF draw, y, x
COMMENT $13D2 draw, y, x
COMMENT $13D5 sync and move to y, x
COMMENT $13D8 additional sync move to y, x
COMMENT $13DB draw, y, x
COMMENT $13DE draw, y, x
COMMENT $13E1 draw, y, x
COMMENT $13E4 draw, y, x
COMMENT $13E7 draw, y, x
COMMENT $13EA draw, y, x
COMMENT $13ED draw, y, x
COMMENT $13F0 draw, y, x
COMMENT $13F3 draw, y, x
COMMENT $13F6 draw, y, x
COMMENT $13F9 draw, y, x
COMMENT $13FC draw, y, x
COMMENT $13FF draw, y, x
COMMENT $1402 draw, y, x
COMMENT $1405 draw, y, x
COMMENT $1408 endmarker
COMMENT $1409 list of all single vectorlists in this
COMMENT $140D sync and move to y, x
COMMENT $1410 additional sync move to y, x
COMMENT $1413 draw, y, x
COMMENT $1416 draw, y, x
COMMENT $1419 draw, y, x
COMMENT $141C draw, y, x
COMMENT $141F draw, y, x
COMMENT $1422 draw, y, x
COMMENT $1425 draw, y, x
COMMENT $1428 draw, y, x
COMMENT $142B draw, y, x
COMMENT $142E draw, y, x
COMMENT $1431 draw, y, x
COMMENT $1434 draw, y, x
COMMENT $1437 draw, y, x
COMMENT $143A draw, y, x
COMMENT $143D draw, y, x
COMMENT $1440 draw, y, x
COMMENT $1443 draw, y, x
COMMENT $1446 draw, y, x
COMMENT $1449 draw, y, x
COMMENT $144C sync and move to y, x
COMMENT $144F draw, y, x
COMMENT $1452 draw, y, x
COMMENT $1455 draw, y, x
COMMENT $1458 draw, y, x
COMMENT $145B draw, y, x
COMMENT $145E draw, y, x
COMMENT $1461 draw, y, x
COMMENT $1464 draw, y, x
COMMENT $1467 draw, y, x
COMMENT $146A draw, y, x
COMMENT $146D sync and move to y, x
COMMENT $1470 draw, y, x
COMMENT $1473 draw, y, x
COMMENT $1476 draw, y, x
COMMENT $1479 draw, y, x
COMMENT $147C draw, y, x
COMMENT $147F draw, y, x
COMMENT $1482 draw, y, x
COMMENT $1485 draw, y, x
COMMENT $1488 draw, y, x
COMMENT $148B draw, y, x
COMMENT $148E sync and move to y, x
COMMENT $1491 draw, y, x
COMMENT $1494 draw, y, x
COMMENT $1497 draw, y, x
COMMENT $149A draw, y, x
COMMENT $149D draw, y, x
COMMENT $14A0 draw, y, x
COMMENT $14A3 draw, y, x
COMMENT $14A6 draw, y, x
COMMENT $14A9 draw, y, x
COMMENT $14AC draw, y, x
COMMENT $14AF draw, y, x
COMMENT $14B2 draw, y, x
COMMENT $14B5 draw, y, x
COMMENT $14B8 draw, y, x
COMMENT $14BB draw, y, x
COMMENT $14BE draw, y, x
COMMENT $14C1 draw, y, x
COMMENT $14C4 draw, y, x
COMMENT $14C7 draw, y, x
COMMENT $14CA sync and move to y, x
COMMENT $14CD additional sync move to y, x
COMMENT $14D0 draw, y, x
COMMENT $14D3 draw, y, x
COMMENT $14D6 draw, y, x
COMMENT $14D9 draw, y, x
COMMENT $14DC draw, y, x
COMMENT $14DF draw, y, x
COMMENT $14E2 draw, y, x
COMMENT $14E5 draw, y, x
COMMENT $14E8 draw, y, x
COMMENT $14EB draw, y, x
COMMENT $14EE draw, y, x
COMMENT $14F1 sync and move to y, x
COMMENT $14F4 draw, y, x
COMMENT $14F7 draw, y, x
COMMENT $14FA draw, y, x
COMMENT $14FD draw, y, x
COMMENT $1500 draw, y, x
COMMENT $1503 draw, y, x
COMMENT $1506 draw, y, x
COMMENT $1509 draw, y, x
COMMENT $150C draw, y, x
COMMENT $150F draw, y, x
COMMENT $1512 endmarker
COMMENT $1513 list of all single vectorlists in this
COMMENT $1517 sync and move to y, x
COMMENT $151A additional sync move to y, x
COMMENT $151D draw, y, x
COMMENT $1520 draw, y, x
COMMENT $1523 draw, y, x
COMMENT $1526 draw, y, x
COMMENT $1529 draw, y, x
COMMENT $152C draw, y, x
COMMENT $152F draw, y, x
COMMENT $1532 draw, y, x
COMMENT $1535 draw, y, x
COMMENT $1538 draw, y, x
COMMENT $153B draw, y, x
COMMENT $153E draw, y, x
COMMENT $1541 sync and move to y, x
COMMENT $1544 additional sync move to y, x
COMMENT $1547 draw, y, x
COMMENT $154A draw, y, x
COMMENT $154D draw, y, x
COMMENT $1550 draw, y, x
COMMENT $1553 draw, y, x
COMMENT $1556 draw, y, x
COMMENT $1559 draw, y, x
COMMENT $155C draw, y, x
COMMENT $155F draw, y, x
COMMENT $1562 draw, y, x
COMMENT $1565 draw, y, x
COMMENT $1568 draw, y, x
COMMENT $156B draw, y, x
COMMENT $156E draw, y, x
COMMENT $1571 sync and move to y, x
COMMENT $1574 additional sync move to y, x
COMMENT $1577 draw, y, x
COMMENT $157A draw, y, x
COMMENT $157D draw, y, x
COMMENT $1580 draw, y, x
COMMENT $1583 draw, y, x
COMMENT $1586 draw, y, x
COMMENT $1589 draw, y, x
COMMENT $158C draw, y, x
COMMENT $158F draw, y, x
COMMENT $1592 draw, y, x
COMMENT $1595 draw, y, x
COMMENT $1598 draw, y, x
COMMENT $159B sync and move to y, x
COMMENT $159E draw, y, x
COMMENT $15A1 draw, y, x
COMMENT $15A4 draw, y, x
COMMENT $15A7 draw, y, x
COMMENT $15AA draw, y, x
COMMENT $15AD draw, y, x
COMMENT $15B0 draw, y, x
COMMENT $15B3 draw, y, x
COMMENT $15B6 draw, y, x
COMMENT $15B9 draw, y, x
COMMENT $15BC draw, y, x
COMMENT $15BF draw, y, x
COMMENT $15C2 draw, y, x
COMMENT $15C5 endmarker
COMMENT $15C6 list of all single vectorlists in this
COMMENT $15CA sync and move to y, x
COMMENT $15CD draw, y, x
COMMENT $15D0 draw, y, x
COMMENT $15D3 draw, y, x
COMMENT $15D6 draw, y, x
COMMENT $15D9 draw, y, x
COMMENT $15DC draw, y, x
COMMENT $15DF draw, y, x
COMMENT $15E2 draw, y, x
COMMENT $15E5 draw, y, x
COMMENT $15E8 draw, y, x
COMMENT $15EB sync and move to y, x
COMMENT $15EE draw, y, x
COMMENT $15F1 draw, y, x
COMMENT $15F4 draw, y, x
COMMENT $15F7 draw, y, x
COMMENT $15FA draw, y, x
COMMENT $15FD draw, y, x
COMMENT $1600 draw, y, x
COMMENT $1603 draw, y, x
COMMENT $1606 draw, y, x
COMMENT $1609 draw, y, x
COMMENT $160C sync and move to y, x
COMMENT $160F draw, y, x
COMMENT $1612 draw, y, x
COMMENT $1615 mode, y, x
COMMENT $1618 draw, y, x
COMMENT $161B draw, y, x
COMMENT $161E draw, y, x
COMMENT $1621 draw, y, x
COMMENT $1624 draw, y, x
COMMENT $1627 draw, y, x
COMMENT $162A draw, y, x
COMMENT $162D sync and move to y, x
COMMENT $1630 additional sync move to y, x
COMMENT $1633 draw, y, x
COMMENT $1636 draw, y, x
COMMENT $1639 draw, y, x
COMMENT $163C draw, y, x
COMMENT $163F draw, y, x
COMMENT $1642 draw, y, x
COMMENT $1645 draw, y, x
COMMENT $1648 draw, y, x
COMMENT $164B draw, y, x
COMMENT $164E draw, y, x
COMMENT $1651 draw, y, x
COMMENT $1654 endmarker
FORCE_SYMBOL $1655 catAnimCounter
FORCE_SYMBOL $1658 CAT_ANIM_TIMER
FORCE_SYMBOL $165A catAnimDelay
FORCE_SYMBOL $165D CAT_WIDTH
FORCE_SYMBOL $165F Vec_Text_Width
FORCE_SYMBOL $1664 catPosY
FORCE_SYMBOL $1669 catPosX
COMMENT $166D Sets the intensity of the
FORCE_SYMBOL $166D Intensity_5F
COMMENT_LINE $1670 vector beam to $5f
FORCE_SYMBOL $1670 catAnimDelay
FORCE_SYMBOL $1675 CAT_ANIM_TIMER
FORCE_SYMBOL $1677 catAnimDelay
FORCE_SYMBOL $167A catAnimCounter
FORCE_SYMBOL $167D catAnimCounter
FORCE_NO_SYMBOL $1680
FORCE_SYMBOL $1684 catAnimCounter
FORCE_SYMBOL $1687 CatAnimation
FORCE_SYMBOL $168A catAnimCounter
FORCE_SYMBOL $1692 catPosX
FORCE_SYMBOL $1695 catPosX
FORCE_NO_SYMBOL $1698
FORCE_SYMBOL $169E catPosX
FORCE_SYMBOL $16A1 demoRunningFlag
FORCE_SYMBOL $16A5 CatAnimation
FORCE_SYMBOL $16A8 catAnimCounter
FORCE_SYMBOL $16AE CAT_SCALE
FORCE_SYMBOL $16B0 VIA_t1_cnt_lo
COMMENT $16B2 Text position relative Y
FORCE_SYMBOL $16B2 catPosY
COMMENT $16B5 Text position relative X
FORCE_SYMBOL $16B5 catPosX
COMMENT $16B8 Vectrex BIOS print routine
COMMENT_LINE $16BB ***************************************************************
COMMENT_LINE $16BB ***************************************************************
COMMENT_LINE $16BB ***************************************************************
COMMENT_LINE $16BB expects width strength to be = to the default bios location Vec_Text_Width
COMMENT_LINE $16BB expects height strength to be = to the default bios location Vec_Text_Height
COMMENT_LINE $16BB address of raster data is expected in U
COMMENT_LINE $16BB print is done to current screen location
COMMENT_LINE $16BB zero delay is needed for zeroing to work correctly
COMMENT_LINE $16BB depends on the distance of the current integrator position to actual zero point
COMMENT_LINE $16BB experiment with my vectri:
COMMENT_LINE $16BB ZERO ing the integrators takes time. Measures at my vectrex show e.g.:
COMMENT_LINE $16BB If you move the beam with a to x = -127 and y = -127 at diffferent scale values, the time to reach zero:
COMMENT_LINE $16BB - scale $ff -> zero 110 cycles
COMMENT_LINE $16BB - scale $7f -> zero 75 cycles
COMMENT_LINE $16BB - scale $40 -> zero 57 cycles
COMMENT_LINE $16BB - scale $20 -> zero 53 cycles
COMMENT_LINE $16BB put move position on stack put it so, that we can load "d" directly from stack
COMMENT $16BF load line counter
COMMENT $16C1 height counter
FORCE_SYMBOL $16C1 rasterCounter1
COMMENT $16C4 load line width
COMMENT $16C6 width counter
FORCE_SYMBOL $16C6 rasterCounter2
COMMENT $16C9 width counter (work)
FORCE_SYMBOL $16C9 rasterCounter3
COMMENT_LINE $16CC setup VIA raster routine
COMMENT_LINE $16CC setup rampin with auxControl
COMMENT $16CC reload line width
FORCE_SYMBOL $16CC rasterCounter2
FORCE_SYMBOL $16CF rasterCounter3
COMMENT_LINE $16D2 zero
COMMENT $16D2 zero the integrators
FORCE_NO_SYMBOL $16D2
COMMENT $16D4 store zeroing values to cntl
FORCE_SYMBOL $16D4 VIA_cntl
COMMENT $16D6 and wait for zeroing to be actually done
FORCE_SYMBOL $16D6 RASTER_ZERO_DELAY
COMMENT_LINE $16D8 reset integrators
COMMENT $16D8 reset integrator offset
FORCE_SYMBOL $16D8 VIA_port_a
FORCE_NO_SYMBOL $16DA
COMMENT_LINE $16DC wait that zeroing surely has the desired effect!
COMMENT $16DC while waiting, zero offsets
FORCE_SYMBOL $16DC VIA_port_b
FORCE_SYMBOL $16E1 VIA_port_b
COMMENT_LINE $16E3 unzero is done by moveto_d
FORCE_NO_SYMBOL $16E3
FORCE_SYMBOL $16E5 Moveto_d
COMMENT_LINE $16E8 ensure y int does nothing
COMMENT $16E8 mux disabled, mux sel = y int
FORCE_NO_SYMBOL $16E8
COMMENT $16EA to via b
FORCE_SYMBOL $16EA VIA_port_b
COMMENT $16EC ensure dac is 0
FORCE_SYMBOL $16EC VIA_port_a
COMMENT $16EE enable mux
FORCE_SYMBOL $16EE VIA_port_b
COMMENT $16F0 delay
COMMENT $16F1 disable mux
FORCE_SYMBOL $16F1 VIA_port_b
COMMENT $16F3 a = $18,
FORCE_NO_SYMBOL $16F3
COMMENT $16F5 $18: T1 OneSHotMode WITHOUT Ramp control, Shift out under System clock
FORCE_SYMBOL $16F5 VIA_aux_cntl
COMMENT $16F7 get width
FORCE_SYMBOL $16F7 Vec_Text_Width
COMMENT $16FA Send it to the D/A
FORCE_SYMBOL $16FA VIA_port_a
COMMENT $16FC a = $01
FORCE_NO_SYMBOL $16FC
COMMENT $16FE Enable RAMP, disable mux
FORCE_SYMBOL $16FE VIA_port_b
COMMENT_LINE $1700 output is ongoing! (RAMP is enabled)
COMMENT $1700 [5]
FORCE_SYMBOL $1700 rasterCounter3
COMMENT $1703 [2] wait
COMMENT $1704 [2] wait
COMMENT $1705 [6] get bitmap (shiftreg-data) from raster table
COMMENT $1707 [4] This loop needs to have exactly 18 cycles (8*2+2)
FORCE_SYMBOL $1707 VIA_shift_reg
COMMENT_LINE $1709 one complete shiftreg output takes 16 cycles (8*2) + 2 cycles since VIA needs some rest
COMMENT $1709 [3]
COMMENT $170B [2]
COMMENT $170C [3] go back if not done for line
COMMENT $170E [2] delay 2 to finish last shiftout
COMMENT $170F [4] b is 0 now, switch of shift
FORCE_SYMBOL $170F VIA_shift_reg
COMMENT_LINE $1711 don't bother about ramp and dac, in the next round all will be resetted
COMMENT $1711 EXIT routine
FORCE_NO_SYMBOL $1711
COMMENT $1713 T1->PB7 enabled
FORCE_SYMBOL $1713 VIA_aux_cntl
COMMENT $1715 next move will be y - 1
FORCE_NO_SYMBOL $1715
COMMENT $1717 check for last row
FORCE_SYMBOL $1717 rasterCounter1
COMMENT $171A branch if not last row
COMMENT $171C all done, correct stack
COMMENT_LINE $171F ***************************************************************
COMMENT_LINE $171F ***************************************************************
COMMENT_LINE $171F ***************************************************************
COMMENT_LINE $1737 format:
COMMENT_LINE $1737 height, width
COMMENT_LINE $1737 shiftreg, ...,  shiftreg
COMMENT_LINE $1737 ....
COMMENT_LINE $1737 shiftreg, ...,  shiftreg
COMMENT $1942 forward
COMMENT $194D forward
COMMENT $1958 forward
COMMENT $1963 forward
COMMENT $196E forward
COMMENT $1979 forward
COMMENT $1984 forward
COMMENT $198F forward
COMMENT $199A forward
COMMENT $19A5 forward
COMMENT $19B0 forward
COMMENT $19BB forward
COMMENT $19C6 forward
COMMENT $19D1 forward
COMMENT $19DC forward
COMMENT $19E7 forward
COMMENT $19F2 forward
COMMENT $19FD forward
COMMENT $1A08 forward
COMMENT $1A13 forward
COMMENT $1A1E forward
COMMENT $1A29 forward
COMMENT $1A34 forward
COMMENT $1A3F forward
COMMENT $1A4A forward
COMMENT $1A55 forward
COMMENT $1A60 forward
COMMENT $1A6B forward
COMMENT $1A76 forward
COMMENT $1A81 forward
COMMENT $1A8C forward
COMMENT $1A97 forward
COMMENT $1AA2 forward
COMMENT $1AAD forward
COMMENT $1AB8 forward
COMMENT $1AC3 forward
COMMENT $1ACE forward
COMMENT $1AD9 forward
COMMENT $1AE4 forward
COMMENT $1AEF forward
COMMENT $1AFA forward
COMMENT $1B05 forward
COMMENT $1B10 forward
COMMENT $1B1B forward
COMMENT $1B26 forward
COMMENT $1B31 forward
COMMENT $1B3C forward
COMMENT $1B4A forward
COMMENT $1B55 forward
COMMENT $1B60 forward
COMMENT $1B6B forward
COMMENT $1B76 forward
COMMENT $1B81 forward
COMMENT $1B8C forward
COMMENT $1B97 forward
COMMENT $1BA2 forward
COMMENT $1BAD forward
COMMENT $1BB8 forward
COMMENT $1BC3 forward
COMMENT $1BCE forward
COMMENT $1BD9 forward
COMMENT $1BE4 forward
COMMENT $1BEF forward
COMMENT $1BFA forward
COMMENT $1C05 forward
COMMENT $1C10 forward
COMMENT $1C1B forward
COMMENT $1C26 forward
COMMENT $1C31 forward
COMMENT $1C3C forward
COMMENT $1C47 forward
COMMENT $1C52 forward
COMMENT $1C5D forward
COMMENT $1C68 forward
COMMENT $1C73 forward
COMMENT $1C7E forward
COMMENT $1C89 forward
COMMENT $1C94 forward
COMMENT $1C9F forward
COMMENT $1CAA forward
COMMENT $1CB5 forward
COMMENT $1CC0 forward
COMMENT $1CCB forward
COMMENT $1CD6 forward
COMMENT $1CE1 forward
COMMENT $1CEC forward
COMMENT $1CF7 forward
COMMENT $1D02 forward
COMMENT $1D0D forward
COMMENT $1D18 forward
COMMENT $1D23 forward
COMMENT $1D2E forward
COMMENT $1D39 forward
COMMENT $1D44 forward
COMMENT $1D52 forward
COMMENT $1D5D forward
COMMENT $1D68 forward
COMMENT $1D73 forward
COMMENT $1D7E forward
COMMENT $1D89 forward
COMMENT $1D94 forward
COMMENT $1D9F forward
COMMENT $1DAA forward
COMMENT $1DB5 forward
COMMENT $1DC0 forward
COMMENT $1DCB forward
COMMENT $1DD6 forward
COMMENT $1DE1 forward
COMMENT $1DEC forward
COMMENT $1DF7 forward
COMMENT $1E02 forward
COMMENT $1E0D forward
COMMENT $1E18 forward
COMMENT $1E23 forward
COMMENT $1E2E forward
COMMENT $1E39 forward
COMMENT $1E44 forward
COMMENT $1E4F forward
COMMENT $1E5A forward
COMMENT $1E65 forward
COMMENT $1E70 forward
COMMENT $1E7B forward
COMMENT $1E86 forward
COMMENT $1E91 forward
COMMENT $1E9C forward
COMMENT $1EA7 forward
COMMENT $1EB2 forward
COMMENT $1EBD forward
COMMENT $1EC8 forward
COMMENT $1ED3 forward
COMMENT $1EDE forward
COMMENT $1EE9 forward
COMMENT $1EF4 forward
COMMENT $1EFF forward
COMMENT $1F0A forward
COMMENT $1F15 forward
COMMENT $1F20 forward
COMMENT $1F2B forward
COMMENT $1F36 forward
COMMENT $1F41 forward
COMMENT $1F4C forward
COMMENT $1F5A forward
COMMENT $1F65 forward
COMMENT $1F70 forward
COMMENT $1F7B forward
COMMENT $1F86 forward
COMMENT $1F91 forward
COMMENT $1F9C forward
COMMENT $1FA7 forward
COMMENT $1FB2 forward
COMMENT $1FBD forward
COMMENT $1FC8 forward
COMMENT $1FD3 forward
COMMENT $1FDE forward
COMMENT $1FE9 forward
COMMENT $1FF4 forward
COMMENT $1FFF forward
COMMENT $200A forward
COMMENT $2015 forward
COMMENT $2020 forward
COMMENT $202B forward
COMMENT $2036 forward
COMMENT $2041 forward
COMMENT $204C forward
COMMENT $2057 forward
COMMENT $2062 forward
COMMENT $206D forward
COMMENT $2078 forward
COMMENT $2083 forward
COMMENT $208E forward
COMMENT $2099 forward
COMMENT $20A4 forward
COMMENT $20AF forward
COMMENT $20BA forward
COMMENT $20C5 forward
COMMENT $20D0 forward
COMMENT $20DB forward
COMMENT $20E6 forward
COMMENT $20F1 forward
COMMENT $20FC forward
COMMENT $2107 forward
COMMENT $2112 forward
COMMENT $211D forward
COMMENT $2128 forward
COMMENT $2133 forward
COMMENT $213E forward
COMMENT $2149 forward
COMMENT $2154 forward
COMMENT $2162 forward
COMMENT $216D forward
COMMENT $2178 forward
COMMENT $2183 forward
COMMENT $218E forward
COMMENT $2199 forward
COMMENT $21A4 forward
COMMENT $21AF forward
COMMENT $21BA forward
COMMENT $21C5 forward
COMMENT $21D0 forward
COMMENT $21DB forward
COMMENT $21E6 forward
COMMENT $21F1 forward
COMMENT $21FC forward
COMMENT $2207 forward
COMMENT $2212 forward
COMMENT $221D forward
COMMENT $2228 forward
COMMENT $2233 forward
COMMENT $223E forward
COMMENT $2249 forward
COMMENT $2254 forward
COMMENT $225F forward
COMMENT $226A forward
COMMENT $2275 forward
COMMENT $2280 forward
COMMENT $228B forward
COMMENT $2296 forward
COMMENT $22A1 forward
COMMENT $22AC forward
COMMENT $22B7 forward
COMMENT $22C2 forward
COMMENT $22CD forward
COMMENT $22D8 forward
COMMENT $22E3 forward
COMMENT $22EE forward
COMMENT $22F9 forward
COMMENT $2304 forward
COMMENT $230F forward
COMMENT $231A forward
COMMENT $2325 forward
COMMENT $2330 forward
COMMENT $233B forward
COMMENT $2346 forward
COMMENT $2351 forward
COMMENT $235C forward
COMMENT $236A forward
COMMENT $2375 forward
COMMENT $2380 forward
COMMENT $238B forward
COMMENT $2396 forward
COMMENT $23A1 forward
COMMENT $23AC forward
COMMENT $23B7 forward
COMMENT $23C2 forward
COMMENT $23CD forward
COMMENT $23D8 forward
COMMENT $23E3 forward
COMMENT $23EE forward
COMMENT $23F9 forward
COMMENT $2404 forward
COMMENT $240F forward
COMMENT $241A forward
COMMENT $2425 forward
COMMENT $2430 forward
COMMENT $243B forward
COMMENT $2446 forward
COMMENT $2451 forward
COMMENT $245C forward
COMMENT $2467 forward
COMMENT $2472 forward
COMMENT $247D forward
COMMENT $2488 forward
COMMENT $2493 forward
COMMENT $249E forward
COMMENT $24A9 forward
COMMENT $24B4 forward
COMMENT $24BF forward
COMMENT $24CA forward
COMMENT $24D5 forward
COMMENT $24E0 forward
COMMENT $24EB forward
COMMENT $24F6 forward
COMMENT $2501 forward
COMMENT $250C forward
COMMENT $2517 forward
COMMENT $2522 forward
COMMENT $252D forward
COMMENT $2538 forward
COMMENT $2543 forward
COMMENT $254E forward
COMMENT $2559 forward
COMMENT $2564 forward
COMMENT $2572 forward
COMMENT $257D forward
COMMENT $2588 forward
COMMENT $2593 forward
COMMENT $259E forward
COMMENT $25A9 forward
COMMENT $25B4 forward
COMMENT $25BF forward
COMMENT $25CA forward
COMMENT $25D5 forward
COMMENT $25E0 forward
COMMENT $25EB forward
COMMENT $25F6 forward
COMMENT $2601 forward
COMMENT $260C forward
COMMENT $2617 forward
COMMENT $2622 forward
COMMENT $262D forward
COMMENT $2638 forward
COMMENT $2643 forward
COMMENT $264E forward
COMMENT $2659 forward
COMMENT $2664 forward
COMMENT $266F forward
COMMENT $267A forward
COMMENT $2685 forward
COMMENT $2690 forward
COMMENT $269B forward
COMMENT $26A6 forward
COMMENT $26B1 forward
COMMENT $26BC forward
COMMENT $26C7 forward
COMMENT $26D2 forward
COMMENT $26DD forward
COMMENT $26E8 forward
COMMENT $26F3 forward
COMMENT $26FE forward
COMMENT $2709 forward
COMMENT $2714 forward
COMMENT $271F forward
COMMENT $272A forward
COMMENT $2735 forward
COMMENT $2740 forward
COMMENT $274B forward
COMMENT $2756 forward
COMMENT $2761 forward
COMMENT $276C forward
COMMENT $277A forward
COMMENT $2785 forward
COMMENT $2790 forward
COMMENT $279B forward
COMMENT $27A6 forward
COMMENT $27B1 forward
COMMENT $27BC forward
COMMENT $27C7 forward
COMMENT $27D2 forward
COMMENT $27DD forward
COMMENT $27E8 forward
COMMENT $27F3 forward
COMMENT $27FE forward
COMMENT $2809 forward
COMMENT $2814 forward
COMMENT $281F forward
COMMENT $282A forward
COMMENT $2835 forward
COMMENT $2840 forward
COMMENT $284B forward
COMMENT $2856 forward
COMMENT $2861 forward
COMMENT $286C forward
COMMENT $2877 forward
COMMENT $2882 forward
COMMENT $288D forward
COMMENT $2898 forward
COMMENT $28A3 forward
COMMENT $28AE forward
COMMENT $28B9 forward
COMMENT $28C4 forward
COMMENT $28CF forward
COMMENT $28DA forward
COMMENT $28E5 forward
COMMENT $28F0 forward
COMMENT $28FB forward
COMMENT $2906 forward
COMMENT $2911 forward
COMMENT $291C forward
COMMENT $2927 forward
COMMENT $2932 forward
COMMENT $293D forward
COMMENT $2948 forward
COMMENT $2953 forward
COMMENT $295E forward
COMMENT $2969 forward
COMMENT $2974 forward
COMMENT $2982 forward
COMMENT $298D forward
COMMENT $2998 forward
COMMENT $29A3 forward
COMMENT $29AE forward
COMMENT $29B9 forward
COMMENT $29C4 forward
COMMENT $29CF forward
COMMENT $29DA forward
COMMENT $29E5 forward
COMMENT $29F0 forward
COMMENT $29FB forward
COMMENT $2A06 forward
COMMENT $2A11 forward
COMMENT $2A1C forward
COMMENT $2A27 forward
COMMENT $2A32 forward
COMMENT $2A3D forward
COMMENT $2A48 forward
COMMENT $2A53 forward
COMMENT $2A5E forward
COMMENT $2A69 forward
COMMENT $2A74 forward
COMMENT $2A7F forward
COMMENT $2A8A forward
COMMENT $2A95 forward
COMMENT $2AA0 forward
COMMENT $2AAB forward
COMMENT $2AB6 forward
COMMENT $2AC1 forward
COMMENT $2ACC forward
COMMENT $2AD7 forward
COMMENT $2AE2 forward
COMMENT $2AED forward
COMMENT $2AF8 forward
COMMENT $2B03 forward
COMMENT $2B0E forward
COMMENT $2B19 forward
COMMENT $2B24 forward
COMMENT $2B2F forward
COMMENT $2B3A forward
COMMENT $2B45 forward
COMMENT $2B50 forward
COMMENT $2B5B forward
COMMENT $2B66 forward
COMMENT $2B71 forward
COMMENT $2B7C forward
COMMENT $2B8A forward
COMMENT $2B95 forward
COMMENT $2BA0 forward
COMMENT $2BAB forward
COMMENT $2BB6 forward
COMMENT $2BC1 forward
COMMENT $2BCC forward
COMMENT $2BD7 forward
COMMENT $2BE2 forward
COMMENT $2BED forward
COMMENT $2BF8 forward
COMMENT $2C03 forward
COMMENT $2C0E forward
COMMENT $2C19 forward
COMMENT $2C24 forward
COMMENT $2C2F forward
COMMENT $2C3A forward
COMMENT $2C45 forward
COMMENT $2C50 forward
COMMENT $2C5B forward
COMMENT $2C66 forward
COMMENT $2C71 forward
COMMENT $2C7C forward
COMMENT $2C87 forward
COMMENT $2C92 forward
COMMENT $2C9D forward
COMMENT $2CA8 forward
COMMENT $2CB3 forward
COMMENT $2CBE forward
COMMENT $2CC9 forward
COMMENT $2CD4 forward
COMMENT $2CDF forward
COMMENT $2CEA forward
COMMENT $2CF5 forward
COMMENT $2D00 forward
COMMENT $2D0B forward
COMMENT $2D16 forward
COMMENT $2D21 forward
COMMENT $2D2C forward
COMMENT $2D37 forward
COMMENT $2D42 forward
COMMENT $2D4D forward
COMMENT $2D58 forward
COMMENT $2D63 forward
COMMENT $2D6E forward
COMMENT $2D79 forward
COMMENT $2D84 forward
COMMENT $2D92 forward
COMMENT $2D9D forward
COMMENT $2DA8 forward
COMMENT $2DB3 forward
COMMENT $2DBE forward
COMMENT $2DC9 forward
COMMENT $2DD4 forward
COMMENT $2DDF forward
COMMENT $2DEA forward
COMMENT $2DF5 forward
COMMENT $2E00 forward
COMMENT $2E0B forward
COMMENT $2E16 forward
COMMENT $2E21 forward
COMMENT $2E2C forward
COMMENT $2E37 forward
COMMENT $2E42 forward
COMMENT $2E4D forward
COMMENT $2E58 forward
COMMENT $2E63 forward
COMMENT $2E6E forward
COMMENT $2E79 forward
COMMENT $2E84 forward
COMMENT $2E8F forward
COMMENT $2E9A forward
COMMENT $2EA5 forward
COMMENT $2EB0 forward
COMMENT $2EBB forward
COMMENT $2EC6 forward
COMMENT $2ED1 forward
COMMENT $2EDC forward
COMMENT $2EE7 forward
COMMENT $2EF2 forward
COMMENT $2EFD forward
COMMENT $2F08 forward
COMMENT $2F13 forward
COMMENT $2F1E forward
COMMENT $2F29 forward
COMMENT $2F34 forward
COMMENT $2F3F forward
COMMENT $2F4A forward
COMMENT $2F55 forward
COMMENT $2F60 forward
COMMENT $2F6B forward
COMMENT $2F76 forward
COMMENT $2F81 forward
COMMENT $2F8C forward
COMMENT $2F99 forward
COMMENT $2F9D forward
COMMENT $2FA1 forward
COMMENT $2FA5 forward
COMMENT $2FA9 forward
COMMENT $2FAD forward
COMMENT $2FB1 forward
COMMENT $2FB5 forward
COMMENT $2FB9 forward
COMMENT $2FBD forward
COMMENT $2FC1 forward
COMMENT $2FC5 forward
COMMENT $2FC9 forward
COMMENT $2FCD forward
COMMENT $2FD1 forward
COMMENT $2FD5 forward
COMMENT $2FD9 forward
COMMENT $2FDD forward
COMMENT $2FE1 forward
COMMENT $2FE5 forward
COMMENT $2FE9 forward
COMMENT $2FED forward
COMMENT $2FF1 forward
COMMENT $2FF5 forward
COMMENT $2FF9 forward
COMMENT $2FFD forward
COMMENT $3001 forward
COMMENT $3005 forward
COMMENT $3009 forward
COMMENT $300D forward
COMMENT $3011 forward
COMMENT $3015 forward
COMMENT $3019 forward
COMMENT $301D forward
COMMENT $3021 forward
COMMENT $3025 forward
COMMENT $3029 forward
COMMENT $302D forward
COMMENT $3031 forward
COMMENT $3035 forward
COMMENT $3039 forward
COMMENT $303D forward
COMMENT $3041 forward
COMMENT $3045 forward
COMMENT $3049 forward
COMMENT $304D forward
COMMENT $3051 forward
COMMENT $3055 forward
COMMENT $3059 forward
COMMENT $305D forward
COMMENT_LINE $3061 bug wenn animated tile is ganz links clipped!
COMMENT_LINE $3061 DEEP_MACRO_USAGE = 1
COMMENT_LINE $3061 steps for a game
COMMENT_LINE $3061 a) animated tiles
COMMENT_LINE $3061 b) main character
COMMENT_LINE $3061 c) other sprites
COMMENT_LINE $3061 d) collision detection
COMMENT_LINE $3061 e) gravity
COMMENT_LINE $3061 f) sound (music & noise)
COMMENT_LINE $3061 * change grid to 10x10
COMMENT_LINE $3061 position of grid non tile dependend
COMMENT_LINE $3061 reuse of clipped todo:
COMMENT_LINE $3061 3 vlists
COMMENT_LINE $3061 1 clipped horizontal
COMMENT_LINE $3061 1 clipped vertical
COMMENT_LINE $3061 one result (+corner)
COMMENT_LINE $3061 * simple clip for rectangle
COMMENT_LINE $3061 more performant tile list
COMMENT_LINE $3061 * for move to pos, use as "variable" the scale, NOT the strength!
COMMENT_LINE $3061 only possible if both "abs" pos < 64
COMMENT_LINE $3061 otherwise not feasable, since strength of x y is in general different
COMMENT_LINE $3061 might be doable using a translation table, since there are only 15 different x/y positions (grid lower left points)
COMMENT_LINE $3061 using the the "greater" strength "127" and than the scale as index for the lower strength
COMMENT_LINE $3061 thus 15 different scale values and for each scale 15 "lower" values
COMMENT_LINE $3061 that would only need 15*15 bytes, a fast lookup table
COMMENT_LINE $3061 and save cycles on every positioning!
COMMENT_LINE $3061 for that to work I have to do TWO moves for eac position
COMMENT_LINE $3061 - one for coarse
COMMENT_LINE $3061 - one for fine
COMMENT_LINE $3061 positions
COMMENT_LINE $3061 * double / quadrouble
COMMENT_LINE $3061 tile lists
COMMENT_LINE $3061 which use always double strength to draw
COMMENT_LINE $3061 clipping mus respect that
COMMENT_LINE $3061 * all vectors have "double strength
COMMENT_LINE $3061 only when clipping, all coordinates get halfed
COMMENT_LINE $3061 simple format -> also for non simple format -> faster?
COMMENT_LINE $3061 double all strength
COMMENT_LINE $3061 do multi tiles, when not clipped
COMMENT_LINE $3061 Level definition:
COMMENT_LINE $3061 startLine0
COMMENT_LINE $3061 dw #startNextLine1
COMMENT_LINE $3061 db tile1, widthInCoords, widthInPixel (max 256 = 16 tiles)
COMMENT_LINE $3061 db tile2, widthInCoords, widthInPixel (max 256 = 16 tiles)
COMMENT_LINE $3061 db -1 ; end of line
COMMENT_LINE $3061 ...
COMMENT_LINE $3061 startLine1
COMMENT_LINE $3061 dw #startNextLine2
COMMENT_LINE $3061 db tile1, widthInCoords, widthInPixel (max 256 = 16 tiles)
COMMENT_LINE $3061 db tile2, widthInCoords, widthInPixel (max 256 = 16 tiles)
COMMENT_LINE $3061 db -1 ; end of line
COMMENT_LINE $3061 ...
COMMENT_LINE $3061 ***************************************************************************
COMMENT_LINE $3061 DEFINE SECTION
COMMENT_LINE $3061 ***************************************************************************
COMMENT_LINE $3061 include line ->                     include  "varsAndRAM.i"
COMMENT_LINE $3061 load vectrex bios routine definitions
COMMENT_LINE $3061 include line ->                     INCLUDE  "VECTREX.I"                  ; vectrex function includes
COMMENT_LINE $3061 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $3061 this file contains includes for vectrex BIOS functions and variables      ;
COMMENT_LINE $3061 it was written by Bruce Tomlin, slighte changed by Malban                 ;
COMMENT_LINE $3061 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $3061 $C839                             ;Pointer to copyright string during startup
COMMENT_LINE $3061 $C83B                             ;High score cold-start flag (=0 if valid)
COMMENT_LINE $3061 $C83C                             ;temp byte
COMMENT_LINE $3061 $C843                             ;        register 9
COMMENT_LINE $3061 $C844                             ;        register 8
COMMENT_LINE $3061 $C848                             ;        register 4
COMMENT_LINE $3061 $C849                             ;        register 3
COMMENT_LINE $3061 $C84A                             ;        register 2
COMMENT_LINE $3061 $C84C                             ;        register 0
COMMENT_LINE $3061 $C85E                             ;Scratch 'score' storage for Display_Option (7 bytes)
COMMENT_LINE $3061 $C868...$C876                             ;Unused?
COMMENT_LINE $3061 $C878                             ;Unused?
COMMENT_LINE $3061 $C880 - $CBEA is user RAM                            ;
COMMENT_LINE $3061 0 sample/hold (0=enable  mux 1=disable mux)
COMMENT_LINE $3061 1 mux sel 0
COMMENT_LINE $3061 2 mux sel 1
COMMENT_LINE $3061 3 sound BC1
COMMENT_LINE $3061 4 sound BDIR
COMMENT_LINE $3061 5 comparator input
COMMENT_LINE $3061 6 external device (slot pin 35) initialized to input
COMMENT_LINE $3061 7 /RAMP
COMMENT_LINE $3061 0 PA latch enable
COMMENT_LINE $3061 1 PB latch enable
COMMENT_LINE $3061 2 \                     110=output to CB2 under control of phase 2 clock
COMMENT_LINE $3061 3  > shift register control     (110 is the only mode used by the Vectrex ROM)
COMMENT_LINE $3061 4 /
COMMENT_LINE $3061 5 0=t2 one shot                 1=t2 free running
COMMENT_LINE $3061 6 0=t1 one shot                 1=t1 free running
COMMENT_LINE $3061 7 0=t1 disable PB7 output       1=t1 enable PB7 output
COMMENT_LINE $3061 0 CA1 control     CA1 -> SW7    0=IRQ on low 1=IRQ on high
COMMENT_LINE $3061 1 \
COMMENT_LINE $3061 2  > CA2 control  CA2 -> /ZERO  110=low 111=high
COMMENT_LINE $3061 3 /
COMMENT_LINE $3061 4 CB1 control     CB1 -> NC     0=IRQ on low 1=IRQ on high
COMMENT_LINE $3061 5 \
COMMENT_LINE $3061 6  > CB2 control  CB2 -> /BLANK 110=low 111=high
COMMENT_LINE $3061 7 /
COMMENT_LINE $3061 bit                             cleared by
COMMENT_LINE $3061 0 CA2 interrupt flag            reading or writing port A I/O
COMMENT_LINE $3061 1 CA1 interrupt flag            reading or writing port A I/O
COMMENT_LINE $3061 2 shift register interrupt flag reading or writing shift register
COMMENT_LINE $3061 3 CB2 interrupt flag            reading or writing port B I/O
COMMENT_LINE $3061 4 CB1 interrupt flag            reading or writing port A I/O
COMMENT_LINE $3061 5 timer 2 interrupt flag        read t2 low or write t2 high
COMMENT_LINE $3061 6 timer 1 interrupt flag        read t1 count low or write t1 high
COMMENT_LINE $3061 7 IRQ status flag               write logic 0 to IER or IFR bit
COMMENT_LINE $3061 0 CA2 interrupt enable
COMMENT_LINE $3061 1 CA1 interrupt enable
COMMENT_LINE $3061 2 shift register interrupt enable
COMMENT_LINE $3061 3 CB2 interrupt enable
COMMENT_LINE $3061 4 CB1 interrupt enable
COMMENT_LINE $3061 5 timer 2 interrupt enable
COMMENT_LINE $3061 6 timer 1 interrupt enable
COMMENT_LINE $3061 7 IER set/clear control
COMMENT_LINE $3061 Rot_VL_dft      EQU     $F637   ;
COMMENT_LINE $3061 Rot_VL_ab       EQU     $F610   ;
COMMENT_LINE $3061 Rot_VL          EQU     $F616   ;
COMMENT_LINE $3061 Rot_VL_Mode_a   EQU     $F61F   ;
COMMENT_LINE $3061 Rot_VL_Mode     EQU     $F62B   ;
COMMENT_LINE $3061 Rot_VL_dft      EQU     $F637   ;
COMMENT_LINE $3061 include line ->                     INCLUDE  "MAKROS.I"                   ; vectrex function includes
COMMENT_LINE $3061 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $3061 this file contains makro definitions of vectrex BIOS functions, these are ;
COMMENT_LINE $3061 sometimes exact clones of the BIOS functions                              ;
COMMENT_LINE $3061 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $3061 most of these macros are taken from the ROM to avoid
COMMENT_LINE $3061 all those JSR / RTS, in order to save time (over space)
COMMENT_LINE $3061 ***************************************************************************
COMMENT_LINE $3061 ***************************************************************************
COMMENT_LINE $3061 ***************************************************************************
COMMENT_LINE $3061 ***************************************************************************
COMMENT_LINE $3061 ***************************************************************************
COMMENT_LINE $3061 ***************************************************************************
COMMENT_LINE $3061 ***************************************************************************
COMMENT_LINE $3061 ***************************************************************************
COMMENT_LINE $3061 ***************************************************************************
COMMENT_LINE $3061 ***************************************************************************
COMMENT_LINE $3061 ***************************************************************************
COMMENT_LINE $3061 convenient macros as seen in:
COMMENT_LINE $3061 see: http://www.sbprojects.com/sbasm/6809.php
COMMENT_LINE $3061 ***************************************************************************
COMMENT_LINE $3061 Accumulator D compound instructions
COMMENT_LINE $3061 Set and Clear instructions
COMMENT_LINE $3061 Increment and decrement instructions
COMMENT_LINE $3061 Stack instructions
COMMENT_LINE $3061 Please note that PSHU and PULU are not included as compound instructions.
COMMENT_LINE $3061 This is to avoid confusion with the original PSHU and PULU instructions,
COMMENT_LINE $3061 which require you to specify the registers to be pushed or pulled.
COMMENT_LINE $3061 Transfer and miscellaneous instructions
COMMENT_LINE $3061 ***************************************************************************
COMMENT_LINE $3061 ***************************************************************************
COMMENT_LINE $3061 ***************************************************************************
COMMENT_LINE $3061 ***************************************************************************
COMMENT_LINE $3061 entry:   D has clip_counter
COMMENT_LINE $3061 v0 is set
COMMENT_LINE $3061 result: v1 = y1, x1
COMMENT_LINE $3061 v2 = y2, x2
COMMENT_LINE $3061 get calculated
COMMENT_LINE $3061 LEFT RIGHT
COMMENT_LINE $3061 this one assumes X0 is either 64, 32 or 16
COMMENT_LINE $3061 divide is pretty fast than...
COMMENT_LINE $3061 ds       _pat1,1
COMMENT_LINE $3061 ds       _y1,1
COMMENT_LINE $3061 ds       _x1,1
COMMENT_LINE $3061 ds       _pat2,1
COMMENT_LINE $3061 ds       _y2,1
COMMENT_LINE $3061 ds       _x2,1
COMMENT_LINE $3061 ***************************************************************************
COMMENT_LINE $3061 divides D by tmp1, result in B
COMMENT_LINE $3061 uses divide_tmp as storage
COMMENT_LINE $3061 only 8 bit in tmp1, but must be manually poked to tmp1 + 1
COMMENT_LINE $3061 sign is correctly handled
COMMENT_LINE $3061 can probably be optimized like hell
COMMENT_LINE $3061 perhaps only nearing the result
COMMENT_LINE $3061 using 2 shifts and a plus
COMMENT_LINE $3061 might be worth a try,
COMMENT_LINE $3061 see vectrex emulator for algorithm...
COMMENT_LINE $3061 could be implemented with a tabel, which in turn
COMMENT_LINE $3061 could be caclulated on the fly... (upon startup)
COMMENT_LINE $3061 this makro divides exact, but slow
COMMENT_LINE $3061 ***************************************************************************
COMMENT_LINE $3061 entry:   D has clip_counter
COMMENT_LINE $3061 v0 is set
COMMENT_LINE $3061 result: v1 = y1, x1
COMMENT_LINE $3061 v2 = y2, x2
COMMENT_LINE $3061 get calculated
COMMENT_LINE $3061 this one assumes X0 is either 64, 32 or 16
COMMENT_LINE $3061 divide is pretty fast than...
COMMENT_LINE $3061 ds       _pat1,1
COMMENT_LINE $3061 ds       _y1,1
COMMENT_LINE $3061 ds       _x1,1
COMMENT_LINE $3061 ds       _pat2,1
COMMENT_LINE $3061 ds       _y2,1
COMMENT_LINE $3061 ds       _x2,1
COMMENT_LINE $3061 ***************************************************************************
COMMENT_LINE $3061 entry:   D has clip_counter - in vertical direction!
COMMENT_LINE $3061 clip_test is set
COMMENT_LINE $3061 v0 is set
COMMENT_LINE $3061 result: v1 = y1, x1
COMMENT_LINE $3061 v2 = y2, x2
COMMENT_LINE $3061 get calculated
COMMENT_LINE $3061 this one assumes X0 is either 64, 32 or 16
COMMENT_LINE $3061 divide is pretty fast than...
COMMENT_LINE $3061 include line ->                     INCLUDE  "MY_MAKROS.I"                ; vectrex function includes
COMMENT_LINE $3061 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $3061 this file contains private makros, some are taken from the BIOS of vectrex;
COMMENT_LINE $3061 and changed slightly to be more speedy, other were written alltogether by ;
COMMENT_LINE $3061 me, some of these are even obsolete... but all should be in a working     ;
COMMENT_LINE $3061 state                                                                     ;
COMMENT_LINE $3061 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $3061 **************************************************************************
COMMENT_LINE $3061 following are some 'private' makro definitions
COMMENT_LINE $3061 some heavily optimized for speed :-(
COMMENT_LINE $3061 needs: DP = D0
COMMENT_LINE $3061 ***************************************************************************
COMMENT_LINE $3061 ***************************************************************************
COMMENT_LINE $3061 reset integrators
COMMENT_LINE $3061 ***************************************************************************
COMMENT_LINE $3061 prints the numbers in a and b at a location given
COMMENT_LINE $3061 prints in hex
COMMENT_LINE $3061 ***************************************************************************
COMMENT_LINE $3061 Variable / RAM SECTION
COMMENT_LINE $3061 ***************************************************************************
COMMENT_LINE $3061 insert your variables (RAM usage) in the BSS section
COMMENT_LINE $3061 user RAM starts at $c880
COMMENT $C918 and Y, for checking, we don't want an autorun feature...
COMMENT $C919 last joystick position X,
COMMENT $C91A position in level, that is the upper left corner
COMMENT $C91B position in level, that is the upper left corner
COMMENT $C91D fine "pixel" for scrolling
COMMENT $C91E size depends on tile map definition
COMMENT $C923 position where the next tile is printed at
COMMENT_LINE $C938 lookaHead buffers
COMMENT $C938 position where the next tile is printed at, used by look ahead
COMMENT_LINE $C93B clipping
COMMENT $C945 "round" counter of scroll text -> if 1 (or higher) the scrolltext has been fully shown
COMMENT $C95C maximum 20 vectors to clip - also used as buffer
COMMENT $C998 maximum 20 vectors to clip - also used as buffer
COMMENT $C9D4 maximum 20 vectors to clip - also used as buffer
COMMENT_LINE $CA10 the following values determine the "strength" of the
COMMENT_LINE $CA10 maximum move for the grid to be build
COMMENT_LINE $CA10 the size of the grid should always be chosen with maximum strength and manipulated via scale
COMMENT_LINE $CA10 max strength in anything is ALWAYS preferable to larger scale!
COMMENT_LINE $CA10 determines the number of tiles on screen
COMMENT_LINE $CA10 size of tiles in "pixel", size here means in relation to position in grid
COMMENT_LINE $CA10 a "pixel" is a 1 step move in the "SCALE_MOVE" scale
COMMENT_LINE $CA10 the "hardware" size of a tile is determinded by the scale "SCALE_VLIST", which should be much much smaller than
COMMENT_LINE $CA10 the move scale.
COMMENT_LINE $CA10 The relation between the two is experimentally determined!
COMMENT_LINE $CA10 e.g. 254 / 12 = 21 => tile width in scales
COMMENT_LINE $CA10 these are the values added by a single tile to the position
COMMENT_LINE $CA10 exact should be whats commented out
COMMENT_LINE $CA10 16 for easier calc
COMMENT_LINE $CA10 start pos of draw is uper left corner
COMMENT_LINE $CA10 in cartesian minX, maxY
COMMENT_LINE $CA10 following not done!
COMMENT_LINE $CA10 ***************************************************************************
COMMENT_LINE $CA10 CODE SECTION
COMMENT_LINE $CA10 ***************************************************************************
COMMENT_LINE $3061 here the cartridge program starts off
COMMENT $3061 ONE_MINUTE ; ten seconds
FORCE_SYMBOL $3064 bigCounter
FORCE_NO_SYMBOL $3067
FORCE_SYMBOL $306A c_bigCounter
FORCE_SYMBOL $306D simStage
COMMENT $3070 default speed ONE
FORCE_NO_SYMBOL $3070
FORCE_SYMBOL $3072 speedy
FORCE_SYMBOL $3075 speedx
FORCE_SYMBOL $3078 level0
FORCE_SYMBOL $307B currentLevel
FORCE_NO_SYMBOL $307E
FORCE_SYMBOL $3083 yCoarse
FORCE_NO_SYMBOL $3086
FORCE_SYMBOL $3089 yFine
FORCE_SYMBOL $308C level0
FORCE_NO_SYMBOL $3090
FORCE_SYMBOL $3092 levelYSize
COMMENT_LINE $3095 adjust fine
FORCE_SYMBOL $3095 STEP_HORIZONTAL_TILE_IN_PIXEL
FORCE_SYMBOL $3097 xFine
FORCE_SYMBOL $309B rightclip
FORCE_NO_SYMBOL $309E
FORCE_SYMBOL $30A0 animationDelay
COMMENT $30A3 the number of animation steps for tiles which use counter number 4
FORCE_NO_SYMBOL $30A3
FORCE_SYMBOL $30A5 counter4
FORCE_SYMBOL $30A9 bigCounter
FORCE_NO_SYMBOL $30AC
FORCE_SYMBOL $30AF bigCounter
FORCE_SYMBOL $30B4 demoRunningFlag
FORCE_SYMBOL $30B7 c_bigCounter
FORCE_NO_SYMBOL $30BA
FORCE_SYMBOL $30BD c_bigCounter
FORCE_SYMBOL $30C0 animationDelay
FORCE_NO_SYMBOL $30C5
FORCE_SYMBOL $30C7 animationDelay
FORCE_SYMBOL $30CA counter4
COMMENT $30CF the number of animation steps for tiles which use counter number 4
FORCE_NO_SYMBOL $30CF
FORCE_SYMBOL $30D1 counter4
FORCE_SYMBOL $30D4 handleMove
FORCE_SYMBOL $30D7 Reset_Pen
COMMENT $30DA Sets the intensity of the vector beam to $5f
FORCE_SYMBOL $30DA Intensity_5F
FORCE_SYMBOL $30DD displayFixedWorld_Clipped
FORCE_NO_SYMBOL $30E0
COMMENT $30E2 /BLANK low and /ZERO low
FORCE_SYMBOL $30E2 VIA_cntl
FORCE_SYMBOL $30E5 simStage
FORCE_SYMBOL $30EA simStages
FORCE_NO_SYMBOL $30EF
FORCE_NO_SYMBOL $30F1
FORCE_SYMBOL $30F7 simStage
FORCE_NO_SYMBOL $30FA
FORCE_SYMBOL $30FD c_bigCounter
FORCE_SYMBOL $3100 simStages
FORCE_SYMBOL $3103 c_bigCounter
FORCE_NO_SYMBOL $3106
FORCE_SYMBOL $310B simStage
FORCE_NO_SYMBOL $310E
FORCE_SYMBOL $3111 c_bigCounter
FORCE_NO_SYMBOL $3114
FORCE_NO_SYMBOL $3116
FORCE_SYMBOL $3118 Vec_Joy_1_Y
FORCE_SYMBOL $311B Vec_Joy_1_X
COMMENT_LINE $311F upTo, ypos,xpos
COMMENT_LINE $313F end of MERRY
COMMENT_LINE $315B start of XMAS
COMMENT_LINE $315F 0,0
COMMENT_LINE $316B ***************************************************************************
COMMENT_LINE $316B queries joystick and
COMMENT_LINE $316B sets coarse and fine accordingly
FORCE_SYMBOL $316B query_joystick_analog
FORCE_SYMBOL $316E currentLevel
COMMENT $3171 only jump if last joy pos was zero (needed for testing later)
FORCE_SYMBOL $3171 last_joy_x
COMMENT $3174 load joystick 1 position X to A
FORCE_SYMBOL $3174 Vec_Joy_1_X
COMMENT $3177 store this joystick position
FORCE_SYMBOL $3177 last_joy_x
COMMENT $317A no x joystick input available
COMMENT $317C joystick moved to left
COMMENT $317E load fine X
FORCE_SYMBOL $317E xFine
FORCE_SYMBOL $3181 speedx
COMMENT $3184 store it
FORCE_SYMBOL $3184 xFine
COMMENT $3187 compare with max
FORCE_SYMBOL $3187 FINE_MAX_HORIZONTAL
FORCE_SYMBOL $318B FINE_MAX_HORIZONTAL
FORCE_SYMBOL $318D xFine
COMMENT $3190 increase coarse
FORCE_SYMBOL $3190 xCoarse
COMMENT $3193 load coarse
FORCE_SYMBOL $3193 xCoarse
COMMENT $3196 and add width of screen
FORCE_SYMBOL $3196 ALL_TILES_HORIZONTAL
COMMENT $3198 if that is longer than level width
FORCE_NO_SYMBOL $3198
COMMENT $319C decrease coarse (stay at border)
FORCE_SYMBOL $319C xCoarse
FORCE_SYMBOL $319F FINE_MAX_HORIZONTAL
COMMENT_LINE $31A1 suba speedx
FORCE_SYMBOL $31A1 xFine
COMMENT $31A6 load fine x
FORCE_SYMBOL $31A6 xFine
FORCE_SYMBOL $31A9 speedx
COMMENT $31AC store it
FORCE_SYMBOL $31AC xFine
COMMENT $31AF if still positive - everything is fine -> branch
FORCE_SYMBOL $31B1 FINE_MAX_HORIZONTAL
COMMENT $31B3 store it
FORCE_SYMBOL $31B3 xFine
COMMENT $31B6 and decrease coarse
FORCE_SYMBOL $31B6 xCoarse
COMMENT $31B9 if coarse positive -> fine again
COMMENT $31BB otherwise we reached the (0) end of the level and must stay here!
FORCE_SYMBOL $31BB xCoarse
FORCE_SYMBOL $31BE xFine
COMMENT_LINE $31C3 adjust fine
FORCE_SYMBOL $31C3 STEP_HORIZONTAL_TILE_IN_PIXEL
FORCE_SYMBOL $31C5 xFine
FORCE_SYMBOL $31C9 rightclip
COMMENT $31CC load joystick 1 position Y to A
FORCE_SYMBOL $31CC Vec_Joy_1_Y
COMMENT $31CF only jump if last joy pos was zero
FORCE_SYMBOL $31CF last_joy_y
COMMENT $31D2 store this joystick position
FORCE_SYMBOL $31D2 last_joy_y
COMMENT $31D5 no joystick input available
COMMENT $31D7 joystick moved to down
FORCE_SYMBOL $31D9 yFine
FORCE_SYMBOL $31DC speedy
FORCE_SYMBOL $31DF yFine
FORCE_SYMBOL $31E4 FINE_MAX_VERTICAL
FORCE_SYMBOL $31E6 yFine
FORCE_SYMBOL $31E9 yCoarse
FORCE_SYMBOL $31EE yCoarse
FORCE_SYMBOL $31F1 yFine
FORCE_SYMBOL $31F6 yFine
FORCE_SYMBOL $31F9 speedy
FORCE_SYMBOL $31FC yFine
FORCE_SYMBOL $31FF FINE_MAX_VERTICAL
FORCE_SYMBOL $3203 FINE_MAX_VERTICAL
FORCE_SYMBOL $3205 yFine
FORCE_SYMBOL $3208 yCoarse
FORCE_SYMBOL $320B yCoarse
FORCE_SYMBOL $320E ALL_TILES_VERTICAL
FORCE_NO_SYMBOL $3210
FORCE_SYMBOL $3214 yCoarse
FORCE_SYMBOL $3217 FINE_MAX_VERTICAL
COMMENT_LINE $3219 suba speedy
FORCE_SYMBOL $3219 yFine
COMMENT_LINE $321E adjust fine
FORCE_SYMBOL $321E STEP_VERTICAL_TILE_IN_PIXEL
FORCE_SYMBOL $3220 yFine
FORCE_NO_SYMBOL $3225
FORCE_SYMBOL $3228 topclip
COMMENT_LINE $322C ***************************************************************************
COMMENT_LINE $322C query_joystick:
COMMENT_LINE $322C QUERY_JOYSTICK
COMMENT_LINE $322C rts
COMMENT_LINE $322C The joystick enable flags (C81F-C822) must be initialized to one of   ;
COMMENT_LINE $322C the following values:                                                 ;
COMMENT_LINE $322C ;
COMMENT_LINE $322C 0 - ignore; return no value.                                    ;
COMMENT_LINE $322C 1 - return state of console 1 left/right position.              ;
COMMENT_LINE $322C 3 - return state of console 1 up/down position.
FORCE_NO_SYMBOL $322C
FORCE_NO_SYMBOL $322E
FORCE_NO_SYMBOL $3231
FORCE_NO_SYMBOL $3233
FORCE_NO_SYMBOL $3236
FORCE_NO_SYMBOL $3238
FORCE_SYMBOL $323B speedx
FORCE_SYMBOL $323E speedy
COMMENT_LINE $3241 jsr      Joy_Analog
FORCE_SYMBOL $3241 simAnalag
COMMENT $3244 load joystick 1 position Y to A
FORCE_SYMBOL $3244 Vec_Joy_1_Y
FORCE_SYMBOL $3247 anay
FORCE_SYMBOL $324A Vec_Joy_1_X
FORCE_SYMBOL $324D anax
FORCE_NO_SYMBOL $3253
FORCE_NO_SYMBOL $3257
FORCE_SYMBOL $3259 speedx
FORCE_NO_SYMBOL $325E
FORCE_NO_SYMBOL $3262
FORCE_SYMBOL $3264 speedx
FORCE_NO_SYMBOL $3269
FORCE_NO_SYMBOL $326D
FORCE_SYMBOL $326F speedx
FORCE_NO_SYMBOL $3274
FORCE_NO_SYMBOL $3278
FORCE_SYMBOL $327A speedx
FORCE_NO_SYMBOL $327F
FORCE_NO_SYMBOL $3283
FORCE_SYMBOL $3285 speedx
FORCE_SYMBOL $328A anay
FORCE_NO_SYMBOL $3290
FORCE_NO_SYMBOL $3294
FORCE_SYMBOL $3296 speedy
FORCE_NO_SYMBOL $329B
FORCE_NO_SYMBOL $329F
FORCE_SYMBOL $32A1 speedy
FORCE_NO_SYMBOL $32A6
FORCE_NO_SYMBOL $32AA
FORCE_SYMBOL $32AC speedy
FORCE_NO_SYMBOL $32B1
FORCE_NO_SYMBOL $32B5
FORCE_SYMBOL $32B7 speedy
FORCE_NO_SYMBOL $32BC
FORCE_NO_SYMBOL $32C0
FORCE_SYMBOL $32C2 speedy
COMMENT_LINE $32C7 TODO speed changes must respect, that sum of speeds
COMMENT_LINE $32C7 can still sum up to FINE_MAX!
COMMENT_LINE $32C7 or fine max must be tested with overflow instead of equal!
COMMENT_LINE $32C7 QUERY_JOYSTICK
COMMENT_LINE $32C7 lda #1
COMMENT_LINE $32C7 sta speedx
COMMENT_LINE $32C7 sta speedy
COMMENT_LINE $32C8 include line ->                     include  "clipLeft.i"
COMMENT_LINE $32C8 -------------------------------------------------------------------------------------------
COMMENT_LINE $32C8 -------------------------------------------------------------------------------------------
COMMENT_LINE $32C8 -------------------------------------------------------------------------------------------
COMMENT_LINE $32C8 -------------------------------------------------------------------------------------------
COMMENT_LINE $32C8 -------------------------------------------------------------------------------------------
COMMENT_LINE $32C8 -------------------------------------------------------------------------------------------
COMMENT_LINE $32C8 -------------------------------------------------------------------------------------------
COMMENT_LINE $32C8 -------------------------------------------------------------------------------------------
COMMENT_LINE $32C8 D = clipping place (in scale of added strengths of vector X positions)
COMMENT_LINE $32C8 X = Vector list
COMMENT_LINE $32C8 U = pointer to targetlist
COMMENT_LINE $32C8 return
COMMENT_LINE $32C8 result list has following format
COMMENT_LINE $32C8 DB pattern, y, x
COMMENT_LINE $32C8 DB pattern, y, x
COMMENT_LINE $32C8 DB ... (till counter is 1)
COMMENT_LINE $32C8 simple is "simple"
COMMENT_LINE $32C8 either x0 OR y0 is zero
COMMENT_LINE $32C8 than there is no divide needed!
COMMENT_LINE $32C8 every right angled vectorlist fullfills this!
COMMENT_LINE $32C8 -------------------------------------------------------------------------------------------
COMMENT_LINE $32C8 -------------------------------------------------------------------------------------------
COMMENT_LINE $32C8 -------------------------------------------------------------------------------------------
COMMENT_LINE $32C8 macro call ->                     HELP_CALC_P2
COMMENT_LINE $32C8 first setup x1 and x2 according to clipping
COMMENT_LINE $32C8 information
FORCE_SYMBOL $32C8 BORDER
COMMENT $32CB part of vector that is visible (or vice versa)
FORCE_SYMBOL $32CB _x2
FORCE_SYMBOL $32CD x0
COMMENT $32D1 part of vector that is invisible (or vice versa)
FORCE_SYMBOL $32D1 _x1
COMMENT_LINE $32D3 now we have to calculate the Y part of the two
COMMENT_LINE $32D3 halves
COMMENT_LINE $32D3 Y1/X1 and Y2/X2 should be like Y0/X0
COMMENT_LINE $32D3 X0 = original length
COMMENT_LINE $32D3 than Y1 = Y0*X1/X0
COMMENT_LINE $32D3 than Y2 = Y0*X2/X0
COMMENT_LINE $32D3 but we know that Y1 + Y2 = Y0
COMMENT_LINE $32D3 -> Y2 = Y0 - Y1
COMMENT_LINE $32D3 we do div and mul unsigned
COMMENT_LINE $32D3 so check for signness here
COMMENT_LINE $32D3 and adjust later
FORCE_SYMBOL $32D4 neggi
FORCE_SYMBOL $32D7 x0
FORCE_SYMBOL $32DC neggi
FORCE_NO_SYMBOL $32E0
FORCE_NO_SYMBOL $32E4
FORCE_NO_SYMBOL $32EA
FORCE_NO_SYMBOL $32EE
FORCE_NO_SYMBOL $32F2
COMMENT_LINE $32F8 if vectorlist is correct,
COMMENT_LINE $32F8 than here is either +127 or - 127, both are calculated by DIF 128
FORCE_SYMBOL $32F8 y0
FORCE_SYMBOL $32FD neggi
FORCE_SYMBOL $3301 _x1
FORCE_SYMBOL $3305 neggi
COMMENT $330A this divides d by 64
COMMENT $330B result in A
COMMENT $330E and once again hence 128
FORCE_SYMBOL $330F neggi
COMMENT $3315 store y1
FORCE_SYMBOL $3315 _y1
COMMENT $3317 -y1 + y0 = y0 - y1 = y2
FORCE_SYMBOL $3318 y0
COMMENT $331B store y2
FORCE_SYMBOL $331B _y2
FORCE_SYMBOL $331D end_macro2
COMMENT $3320 store y1
FORCE_SYMBOL $3320 _y1
COMMENT $3322 -y1 + y0 = y0 - y1 = y2
FORCE_SYMBOL $3323 y0
COMMENT $3326 store y2
FORCE_SYMBOL $3326 _y2
FORCE_SYMBOL $3328 end_macro2
FORCE_SYMBOL $332B y0
FORCE_SYMBOL $3330 neggi
FORCE_SYMBOL $3334 _x1
FORCE_SYMBOL $3338 neggi
COMMENT $333D this divides d by 64
COMMENT $333E result in A
FORCE_SYMBOL $3341 neggi
COMMENT $3347 store y1
FORCE_SYMBOL $3347 _y1
COMMENT $3349 -y1 + y0 = y0 - y1 = y2
FORCE_SYMBOL $334A y0
COMMENT $334D store y2
FORCE_SYMBOL $334D _y2
FORCE_SYMBOL $3351 y0
FORCE_SYMBOL $3356 neggi
FORCE_SYMBOL $335A _x1
FORCE_SYMBOL $335E neggi
FORCE_SYMBOL $3365 y0
FORCE_SYMBOL $336A neggi
FORCE_SYMBOL $336E _x1
FORCE_SYMBOL $3372 neggi
FORCE_SYMBOL $3379 y0
FORCE_SYMBOL $337E neggi
FORCE_SYMBOL $3382 _x1
FORCE_SYMBOL $3386 neggi
FORCE_SYMBOL $338D y0
FORCE_SYMBOL $3392 neggi
FORCE_SYMBOL $3396 _x1
FORCE_SYMBOL $339A neggi
COMMENT_LINE $339F macro call ->                     MY_LSR_D
COMMENT_LINE $33A1 macro call ->                     MY_LSR_D
COMMENT_LINE $33A3 macro call ->                     MY_LSR_D
COMMENT_LINE $33A5 macro call ->                     MY_LSR_D
COMMENT_LINE $33A7 macro call ->                     MY_LSR_D
FORCE_SYMBOL $33A9 neggi
COMMENT $33AF store y1
FORCE_SYMBOL $33AF _y1
COMMENT $33B1 -y1 + y0 = y0 - y1 = y2
FORCE_SYMBOL $33B2 y0
COMMENT $33B5 store y2
FORCE_SYMBOL $33B5 _y2
COMMENT_LINE $33B8 -------------------------------------------------------------------------------------------
COMMENT_LINE $33B8 macro call ->                     HELP_CALC_P2_exact
COMMENT_LINE $33B8 first setup x1 and x2 according to clipping
COMMENT_LINE $33B8 information
FORCE_SYMBOL $33B8 BORDER
COMMENT $33BB part of vector that is visible (or vice versa)
FORCE_SYMBOL $33BB _x2
FORCE_SYMBOL $33BD x0
COMMENT $33C1 part of vector that is invisible (or vice versa)
FORCE_SYMBOL $33C1 _x1
COMMENT_LINE $33C3 now we have to calculate the Y part of the two
COMMENT_LINE $33C3 halves
COMMENT_LINE $33C3 Y1/X1 and Y2/X2 should be like Y0/X0
COMMENT_LINE $33C3 X0 = original length
COMMENT_LINE $33C3 than Y1 = Y0*X1/X0
COMMENT_LINE $33C3 than Y2 = Y0*X2/X0
COMMENT_LINE $33C3 but we know that Y1 + Y2 = Y0
COMMENT_LINE $33C3 -> Y2 = Y0 - Y1
COMMENT_LINE $33C3 we do div and mul unsigned
COMMENT_LINE $33C3 so check for signness here
COMMENT_LINE $33C3 and adjust later
FORCE_SYMBOL $33C4 neggi
FORCE_SYMBOL $33C7 x0
FORCE_SYMBOL $33CC neggi
COMMENT $33D0 divide by tmp1 = x0
FORCE_SYMBOL $33D0 jtmp1
FORCE_SYMBOL $33D3 y0
FORCE_SYMBOL $33D8 neggi
FORCE_SYMBOL $33DC _x1
FORCE_SYMBOL $33E0 neggi
COMMENT_LINE $33E5 in d the value that must be divided
COMMENT_LINE $33E5 tmp1 is = up
COMMENT_LINE $33E5 macro call ->  MY_DIV_D_BY_TMP1_TO_B_UNSIGNED
FORCE_SYMBOL $33E5 divide_tmp
FORCE_SYMBOL $33ED divide_tmp
FORCE_NO_SYMBOL $33F0
FORCE_SYMBOL $33F6 divide_tmp
FORCE_SYMBOL $33F9 jtmp1
FORCE_SYMBOL $33FE divide_tmp
FORCE_SYMBOL $3404 divide_tmp
FORCE_SYMBOL $3407 jtmp1
FORCE_SYMBOL $340C divide_tmp
COMMENT_LINE $340F result in B
FORCE_SYMBOL $340F neggi
COMMENT $3415 store y1
FORCE_SYMBOL $3415 _y1
COMMENT $3417 -y1 + y0 = y0 - y1 = y2
FORCE_SYMBOL $3418 y0
COMMENT $341B store y2
FORCE_SYMBOL $341B _y2
COMMENT $341F store y1
FORCE_SYMBOL $341F _y1
COMMENT $3421 -y1 + y0 = y0 - y1 = y2
FORCE_SYMBOL $3422 y0
COMMENT $3425 store y2
FORCE_SYMBOL $3425 _y2
COMMENT_LINE $3428 -------------------------------------------------------------------------------------------
COMMENT_LINE $3428 macro call ->                     CLIP_LEFT
COMMENT $3428 but here the code still uses c8
COMMENT $3428 remember clipping edge
FORCE_SYMBOL $3428 BORDER
FORCE_NO_SYMBOL $342B
COMMENT $342E is invisible
FORCE_SYMBOL $342E clip_test
COMMENT $3431 clip starts at 0
FORCE_SYMBOL $3431 clip_counter
COMMENT_LINE $3434 we add to this each strength
COMMENT_LINE $3434 of a vector
COMMENT $3434 test byte pattern, if positive -> end
COMMENT $3438 get current Vector strength
COMMENT $343A remember it as v0
FORCE_NO_SYMBOL $343A
COMMENT $343C extend it X part
COMMENT $343D negative "add", cross to invisible possible
COMMENT_LINE $343F here only a cross from invisble to visible possible
COMMENT $343F and adjust clip_counter
FORCE_SYMBOL $343F clip_counter
COMMENT $3442 store it
FORCE_SYMBOL $3442 clip_counter
COMMENT_LINE $3445 clip counter has vector
COMMENT_LINE $3445 'position' at the end
COMMENT_LINE $3445 of current vector
COMMENT $3445 test for clipping edge
FORCE_SYMBOL $3445 BORDER
COMMENT $3449 str_pat_and_scale_vlp
FORCE_SYMBOL $344B clip_test
COMMENT_LINE $3450 cross from invisible to visible!
COMMENT_LINE $3450 in d clipcounter
COMMENT_LINE $3450 v0 is set
COMMENT_LINE $3450 y coordinates must always be 0 if we come here!
COMMENT_LINE $3450 macro call ->                     SIMPLE_LEFT_INV_TO_VIS
FORCE_SYMBOL $3450 BORDER
COMMENT $3454 y2 (=0) and x2
FORCE_NO_SYMBOL $3454
COMMENT $3457 this denotes x0
FORCE_NO_SYMBOL $3457
COMMENT $3459 y1 (=0) and x1
FORCE_NO_SYMBOL $3459
COMMENT $345B pattern 1
FORCE_NO_SYMBOL $345B
COMMENT $345D load pattern of current vector
COMMENT $345F pattern 2
FORCE_NO_SYMBOL $345F
FORCE_NO_SYMBOL $3461
COMMENT $3463 now != 0 -> visible
FORCE_SYMBOL $3463 clip_test
COMMENT $3468 pattern is 0
FORCE_NO_SYMBOL $3468
FORCE_NO_SYMBOL $346A
COMMENT $3470 pattern is pattern
FORCE_NO_SYMBOL $3470
FORCE_NO_SYMBOL $3472
COMMENT_LINE $3476 here only a cross from visble to invisible possible
COMMENT $3476 and adjust clip_counter
FORCE_SYMBOL $3476 clip_counter
COMMENT $3479 store it
FORCE_SYMBOL $3479 clip_counter
COMMENT_LINE $347C clip counter has vector
COMMENT_LINE $347C 'position' at the end
COMMENT_LINE $347C of current vector
COMMENT $347C test for clipping edge
FORCE_SYMBOL $347C BORDER
COMMENT $3480 str_pat_and_scale_vlp
FORCE_SYMBOL $3482 clip_test
COMMENT_LINE $3487 cross from visible to invisible!
COMMENT_LINE $3487 in d clipcounter
COMMENT_LINE $3487 v0 is set
COMMENT_LINE $3487 y coordinates must always be 0 if we come here!
COMMENT_LINE $3487 macro call ->                     SIMPLE_LEFT_VIS_TO_INV
FORCE_SYMBOL $3487 BORDER
COMMENT $348C pattern 1 (visible)
FORCE_NO_SYMBOL $348C
COMMENT $348F y2 (=0); x2
FORCE_NO_SYMBOL $348F
COMMENT $3491 pattern 2 = 0
FORCE_NO_SYMBOL $3491
COMMENT $3494 denotes x0
FORCE_NO_SYMBOL $3494
COMMENT $3496 y1 (=0), x1
FORCE_NO_SYMBOL $3496
FORCE_NO_SYMBOL $3498
COMMENT $349A now != 0 -> visible
FORCE_SYMBOL $349A clip_test
COMMENT $349F last positibe must be stored!
FORCE_NO_SYMBOL $349F
COMMENT_LINE $34A2 -------------------------------------------------------------------------------------------
COMMENT_LINE $34A2 macro call ->                     CLIP_LEFT
COMMENT $34A2 but here the code still uses c8
COMMENT $34A2 remember clipping edge
FORCE_SYMBOL $34A2 BORDER
FORCE_NO_SYMBOL $34A5
COMMENT $34A8 is invisible
FORCE_SYMBOL $34A8 clip_test
COMMENT $34AB clip starts at 0
FORCE_SYMBOL $34AB clip_counter
COMMENT_LINE $34AE we add to this each strength
COMMENT_LINE $34AE of a vector
COMMENT $34AE test byte pattern, if positive -> end
COMMENT $34B2 get current Vector strength
FORCE_SYMBOL $34B4 v0
COMMENT $34B7 extend it X part
COMMENT $34B8 negative "add", cross to invisible possible
COMMENT_LINE $34BA here only a cross from invisble to visible possible
COMMENT $34BA and adjust clip_counter
FORCE_SYMBOL $34BA clip_counter
COMMENT $34BD store it
FORCE_SYMBOL $34BD clip_counter
COMMENT_LINE $34C0 clip counter has vector
COMMENT_LINE $34C0 'position' at the end
COMMENT_LINE $34C0 of current vector
COMMENT $34C0 test for clipping edge
FORCE_SYMBOL $34C0 BORDER
COMMENT $34C4 str_pat_and_scale_vlp
FORCE_SYMBOL $34C6 clip_test
COMMENT_LINE $34CB cross from invisible to visible!
COMMENT_LINE $34CB in d clipcounter
COMMENT_LINE $34CB v0 is set
COMMENT_LINE $34CB y coordinates must always be 0 if we come here!
COMMENT_LINE $34CB macro call ->                     EXPONENT_LEFT_INV_TO_VIS
FORCE_SYMBOL $34CB CALC_P2
COMMENT $34CE pattern first vector is invisible
FORCE_SYMBOL $34CE _pat1
COMMENT $34D2 pattern second vector is visible
FORCE_SYMBOL $34D2 _pat2
FORCE_NO_SYMBOL $34D4
COMMENT $34D6 now != 0 -> visible
FORCE_SYMBOL $34D6 clip_test
COMMENT $34DB pattern is 0
COMMENT $34DD load current Vector
FORCE_SYMBOL $34DD v0
COMMENT $34E0 store it also
COMMENT $34E6 pattern is pattern
COMMENT $34E8 load current Vector
FORCE_SYMBOL $34E8 v0
COMMENT $34EB store it also
COMMENT_LINE $34EF here only a cross from visble to invisible possible
COMMENT $34EF and adjust clip_counter
FORCE_SYMBOL $34EF clip_counter
COMMENT $34F2 store it
FORCE_SYMBOL $34F2 clip_counter
COMMENT_LINE $34F5 clip counter has vector
COMMENT_LINE $34F5 'position' at the end
COMMENT_LINE $34F5 of current vector
COMMENT $34F5 test for clipping edge
FORCE_SYMBOL $34F5 BORDER
COMMENT $34F9 str_pat_and_scale_vlp
FORCE_SYMBOL $34FB clip_test
COMMENT_LINE $3500 cross from visible to invisible!
COMMENT_LINE $3500 in d clipcounter
COMMENT_LINE $3500 v0 is set
COMMENT_LINE $3500 y coordinates must always be 0 if we come here!
COMMENT_LINE $3500 macro call ->                     EXPONENT_LEFT_VIS_TO_INV
FORCE_SYMBOL $3500 CALC_P2
COMMENT $3503 pattern first vector is invisible
FORCE_SYMBOL $3503 _pat2
COMMENT $3507 pattern second vector is visible
FORCE_SYMBOL $3507 _pat1
FORCE_NO_SYMBOL $3509
COMMENT $350B now != 0 -> visible
FORCE_SYMBOL $350B clip_test
COMMENT $3510 last positibe must be stored!
FORCE_NO_SYMBOL $3510
COMMENT_LINE $3513 -------------------------------------------------------------------------------------------
COMMENT_LINE $3513 macro call ->                     CLIP_LEFT
COMMENT $3513 but here the code still uses c8
COMMENT $3513 remember clipping edge
FORCE_SYMBOL $3513 BORDER
FORCE_NO_SYMBOL $3516
COMMENT $3519 is invisible
FORCE_SYMBOL $3519 clip_test
COMMENT $351C clip starts at 0
FORCE_SYMBOL $351C clip_counter
COMMENT_LINE $351F we add to this each strength
COMMENT_LINE $351F of a vector
COMMENT $351F test byte pattern, if positive -> end
COMMENT $3523 get current Vector strength
FORCE_SYMBOL $3525 v0
COMMENT $3528 extend it X part
COMMENT $3529 negative "add", cross to invisible possible
COMMENT_LINE $352B here only a cross from invisble to visible possible
COMMENT $352B and adjust clip_counter
FORCE_SYMBOL $352B clip_counter
COMMENT $352E store it
FORCE_SYMBOL $352E clip_counter
COMMENT_LINE $3531 clip counter has vector
COMMENT_LINE $3531 'position' at the end
COMMENT_LINE $3531 of current vector
COMMENT $3531 test for clipping edge
FORCE_SYMBOL $3531 BORDER
COMMENT $3535 str_pat_and_scale_vlp
FORCE_SYMBOL $3537 clip_test
COMMENT_LINE $353C cross from invisible to visible!
COMMENT_LINE $353C in d clipcounter
COMMENT_LINE $353C v0 is set
COMMENT_LINE $353C y coordinates must always be 0 if we come here!
COMMENT_LINE $353C macro call ->                     EXACT_LEFT_INV_TO_VIS
FORCE_SYMBOL $353C CALC_P2_exact
COMMENT $353F pattern first vector is invisible
FORCE_SYMBOL $353F _pat1
COMMENT $3543 pattern second vector is visible
FORCE_SYMBOL $3543 _pat2
FORCE_NO_SYMBOL $3545
COMMENT $3547 now != 0 -> visible
FORCE_SYMBOL $3547 clip_test
COMMENT $354C pattern is 0
COMMENT $354E load current Vector
FORCE_SYMBOL $354E v0
COMMENT $3551 store it also
COMMENT $3557 pattern is pattern
COMMENT $3559 load current Vector
FORCE_SYMBOL $3559 v0
COMMENT $355C store it also
COMMENT_LINE $3560 here only a cross from visble to invisible possible
COMMENT $3560 and adjust clip_counter
FORCE_SYMBOL $3560 clip_counter
COMMENT $3563 store it
FORCE_SYMBOL $3563 clip_counter
COMMENT_LINE $3566 clip counter has vector
COMMENT_LINE $3566 'position' at the end
COMMENT_LINE $3566 of current vector
COMMENT $3566 test for clipping edge
FORCE_SYMBOL $3566 BORDER
COMMENT $356A str_pat_and_scale_vlp
FORCE_SYMBOL $356C clip_test
COMMENT_LINE $3571 cross from visible to invisible!
COMMENT_LINE $3571 in d clipcounter
COMMENT_LINE $3571 v0 is set
COMMENT_LINE $3571 y coordinates must always be 0 if we come here!
COMMENT_LINE $3571 macro call ->                     EXACT_LEFT_VIS_TO_INV
FORCE_SYMBOL $3571 CALC_P2_exact
COMMENT $3574 pattern first vector is invisible
FORCE_SYMBOL $3574 _pat2
COMMENT $3578 pattern second vector is visible
FORCE_SYMBOL $3578 _pat1
FORCE_NO_SYMBOL $357A
COMMENT $357C now != 0 -> visible
FORCE_SYMBOL $357C clip_test
COMMENT $3581 last positibe must be stored!
FORCE_NO_SYMBOL $3581
COMMENT_LINE $3584 -------------------------------------------------------------------------------------------
COMMENT_LINE $3584 include line ->                     include  "clipRight.i"
COMMENT_LINE $3584 -------------------------------------------------------------------------------------------
COMMENT_LINE $3584 -------------------------------------------------------------------------------------------
COMMENT_LINE $3584 -------------------------------------------------------------------------------------------
COMMENT_LINE $3584 -------------------------------------------------------------------------------------------
COMMENT_LINE $3584 -------------------------------------------------------------------------------------------
COMMENT_LINE $3584 -------------------------------------------------------------------------------------------
COMMENT_LINE $3584 macro call ->                     CLIP_RIGHT
COMMENT $3584 but here the code still uses c8
COMMENT $3584 remember clipping edge
FORCE_SYMBOL $3584 BORDER
FORCE_NO_SYMBOL $3587
COMMENT $3589 is visible
FORCE_SYMBOL $3589 clip_test
FORCE_NO_SYMBOL $358C
COMMENT $358F clip starts at 0
FORCE_SYMBOL $358F clip_counter
COMMENT_LINE $3592 we add to this each strength
COMMENT_LINE $3592 of a vector
COMMENT $3592 test byte pattern, if positive -> end
COMMENT $3596 get current Vector strength
COMMENT $3598 remember it as v0
FORCE_NO_SYMBOL $3598
COMMENT $359A extend it X part
COMMENT $359B negative "add", cross to visible possible
COMMENT_LINE $359D here only a cross from visble to invisible possible
COMMENT $359D and adjust clip_counter
FORCE_SYMBOL $359D clip_counter
COMMENT $35A0 store it
FORCE_SYMBOL $35A0 clip_counter
COMMENT_LINE $35A3 clip counter has vector
COMMENT_LINE $35A3 'position' at the end
COMMENT_LINE $35A3 of current vector
COMMENT $35A3 test for clipping edge
FORCE_SYMBOL $35A3 BORDER
COMMENT $35A7 str_pat_and_scale_vlp
FORCE_SYMBOL $35A9 clip_test
COMMENT_LINE $35AE cross from visible to invisible!
COMMENT_LINE $35AE in d clipcounter
COMMENT_LINE $35AE v0 is set
COMMENT_LINE $35AE y coordinates must always be 0 if we come here!
COMMENT_LINE $35AE macro call ->                     SIMPLE_RIGHT_VIS_TO_INV
FORCE_SYMBOL $35AE BORDER
COMMENT $35B3 pattern first vector is visible
FORCE_NO_SYMBOL $35B3
COMMENT $35B6 y2 (=0), x2
FORCE_NO_SYMBOL $35B6
COMMENT $35B9 denotes x0
FORCE_NO_SYMBOL $35B9
COMMENT $35BB y1 (=0) and x1
FORCE_NO_SYMBOL $35BB
COMMENT $35BD clear pattern 2
FORCE_NO_SYMBOL $35BD
FORCE_NO_SYMBOL $35BF
COMMENT $35C1 now = 0 -> invisible
FORCE_SYMBOL $35C1 clip_test
COMMENT $35C6 pattern is 0
FORCE_NO_SYMBOL $35C6
FORCE_NO_SYMBOL $35C8
COMMENT $35CE pattern is pattern
FORCE_NO_SYMBOL $35CE
FORCE_NO_SYMBOL $35D0
COMMENT_LINE $35D4 here only a cross from invisble to visible possible
COMMENT $35D4 and adjust clip_counter
FORCE_SYMBOL $35D4 clip_counter
COMMENT $35D7 store it
FORCE_SYMBOL $35D7 clip_counter
COMMENT_LINE $35DA clip counter has vector
COMMENT_LINE $35DA 'position' at the end
COMMENT_LINE $35DA of current vector
COMMENT $35DA test for clipping edge
FORCE_SYMBOL $35DA BORDER
COMMENT $35DE str_pat_and_scale_vlp
FORCE_SYMBOL $35E0 clip_test
COMMENT_LINE $35E5 cross from invisible to visible!
COMMENT_LINE $35E5 in d clipcounter
COMMENT_LINE $35E5 v0 is set
COMMENT_LINE $35E5 y coordinates must always be 0 if we come here!
COMMENT_LINE $35E5 macro call ->                     SIMPLE_RIGHT_INV_TO_VIS
FORCE_SYMBOL $35E5 BORDER
COMMENT $35E9 pattern 1
FORCE_NO_SYMBOL $35E9
COMMENT $35EB y2 (=0) and x2
FORCE_NO_SYMBOL $35EB
COMMENT $35EE denotes x0
FORCE_NO_SYMBOL $35EE
COMMENT $35F0 y1 and y2
FORCE_NO_SYMBOL $35F0
COMMENT $35F4 pattern 2 (visible)
FORCE_NO_SYMBOL $35F4
FORCE_NO_SYMBOL $35F6
COMMENT $35F8 now != 0 -> visible
FORCE_SYMBOL $35F8 clip_test
COMMENT $35FD last positibe must be stored!
FORCE_NO_SYMBOL $35FD
COMMENT_LINE $3600 -------------------------------------------------------------------------------------------
COMMENT_LINE $3600 macro call ->                     CLIP_RIGHT
COMMENT $3600 but here the code still uses c8
COMMENT $3600 remember clipping edge
FORCE_SYMBOL $3600 BORDER
FORCE_NO_SYMBOL $3603
COMMENT $3605 is visible
FORCE_SYMBOL $3605 clip_test
FORCE_NO_SYMBOL $3608
COMMENT $360B clip starts at 0
FORCE_SYMBOL $360B clip_counter
COMMENT_LINE $360E we add to this each strength
COMMENT_LINE $360E of a vector
COMMENT $360E test byte pattern, if positive -> end
COMMENT $3612 get current Vector strength
FORCE_SYMBOL $3614 v0
COMMENT $3617 extend it X part
COMMENT $3618 negative "add", cross to visible possible
COMMENT_LINE $361A here only a cross from visble to invisible possible
COMMENT $361A and adjust clip_counter
FORCE_SYMBOL $361A clip_counter
COMMENT $361D store it
FORCE_SYMBOL $361D clip_counter
COMMENT_LINE $3620 clip counter has vector
COMMENT_LINE $3620 'position' at the end
COMMENT_LINE $3620 of current vector
COMMENT $3620 test for clipping edge
FORCE_SYMBOL $3620 BORDER
COMMENT $3624 str_pat_and_scale_vlp
FORCE_SYMBOL $3626 clip_test
COMMENT_LINE $362B cross from visible to invisible!
COMMENT_LINE $362B in d clipcounter
COMMENT_LINE $362B v0 is set
COMMENT_LINE $362B y coordinates must always be 0 if we come here!
COMMENT_LINE $362B macro call ->                     EXPONENT_RIGHT_VIS_TO_INV
FORCE_SYMBOL $362B CALC_P2
COMMENT $3630 pattern second vector is visible
FORCE_SYMBOL $3630 _pat1
COMMENT $3632 pattern first vector is invisible
FORCE_SYMBOL $3632 _pat2
FORCE_NO_SYMBOL $3634
COMMENT $3636 now = 0 -> invisible
FORCE_SYMBOL $3636 clip_test
COMMENT $363B pattern is 0
COMMENT $363D load current Vector
FORCE_SYMBOL $363D v0
COMMENT $3640 store it also
COMMENT $3646 pattern is pattern
COMMENT $3648 load current Vector
FORCE_SYMBOL $3648 v0
COMMENT $364B store it also
COMMENT_LINE $364F here only a cross from invisble to visible possible
COMMENT $364F and adjust clip_counter
FORCE_SYMBOL $364F clip_counter
COMMENT $3652 store it
FORCE_SYMBOL $3652 clip_counter
COMMENT_LINE $3655 clip counter has vector
COMMENT_LINE $3655 'position' at the end
COMMENT_LINE $3655 of current vector
COMMENT $3655 test for clipping edge
FORCE_SYMBOL $3655 BORDER
COMMENT $3659 str_pat_and_scale_vlp
FORCE_SYMBOL $365B clip_test
COMMENT_LINE $3660 cross from invisible to visible!
COMMENT_LINE $3660 in d clipcounter
COMMENT_LINE $3660 v0 is set
COMMENT_LINE $3660 y coordinates must always be 0 if we come here!
COMMENT_LINE $3660 macro call ->                     EXPONENT_RIGHT_INV_TO_VIS
FORCE_SYMBOL $3660 CALC_P2
COMMENT $3663 pattern first vector is invisible
FORCE_SYMBOL $3663 _pat1
COMMENT $3667 pattern second vector is visible
FORCE_SYMBOL $3667 _pat2
FORCE_NO_SYMBOL $3669
COMMENT $366B now != 0 -> visible
FORCE_SYMBOL $366B clip_test
COMMENT $3670 last positibe must be stored!
FORCE_NO_SYMBOL $3670
COMMENT_LINE $3673 -------------------------------------------------------------------------------------------
COMMENT_LINE $3673 macro call ->                     CLIP_RIGHT
COMMENT $3673 but here the code still uses c8
COMMENT $3673 remember clipping edge
FORCE_SYMBOL $3673 BORDER
FORCE_NO_SYMBOL $3676
COMMENT $3678 is visible
FORCE_SYMBOL $3678 clip_test
FORCE_NO_SYMBOL $367B
COMMENT $367E clip starts at 0
FORCE_SYMBOL $367E clip_counter
COMMENT_LINE $3681 we add to this each strength
COMMENT_LINE $3681 of a vector
COMMENT $3681 test byte pattern, if positive -> end
COMMENT $3685 get current Vector strength
FORCE_SYMBOL $3687 v0
COMMENT $368A extend it X part
COMMENT $368B negative "add", cross to visible possible
COMMENT_LINE $368D here only a cross from visble to invisible possible
COMMENT $368D and adjust clip_counter
FORCE_SYMBOL $368D clip_counter
COMMENT $3690 store it
FORCE_SYMBOL $3690 clip_counter
COMMENT_LINE $3693 clip counter has vector
COMMENT_LINE $3693 'position' at the end
COMMENT_LINE $3693 of current vector
COMMENT $3693 test for clipping edge
FORCE_SYMBOL $3693 BORDER
COMMENT $3697 str_pat_and_scale_vlp
FORCE_SYMBOL $3699 clip_test
COMMENT_LINE $369E cross from visible to invisible!
COMMENT_LINE $369E in d clipcounter
COMMENT_LINE $369E v0 is set
COMMENT_LINE $369E y coordinates must always be 0 if we come here!
COMMENT_LINE $369E macro call ->                     EXACT_RIGHT_VIS_TO_INV
FORCE_SYMBOL $369E CALC_P2_exact
COMMENT $36A3 pattern second vector is visible
FORCE_SYMBOL $36A3 _pat1
COMMENT $36A5 pattern first vector is invisible
FORCE_SYMBOL $36A5 _pat2
FORCE_NO_SYMBOL $36A7
COMMENT $36A9 now = 0 -> invisible
FORCE_SYMBOL $36A9 clip_test
COMMENT $36AE pattern is 0
COMMENT $36B0 load current Vector
FORCE_SYMBOL $36B0 v0
COMMENT $36B3 store it also
COMMENT $36B9 pattern is pattern
COMMENT $36BB load current Vector
FORCE_SYMBOL $36BB v0
COMMENT $36BE store it also
COMMENT_LINE $36C2 here only a cross from invisble to visible possible
COMMENT $36C2 and adjust clip_counter
FORCE_SYMBOL $36C2 clip_counter
COMMENT $36C5 store it
FORCE_SYMBOL $36C5 clip_counter
COMMENT_LINE $36C8 clip counter has vector
COMMENT_LINE $36C8 'position' at the end
COMMENT_LINE $36C8 of current vector
COMMENT $36C8 test for clipping edge
FORCE_SYMBOL $36C8 BORDER
COMMENT $36CC str_pat_and_scale_vlp
FORCE_SYMBOL $36CE clip_test
COMMENT_LINE $36D3 cross from invisible to visible!
COMMENT_LINE $36D3 in d clipcounter
COMMENT_LINE $36D3 v0 is set
COMMENT_LINE $36D3 y coordinates must always be 0 if we come here!
COMMENT_LINE $36D3 macro call ->                     EXACT_RIGHT_INV_TO_VIS
FORCE_SYMBOL $36D3 CALC_P2_exact
COMMENT $36D6 pattern first vector is invisible
FORCE_SYMBOL $36D6 _pat1
COMMENT $36DA pattern second vector is visible
FORCE_SYMBOL $36DA _pat2
FORCE_NO_SYMBOL $36DC
COMMENT $36DE now != 0 -> visible
FORCE_SYMBOL $36DE clip_test
COMMENT $36E3 last positibe must be stored!
FORCE_NO_SYMBOL $36E3
COMMENT_LINE $36E6 -------------------------------------------------------------------------------------------
COMMENT_LINE $36E6 include line ->                     include  "clipBottom.i"
COMMENT_LINE $36E6 -------------------------------------------------------------------------------------------
COMMENT_LINE $36E6 -------------------------------------------------------------------------------------------
COMMENT_LINE $36E6 -------------------------------------------------------------------------------------------
COMMENT_LINE $36E6 -------------------------------------------------------------------------------------------
COMMENT_LINE $36E6 -------------------------------------------------------------------------------------------
COMMENT_LINE $36E6 -------------------------------------------------------------------------------------------
COMMENT_LINE $36E6 -------------------------------------------------------------------------------------------
COMMENT_LINE $36E6 -------------------------------------------------------------------------------------------
COMMENT_LINE $36E6 -------------------------------------------------------------------------------------------
COMMENT_LINE $36E6 macro call ->                     HELP_CALC_P2_y_i
COMMENT_LINE $36E6 first setup x1 and x2 according to clipping
COMMENT_LINE $36E6 information
FORCE_SYMBOL $36E6 BORDER
COMMENT $36E9 part of vector that is visible (or vice versa)
FORCE_SYMBOL $36E9 _y2
FORCE_SYMBOL $36EB y0
COMMENT $36EF part of vector that is invisible (or vice versa)
FORCE_SYMBOL $36EF _y1
COMMENT_LINE $36F1 now we have to calculate the X part of the two
COMMENT_LINE $36F1 TODO change y = x vice versa in description
COMMENT_LINE $36F1 halves
COMMENT_LINE $36F1 Y1/X1 and Y2/X2 should be like Y0/X0
COMMENT_LINE $36F1 X0 = original length
COMMENT_LINE $36F1 than Y1 = Y0*X1/X0
COMMENT_LINE $36F1 than Y2 = Y0*X2/X0
COMMENT_LINE $36F1 but we know that Y1 + Y2 = Y0
COMMENT_LINE $36F1 -> Y2 = Y0 - Y1
COMMENT_LINE $36F1 div cycles depend on size of tmp1
COMMENT_LINE $36F1 the bigger tmp1 the faster div
COMMENT_LINE $36F1 we do div and mul unsigned
COMMENT_LINE $36F1 so check for signness here
COMMENT_LINE $36F1 and adjust later
FORCE_SYMBOL $36F2 neggi
FORCE_SYMBOL $36F5 y0
FORCE_SYMBOL $36FA neggi
FORCE_NO_SYMBOL $36FE
FORCE_NO_SYMBOL $3702
FORCE_NO_SYMBOL $3708
FORCE_NO_SYMBOL $370C
FORCE_NO_SYMBOL $3710
COMMENT_LINE $3716 if vectorlist is correct,
COMMENT_LINE $3716 than here is either +127 or - 127, both are calculated by DIF 128
FORCE_SYMBOL $3716 x0
FORCE_SYMBOL $371B neggi
FORCE_SYMBOL $371F _y1
FORCE_SYMBOL $3723 neggi
COMMENT $3728 this divides d by 64
COMMENT $3729 result in A
COMMENT $372C and once again hence 128
FORCE_SYMBOL $372D neggi
COMMENT $3733 store y1
FORCE_SYMBOL $3733 _x1
COMMENT $3735 -y1 + y0 = y0 - y1 = y2
FORCE_SYMBOL $3736 x0
COMMENT $3739 store y2
FORCE_SYMBOL $3739 _x2
FORCE_SYMBOL $373B end_macro28
COMMENT $373E store y1
FORCE_SYMBOL $373E _x1
COMMENT $3740 -y1 + y0 = y0 - y1 = y2
FORCE_SYMBOL $3741 x0
COMMENT $3744 store y2
FORCE_SYMBOL $3744 _x2
FORCE_SYMBOL $3746 end_macro28
FORCE_SYMBOL $3749 x0
FORCE_SYMBOL $374E neggi
FORCE_SYMBOL $3752 _y1
FORCE_SYMBOL $3756 neggi
COMMENT $375B this divides d by 64
COMMENT $375C result in A
FORCE_SYMBOL $375F neggi
COMMENT $3765 store y1
FORCE_SYMBOL $3765 _x1
COMMENT $3767 -y1 + y0 = y0 - y1 = y2
FORCE_SYMBOL $3768 x0
COMMENT $376B store y2
FORCE_SYMBOL $376B _x2
FORCE_SYMBOL $376F x0
FORCE_SYMBOL $3774 neggi
FORCE_SYMBOL $3778 _y1
FORCE_SYMBOL $377C neggi
FORCE_SYMBOL $3783 x0
FORCE_SYMBOL $3788 neggi
FORCE_SYMBOL $378C _y1
FORCE_SYMBOL $3790 neggi
FORCE_SYMBOL $3797 x0
FORCE_SYMBOL $379C neggi
FORCE_SYMBOL $37A0 _y1
FORCE_SYMBOL $37A4 neggi
FORCE_SYMBOL $37AB x0
FORCE_SYMBOL $37B0 neggi
FORCE_SYMBOL $37B4 _y1
FORCE_SYMBOL $37B8 neggi
COMMENT_LINE $37BD macro call ->                     MY_LSR_D
COMMENT_LINE $37BF macro call ->                     MY_LSR_D
COMMENT_LINE $37C1 macro call ->                     MY_LSR_D
COMMENT_LINE $37C3 macro call ->                     MY_LSR_D
COMMENT_LINE $37C5 macro call ->                     MY_LSR_D
FORCE_SYMBOL $37C7 neggi
COMMENT $37CD store y1
FORCE_SYMBOL $37CD _x1
COMMENT $37CF -y1 + y0 = y0 - y1 = y2
FORCE_SYMBOL $37D0 x0
COMMENT $37D3 store y2
FORCE_SYMBOL $37D3 _x2
COMMENT_LINE $37D6 -------------------------------------------------------------------------------------------
COMMENT_LINE $37D6 macro call ->                     CLIP_BOTTOM
COMMENT $37D6 but here the code still uses c8
COMMENT $37D6 remember clipping edge
FORCE_SYMBOL $37D6 BORDER
FORCE_NO_SYMBOL $37D9
COMMENT $37DC is invisible
FORCE_SYMBOL $37DC clip_test
COMMENT $37DF clip starts at 0
FORCE_SYMBOL $37DF clip_counter
COMMENT_LINE $37E2 we add to this each strength
COMMENT_LINE $37E2 of a vector
COMMENT $37E2 test byte pattern, if positive -> end
COMMENT $37E6 [8 cycles] get current Vector strength
COMMENT $37E8 remember it as v0
FORCE_NO_SYMBOL $37E8
COMMENT $37EA [6 cycles]
COMMENT $37EC extend it Y part
COMMENT $37ED negative "add", cross to invisible possible
COMMENT_LINE $37EF here only a cross from invisble to visible possible
COMMENT $37EF and adjust clip_counter
FORCE_SYMBOL $37EF clip_counter
COMMENT $37F2 store it
FORCE_SYMBOL $37F2 clip_counter
COMMENT_LINE $37F5 clip counter has vector
COMMENT_LINE $37F5 'position' at the end
COMMENT_LINE $37F5 of current vector
COMMENT $37F5 test for clipping edge
FORCE_SYMBOL $37F5 BORDER
COMMENT $37F9 str_pat_and_scale_vlp
FORCE_SYMBOL $37FB clip_test
COMMENT_LINE $3800 cross from invisible to visible!
COMMENT_LINE $3800 in d clipcounter
COMMENT_LINE $3800 v0 is set
COMMENT_LINE $3800 x coordinates must always be 0 if we come here!
COMMENT_LINE $3800 macro call ->                     SIMPLE_BOTTOM_INV_TO_VIS
FORCE_SYMBOL $3800 BORDER
COMMENT $3803 pattern first vector is invisible
COMMENT $3804 denotes y2
FORCE_NO_SYMBOL $3804
COMMENT $3806 denotes x2
FORCE_NO_SYMBOL $3806
COMMENT $3809 add y0
FORCE_NO_SYMBOL $3809
COMMENT $380B pat1 + y1
FORCE_NO_SYMBOL $380B
COMMENT $380D original pattern
COMMENT $380F x1 + pat2
FORCE_NO_SYMBOL $380F
COMMENT_LINE $3811 clr 5,u ; clear x2
FORCE_NO_SYMBOL $3811
COMMENT $3813 now != 0 -> visible
FORCE_SYMBOL $3813 clip_test
COMMENT $3818 pattern is 0
FORCE_NO_SYMBOL $3818
FORCE_NO_SYMBOL $381A
COMMENT $3820 pattern is pattern
FORCE_NO_SYMBOL $3820
FORCE_NO_SYMBOL $3822
COMMENT_LINE $3826 here only a cross from visble to invisible possible
COMMENT $3826 and adjust clip_counter
FORCE_SYMBOL $3826 clip_counter
COMMENT $3829 store it
FORCE_SYMBOL $3829 clip_counter
COMMENT_LINE $382C clip counter has vector
COMMENT_LINE $382C 'position' at the end
COMMENT_LINE $382C of current vector
COMMENT $382C test for clipping edge
FORCE_SYMBOL $382C BORDER
COMMENT $3830 str_pat_and_scale_vlp
FORCE_SYMBOL $3832 clip_test
COMMENT_LINE $3837 cross from visible to invisible!
COMMENT_LINE $3837 in d clipcounter
COMMENT_LINE $3837 v0 is set
COMMENT_LINE $3837 y coordinates must always be 0 if we come here!
COMMENT_LINE $3837 macro call ->                     SIMPLE_BOTTOM_VIS_TO_INV
FORCE_SYMBOL $3837 BORDER
COMMENT $383A store y2
FORCE_NO_SYMBOL $383A
COMMENT $383D denotes y0 on read
FORCE_NO_SYMBOL $383D
COMMENT $383F read original pattern
COMMENT $3841 pattern 1 + y1
FORCE_NO_SYMBOL $3841
FORCE_NO_SYMBOL $3843
COMMENT $3846 x1 + pattern 2
FORCE_NO_SYMBOL $3846
COMMENT $3848 x2 vector is 0
FORCE_NO_SYMBOL $3848
FORCE_NO_SYMBOL $384A
COMMENT $384C now != 0 -> visible
FORCE_SYMBOL $384C clip_test
COMMENT $3851 last positibe must be stored!
FORCE_NO_SYMBOL $3851
COMMENT_LINE $3854 -------------------------------------------------------------------------------------------
COMMENT_LINE $3854 macro call ->                     CLIP_BOTTOM
COMMENT $3854 but here the code still uses c8
COMMENT $3854 remember clipping edge
FORCE_SYMBOL $3854 BORDER
FORCE_NO_SYMBOL $3857
COMMENT $385A is invisible
FORCE_SYMBOL $385A clip_test
COMMENT $385D clip starts at 0
FORCE_SYMBOL $385D clip_counter
COMMENT_LINE $3860 we add to this each strength
COMMENT_LINE $3860 of a vector
COMMENT $3860 test byte pattern, if positive -> end
COMMENT $3864 [8 cycles] get current Vector strength
FORCE_SYMBOL $3866 v0
COMMENT $3869 [6 cycles]
COMMENT $386B extend it Y part
COMMENT $386C negative "add", cross to invisible possible
COMMENT_LINE $386E here only a cross from invisble to visible possible
COMMENT $386E and adjust clip_counter
FORCE_SYMBOL $386E clip_counter
COMMENT $3871 store it
FORCE_SYMBOL $3871 clip_counter
COMMENT_LINE $3874 clip counter has vector
COMMENT_LINE $3874 'position' at the end
COMMENT_LINE $3874 of current vector
COMMENT $3874 test for clipping edge
FORCE_SYMBOL $3874 BORDER
COMMENT $3878 str_pat_and_scale_vlp
FORCE_SYMBOL $387A clip_test
COMMENT_LINE $387F cross from invisible to visible!
COMMENT_LINE $387F in d clipcounter
COMMENT_LINE $387F v0 is set
COMMENT_LINE $387F macro call ->                     EXPONENT_BOTTOM_INV_TO_VIS
FORCE_SYMBOL $387F CALC_P2_y
COMMENT $3882 pattern first vector is invisible
FORCE_SYMBOL $3882 _pat1
COMMENT $3886 pattern second vector is visible
FORCE_SYMBOL $3886 _pat2
FORCE_NO_SYMBOL $3888
COMMENT $388A now != 0 -> visible
FORCE_SYMBOL $388A clip_test
COMMENT $388F pattern is 0
COMMENT $3891 load current Vector
FORCE_SYMBOL $3891 v0
COMMENT $3894 store it also
COMMENT $389A pattern is pattern
COMMENT $389C load current Vector
FORCE_SYMBOL $389C v0
COMMENT $389F store it also
COMMENT_LINE $38A3 here only a cross from visble to invisible possible
COMMENT $38A3 and adjust clip_counter
FORCE_SYMBOL $38A3 clip_counter
COMMENT $38A6 store it
FORCE_SYMBOL $38A6 clip_counter
COMMENT_LINE $38A9 clip counter has vector
COMMENT_LINE $38A9 'position' at the end
COMMENT_LINE $38A9 of current vector
COMMENT $38A9 test for clipping edge
FORCE_SYMBOL $38A9 BORDER
COMMENT $38AD str_pat_and_scale_vlp
FORCE_SYMBOL $38AF clip_test
COMMENT_LINE $38B4 cross from visible to invisible!
COMMENT_LINE $38B4 in d clipcounter
COMMENT_LINE $38B4 v0 is set
COMMENT_LINE $38B4 y coordinates must always be 0 if we come here!
COMMENT_LINE $38B4 macro call ->                     EXPONENT_BOTTOM_VIS_TO_INV
FORCE_SYMBOL $38B4 CALC_P2_y
COMMENT $38B9 pattern second vector is visible
FORCE_SYMBOL $38B9 _pat1
COMMENT $38BB pattern first vector is invisible
FORCE_SYMBOL $38BB _pat2
FORCE_NO_SYMBOL $38BD
COMMENT $38BF now != 0 -> visible
FORCE_SYMBOL $38BF clip_test
COMMENT $38C4 last positibe must be stored!
FORCE_NO_SYMBOL $38C4
COMMENT_LINE $38C7 -------------------------------------------------------------------------------------------
COMMENT_LINE $38C7 -------------------------------------------------------------------------------------------
COMMENT_LINE $38C7 include line ->                     include  "clipTop.i"
COMMENT_LINE $38C7 -------------------------------------------------------------------------------------------
COMMENT_LINE $38C7 -------------------------------------------------------------------------------------------
COMMENT_LINE $38C7 -------------------------------------------------------------------------------------------
COMMENT_LINE $38C7 -------------------------------------------------------------------------------------------
COMMENT_LINE $38C7 -------------------------------------------------------------------------------------------
COMMENT_LINE $38C7 -------------------------------------------------------------------------------------------
COMMENT_LINE $38C7 -------------------------------------------------------------------------------------------
COMMENT_LINE $38C7 -------------------------------------------------------------------------------------------
COMMENT_LINE $38C7 -------------------------------------------------------------------------------------------
COMMENT_LINE $38C7 -------------------------------------------------------------------------------------------
COMMENT_LINE $38C7 -------------------------------------------------------------------------------------------
COMMENT_LINE $38C7 macro call ->                     CLIP_TOP
COMMENT $38C7 but here the code still uses c8
COMMENT $38C7 remember clipping edge
FORCE_SYMBOL $38C7 BORDER
FORCE_NO_SYMBOL $38CA
COMMENT $38CC is visible
FORCE_SYMBOL $38CC clip_test
FORCE_NO_SYMBOL $38CF
COMMENT $38D2 clip starts at 0
FORCE_SYMBOL $38D2 clip_counter
COMMENT_LINE $38D5 we add to this each strength
COMMENT_LINE $38D5 of a vector
COMMENT $38D5 test byte pattern, if positive -> end
COMMENT $38D9 get current Vector strength
COMMENT $38DB remember it as v0
FORCE_NO_SYMBOL $38DB
COMMENT $38DF extend it y part
COMMENT $38E0 negative "add", cross to visible possible
COMMENT_LINE $38E2 here only a cross from visble to invisible possible
COMMENT $38E2 and adjust clip_counter
FORCE_SYMBOL $38E2 clip_counter
COMMENT $38E5 store it
FORCE_SYMBOL $38E5 clip_counter
COMMENT_LINE $38E8 clip counter has vector
COMMENT_LINE $38E8 'position' at the end
COMMENT_LINE $38E8 of current vector
COMMENT $38E8 test for clipping edge
FORCE_SYMBOL $38E8 BORDER
COMMENT $38EC str_pat_and_scale_vlp
FORCE_SYMBOL $38EE clip_test
COMMENT_LINE $38F3 cross from visible to invisible!
COMMENT_LINE $38F3 in d clipcounter
COMMENT_LINE $38F3 v0 is set
COMMENT_LINE $38F3 x coordinates must always be 0 if we come here!
COMMENT_LINE $38F3 macro call ->                     SIMPLE_TOP_VIS_TO_INV
FORCE_SYMBOL $38F3 BORDER
COMMENT $38F7 pat2 (=0) + y2
FORCE_NO_SYMBOL $38F7
COMMENT $38F9 x2 = 0
FORCE_NO_SYMBOL $38F9
COMMENT $38FB x1 = 0
FORCE_NO_SYMBOL $38FB
COMMENT $38FD now = 0 -> invisible
FORCE_SYMBOL $38FD clip_test
COMMENT $3901 denotes y0
FORCE_NO_SYMBOL $3901
COMMENT $3905 pat1 + y1
FORCE_NO_SYMBOL $3905
FORCE_NO_SYMBOL $3907
COMMENT $390B pattern is 0
FORCE_NO_SYMBOL $390B
FORCE_NO_SYMBOL $390D
COMMENT $3913 pattern is pattern
FORCE_NO_SYMBOL $3913
FORCE_NO_SYMBOL $3915
COMMENT_LINE $3919 here only a cross from invisble to visible possible
COMMENT $3919 and adjust clip_counter
FORCE_SYMBOL $3919 clip_counter
COMMENT $391C store it
FORCE_SYMBOL $391C clip_counter
COMMENT_LINE $391F clip counter has vector
COMMENT_LINE $391F 'position' at the end
COMMENT_LINE $391F of current vector
COMMENT $391F test for clipping edge
FORCE_SYMBOL $391F BORDER
COMMENT $3923 str_pat_and_scale_vlp
FORCE_SYMBOL $3925 clip_test
COMMENT_LINE $392A cross from invisible to visible!
COMMENT_LINE $392A in d clipcounter
COMMENT_LINE $392A v0 is set
COMMENT_LINE $392A x coordinates must always be 0 if we come here!
COMMENT_LINE $392A macro call ->                     SIMPLE_TOP_INV_TO_VIS
FORCE_SYMBOL $392A BORDER
COMMENT $392D load original pattern
COMMENT $392F pat2 (visible) + y2
FORCE_NO_SYMBOL $392F
COMMENT $3933 denotes y0
FORCE_NO_SYMBOL $3933
COMMENT $3935 pat1 (=0) and y1
FORCE_NO_SYMBOL $3935
COMMENT $3937 x2
FORCE_NO_SYMBOL $3937
COMMENT $3939 x1
FORCE_NO_SYMBOL $3939
FORCE_NO_SYMBOL $393B
COMMENT $393D now != 0 -> visible
FORCE_SYMBOL $393D clip_test
COMMENT $3942 last positibe must be stored!
FORCE_NO_SYMBOL $3942
COMMENT_LINE $3945 -------------------------------------------------------------------------------------------
COMMENT_LINE $3945 macro call ->                     CLIP_TOP
COMMENT $3945 but here the code still uses c8
COMMENT $3945 remember clipping edge
FORCE_SYMBOL $3945 BORDER
FORCE_NO_SYMBOL $3948
COMMENT $394A is visible
FORCE_SYMBOL $394A clip_test
FORCE_NO_SYMBOL $394D
COMMENT $3950 clip starts at 0
FORCE_SYMBOL $3950 clip_counter
COMMENT_LINE $3953 we add to this each strength
COMMENT_LINE $3953 of a vector
COMMENT $3953 test byte pattern, if positive -> end
COMMENT $3957 get current Vector strength
FORCE_SYMBOL $3959 v0
COMMENT $395E extend it y part
COMMENT $395F negative "add", cross to visible possible
COMMENT_LINE $3961 here only a cross from visble to invisible possible
COMMENT $3961 and adjust clip_counter
FORCE_SYMBOL $3961 clip_counter
COMMENT $3964 store it
FORCE_SYMBOL $3964 clip_counter
COMMENT_LINE $3967 clip counter has vector
COMMENT_LINE $3967 'position' at the end
COMMENT_LINE $3967 of current vector
COMMENT $3967 test for clipping edge
FORCE_SYMBOL $3967 BORDER
COMMENT $396B str_pat_and_scale_vlp
FORCE_SYMBOL $396D clip_test
COMMENT_LINE $3972 cross from visible to invisible!
COMMENT_LINE $3972 in d clipcounter
COMMENT_LINE $3972 v0 is set
COMMENT_LINE $3972 x coordinates must always be 0 if we come here!
COMMENT_LINE $3972 macro call ->                     EXPONENT_TOP_VIS_TO_INV
FORCE_SYMBOL $3972 CALC_P2_y
COMMENT $3977 pattern second vector is visible
FORCE_SYMBOL $3977 _pat1
COMMENT $3979 pattern first vector is invisible
FORCE_SYMBOL $3979 _pat2
FORCE_NO_SYMBOL $397B
COMMENT $397D now = 0 -> invisible
FORCE_SYMBOL $397D clip_test
COMMENT $3982 pattern is 0
COMMENT $3984 load current Vector
FORCE_SYMBOL $3984 v0
COMMENT $3987 store it also
COMMENT $398D pattern is pattern
COMMENT $398F load current Vector
FORCE_SYMBOL $398F v0
COMMENT $3992 store it also
COMMENT_LINE $3996 here only a cross from invisble to visible possible
COMMENT $3996 and adjust clip_counter
FORCE_SYMBOL $3996 clip_counter
COMMENT $3999 store it
FORCE_SYMBOL $3999 clip_counter
COMMENT_LINE $399C clip counter has vector
COMMENT_LINE $399C 'position' at the end
COMMENT_LINE $399C of current vector
COMMENT $399C test for clipping edge
FORCE_SYMBOL $399C BORDER
COMMENT $39A0 str_pat_and_scale_vlp
FORCE_SYMBOL $39A2 clip_test
COMMENT_LINE $39A7 cross from invisible to visible!
COMMENT_LINE $39A7 in d clipcounter
COMMENT_LINE $39A7 v0 is set
COMMENT_LINE $39A7 x coordinates must always be 0 if we come here!
COMMENT_LINE $39A7 macro call ->                     EXPONENT_TOP_INV_TO_VIS
FORCE_SYMBOL $39A7 CALC_P2_y
COMMENT $39AA pattern first vector is invisible
FORCE_SYMBOL $39AA _pat1
COMMENT $39AE pattern second vector is visible
FORCE_SYMBOL $39AE _pat2
FORCE_NO_SYMBOL $39B0
COMMENT $39B2 now != 0 -> visible
FORCE_SYMBOL $39B2 clip_test
COMMENT $39B7 last positibe must be stored!
FORCE_NO_SYMBOL $39B7
COMMENT_LINE $39BA -------------------------------------------------------------------------------------------
COMMENT_LINE $39BA -------------------------------------------------------------------------------------------
COMMENT_LINE $39BA -------------------------------------------------------------------------------------------
COMMENT_LINE $39BA -------------------------------------------------------------------------------------------
COMMENT_LINE $39BA include line ->                     include  "displayWorldCompiledClippedLookAheadInline.asm"
COMMENT_LINE $39BA TODO
COMMENT_LINE $39BA at the moment  tile pos (coarse/fine)
COMMENT_LINE $39BA AND
COMMENT_LINE $39BA tile screen pos (displayx/displayy) both is tested for display
COMMENT_LINE $39BA one for lower, one for upper bound
COMMENT_LINE $39BA only one should really be needed
COMMENT_LINE $39BA TODO
COMMENT_LINE $39BA init test values
COMMENT_LINE $39BA than we can add x/y fine to display right from start
COMMENT_LINE $39BA and do not have to do that with every single printed tile!
COMMENT_LINE $39BA facts:
COMMENT_LINE $39BA displays level with x-1 width instead of  x, last row is truncated as of now
COMMENT_LINE $39BA displays level with y-1 width instead of  y, last column is truncated as of now
COMMENT_LINE $39BA ***************************************************************************
COMMENT_LINE $39BA ***************************************************************************
COMMENT_LINE $39BA ***************************************************************************
COMMENT_LINE $39BA use U instead of X to save a cycle?
COMMENT_LINE $39BA puls d vs ldd ,x [7] <-> [8]
COMMENT $39BA correct stack and return
COMMENT_LINE $39BC ***************************************************************************
COMMENT_LINE $39BC the general idea to draw the world with clipped tiles goes:
COMMENT_LINE $39BC drawing 3 parts
COMMENT_LINE $39BC top clipped
COMMENT_LINE $39BC middle part
COMMENT_LINE $39BC bottom clipped
COMMENT_LINE $39BC within each part left and right clips are done seperately
COMMENT_LINE $39BC there is a right/left and vertical buffer
COMMENT_LINE $39BC if the same kind of types come in a row - they only need to be clipped once!
COMMENT_LINE $39BC ***************************************************************************
FORCE_SYMBOL $39BD verticalBuffer
FORCE_SYMBOL $39C0 horizontalLeftBuffer
FORCE_SYMBOL $39C3 horizontalRightBuffer
FORCE_SYMBOL $39C6 END_POS_VERTICAL
FORCE_SYMBOL $39C8 yFine
FORCE_SYMBOL $39CB endVerticalcompare
COMMENT_LINE $39CE INIT clip Pos
COMMENT_LINE $39CE clipping is done in positions of tile strength
COMMENT_LINE $39CE tile strengths are 2,4,8,16,32,64,128
COMMENT_LINE $39CE (128 represented by 127)
COMMENT_LINE $39CE so we take the max, == 128
COMMENT_LINE $39CE xfine or yfine is in resolution of screen tile size, which is TILE_WIDTH or TILE_HEIGHT
COMMENT_LINE $39CE which will be quite different
COMMENT_LINE $39CE translation is 128/TILE_WIDTH and 128/TILE_HEIGHT per step
COMMENT_LINE $39CE clip = xfine * (128/TILE_WIDTH)
COMMENT_LINE $39CE in the final version idealy 128/TILE_WIDTH is one of 2,4,8,16,32... than wie can do simple lsl
COMMENT_LINE $39CE for now we do a mul to be exact
COMMENT_LINE $39CE clip initialized adjusted in move handle
COMMENT_LINE $39CE TODO
COMMENT_LINE $39CE init test values
COMMENT_LINE $39CE than we cann add x/y fine to display right from start
COMMENT_LINE $39CE and do not have to do that with every single printed tile!
COMMENT_LINE $39CE if I place +- tile height
COMMENT_LINE $39CE I am able to add/subtract to the coordinates for scrolling!
COMMENT_LINE $39CE if I use the full size
COMMENT_LINE $39CE adding/subtracting will result in carry flags...
FORCE_SYMBOL $39CE START_POS
FORCE_SYMBOL $39D1 yFine
FORCE_SYMBOL $39D4 displayPosY
COMMENT $39D7 table of tile map horizontal data
FORCE_SYMBOL $39D7 lines1
COMMENT $39DB the position within the level that is displayed
FORCE_SYMBOL $39DB yCoarse
COMMENT $39DE two times because of word pointers
COMMENT $39E1 load address of first coarse line
FORCE_NO_SYMBOL $39E1
COMMENT $39E4 load address of next coarse line
COMMENT $39E6 store next on stack
COMMENT_LINE $39E8 ---------------------------------------------------------------------------------------------
COMMENT_LINE $39E8 PART ONE TOP CLIPPED
COMMENT_LINE $39E8 ---------------------------------------------------------------------------------------------
COMMENT $39E8 coarse check represents the last printed position
FORCE_SYMBOL $39E8 xCoarseCheck
COMMENT_LINE $39EB y points to first "X" data in a line
FORCE_SYMBOL $39EB yFine
COMMENT $39EE if yFine is 0 than no top clip necessary - we can jump to center display right away
COMMENT $39F2 load position of tile
FORCE_NO_SYMBOL $39F2
COMMENT $39F4 if negative, line is finished
COMMENT $39F8 if higher coarsecheck, than potentially this tile can be printed
FORCE_SYMBOL $39F8 xCoarseCheck
COMMENT $39FB jump if "printable"
COMMENT $39FD otherwise increase y with length of one "x" entry
FORCE_SYMBOL $39FD X_ENTRY_LENGTH
COMMENT $39FF and keep on looking for a tile
COMMENT_LINE $3A01 test if x pos higher display width
COMMENT $3A01 determine screen position by reducing the current start position in level display
FORCE_SYMBOL $3A01 xCoarse
FORCE_SYMBOL $3A04 FULL_TILES_HORIZONTAL
COMMENT $3A06 if wider than one display size, jump to next line (out of top line)
COMMENT $3A0A load end position of tile
FORCE_NO_SYMBOL $3A0A
COMMENT $3A0C to the xCoarse check
FORCE_SYMBOL $3A0C xCoarseCheck
COMMENT_LINE $3A0F todo possibly test if
COMMENT_LINE $3A0F tile size is larger than display witdh, possibly shorten to only display a "partial" tile
COMMENT_LINE $3A0F in b the tile position of the tile
COMMENT_LINE $3A0F now calculate the display position, multiply with "tile width"
COMMENT_LINE $3A0F here display top clipped tile
COMMENT_LINE $3A0F and adjust position with the actual start position of our display
COMMENT_LINE $3A0F realized as lookup table. since the muls are fix
FORCE_SYMBOL $3A0F xPosLookup
COMMENT $3A14 this will be our x position on screen
FORCE_SYMBOL $3A14 displayPosX
COMMENT_LINE $3A17 macro call ->                     _SCALE   SCALE_MOVE                   ; scale for move
COMMENT $3A17 scale for placing first point
FORCE_SYMBOL $3A17 SCALE_MOVE
COMMENT_LINE $3A19 macro call ->                     _SCALE_A
COMMENT $3A19 move to time 1 lo, this means scaling
FORCE_SYMBOL $3A19 VIA_t1_cnt_lo
FORCE_SYMBOL $3A1B displayPosY
FORCE_SYMBOL $3A1E xFine
COMMENT_LINE $3A21 macro call ->                     MY_MOVE_TO_D_START
COMMENT $3A21 Store Y in D/A register
FORCE_SYMBOL $3A21 VIA_port_a
COMMENT $3A23 Blank low, zero high?
FORCE_NO_SYMBOL $3A23
FORCE_SYMBOL $3A25 VIA_cntl
COMMENT $3A28 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $3A28 VIA_port_b
COMMENT $3A2A Clear shift regigster
FORCE_SYMBOL $3A2A VIA_shift_reg
COMMENT $3A2C Disable mux
FORCE_SYMBOL $3A2C VIA_port_b
COMMENT $3A2E Store X in D/A register
FORCE_SYMBOL $3A2E VIA_port_a
COMMENT $3A30 enable timer
FORCE_SYMBOL $3A30 VIA_t1_cnt_hi
COMMENT_LINE $3A32 macro call ->  LOAD_TILE_VLIST
COMMENT $3A32 address of vectorlist
FORCE_NO_SYMBOL $3A32
FORCE_SYMBOL $3A38 counter0
COMMENT_LINE $3A3D in a the current animation counter of correct length
COMMENT_LINE $3A40 in a number of animation steps of tile list
COMMENT_LINE $3A40 DO CLIPPING AND CHANGE OF VLIST HERE
COMMENT_LINE $3A40 we buffer clipped vectors, if two same vlists are the same -> reuse the buffer
COMMENT $3A40 id of vector
FORCE_SYMBOL $3A42 verticalBuffer
FORCE_SYMBOL $3A47 verticalBuffer
COMMENT $3A4A address of result list
FORCE_SYMBOL $3A4A clipped_vector_vertical
COMMENT $3A4D type of vectorlist
COMMENT $3A4F remember type, since for left/right we might need it, and it must be at vlist start -1
COMMENT $3A51 no -> full clip
COMMENT $3A53 place where to clip
FORCE_SYMBOL $3A53 topclip
COMMENT_LINE $3A56 macro call ->                     SIMPLE_CLIP_TOP
FORCE_SYMBOL $3A56 clip_vlp_stop
COMMENT $3A5B place where to clip
FORCE_SYMBOL $3A5B topclip
COMMENT_LINE $3A5E macro call ->                     EXPONENT_CLIP_TOP
FORCE_SYMBOL $3A5E clip_vlp_p2_top
COMMENT $3A61 use the just generated vlist as source
FORCE_SYMBOL $3A61 clipped_vector_vertical
COMMENT_LINE $3A64 ---- top clip end
COMMENT_LINE $3A64 exits with X pointing to current vlist
COMMENT_LINE $3A64 here test for left/right clip!
COMMENT_LINE $3A64 first test left
FORCE_SYMBOL $3A64 displayPosX
COMMENT $3A67 test if there is a left clip tile possible!
FORCE_SYMBOL $3A67 START_POS_HORIZONTAL
FORCE_SYMBOL $3A6B xFine
COMMENT_LINE $3A70 this is a corner piece, also clip left!
COMMENT_LINE $3A70 D = clipping place (in scale of added strengths of vector X positions)
COMMENT_LINE $3A70 X = Vector list to clip
COMMENT_LINE $3A70 U = vectorlist to clip to
COMMENT $3A70 current clipping pos
FORCE_SYMBOL $3A70 leftclip
COMMENT $3A73 address of result list
FORCE_SYMBOL $3A73 clipped_vector_final
COMMENT $3A76 is this an easy clip vector?
COMMENT $3A78 no -> full clip
COMMENT_LINE $3A7A macro call ->                     SIMPLE_CLIP_LEFT
FORCE_SYMBOL $3A7A clip_vlp_nsleft
COMMENT_LINE $3A7F macro call ->                     EXACT_CLIP_LEFT
FORCE_SYMBOL $3A7F clip_vlp_pExact_left
COMMENT $3A82 address of result list
FORCE_SYMBOL $3A82 clipped_vector_final
COMMENT_LINE $3A85 macro call ->                     DRAW_IT
COMMENT_LINE $3A85 macro call ->                     _SCALE   SCALE_VLIST
COMMENT $3A85 scale for placing first point
FORCE_SYMBOL $3A85 SCALE_VLIST
COMMENT_LINE $3A87 macro call ->                     _SCALE_A
COMMENT $3A87 move to time 1 lo, this means scaling
FORCE_SYMBOL $3A87 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $3A89
COMMENT_LINE $3A8B macro call ->                     MY_MOVE_TO_B_END
FORCE_NO_SYMBOL $3A8B
FORCE_SYMBOL $3A8D VIA_int_flags
FORCE_SYMBOL $3A91 myDraw_VL_mode2
COMMENT $3A94 otherwise increase y with length of one "x" entry
FORCE_SYMBOL $3A94 X_ENTRY_LENGTH
COMMENT $3A96 and keep on looking for a tile
FORCE_SYMBOL $3A96 keepLookingTop
COMMENT_LINE $3A99 ;;  multi tile up to three insert
FORCE_SYMBOL $3A99 xFine
FORCE_SYMBOL $3A9E rightclip
FORCE_SYMBOL $3AA6 rightclip
COMMENT $3AA9 TILE_WIDTH
FORCE_NO_SYMBOL $3AA9
FORCE_SYMBOL $3AAE xFine
FORCE_SYMBOL $3AB3 rightclip
FORCE_SYMBOL $3ABB rightclip
FORCE_NO_SYMBOL $3ABE
COMMENT_LINE $3AC3 now test for right
FORCE_NO_SYMBOL $3AC3
FORCE_SYMBOL $3AC7 END_POS_HORIZONTAL
COMMENT $3AC9 check if X boundary
FORCE_SYMBOL $3ACB TILE_WIDTH
FORCE_SYMBOL $3ACD END_POS_HORIZONTAL
COMMENT $3ACF check if X boundary
FORCE_SYMBOL $3AD4 TILE_WIDTH
FORCE_SYMBOL $3AD6 END_POS_HORIZONTAL
COMMENT $3AD8 check if X boundary
COMMENT_LINE $3ADA max width of multi tile is 2, so only two tests
COMMENT_LINE $3ADC ;;
COMMENT_LINE $3ADC now test for right
FORCE_SYMBOL $3ADC END_POS_HORIZONTAL
COMMENT $3ADE check if X boundary
COMMENT_LINE $3AE0 macro call ->                     DRAW_IT
COMMENT_LINE $3AE0 macro call ->                     _SCALE   SCALE_VLIST
COMMENT $3AE0 scale for placing first point
FORCE_SYMBOL $3AE0 SCALE_VLIST
COMMENT_LINE $3AE2 macro call ->                     _SCALE_A
COMMENT $3AE2 move to time 1 lo, this means scaling
FORCE_SYMBOL $3AE2 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $3AE4
COMMENT_LINE $3AE6 macro call ->                     MY_MOVE_TO_B_END
FORCE_NO_SYMBOL $3AE6
FORCE_SYMBOL $3AE8 VIA_int_flags
FORCE_SYMBOL $3AEC myDraw_VL_mode2
COMMENT $3AEF otherwise increase y with length of one "x" entry
FORCE_SYMBOL $3AEF X_ENTRY_LENGTH
COMMENT $3AF1 and keep on looking for a tile
FORCE_SYMBOL $3AF1 keepLookingTop
FORCE_SYMBOL $3AF4 xFine
COMMENT $3AF9 make sure ramping is disabled
FORCE_NO_SYMBOL $3AF9
COMMENT $3AFC disable ramping
FORCE_SYMBOL $3AFC VIA_t1_cnt_lo
COMMENT_LINE $3AFE macro call ->                     _ZERO_VECTOR_BEAM                     ; and we go to zero
FORCE_NO_SYMBOL $3AFE
COMMENT $3B00 /BLANK low and /ZERO low
FORCE_SYMBOL $3B00 VIA_cntl
COMMENT $3B02 incTilePos_top
COMMENT_LINE $3B04 this is a corner piece, also clip right!
COMMENT_LINE $3B04 D = clipping place (in scale of added strengths of vector X positions)
COMMENT_LINE $3B04 X = Vector list
FORCE_SYMBOL $3B04 rightclip
COMMENT $3B07 address of result list
FORCE_SYMBOL $3B07 clipped_vector_final
COMMENT $3B0A is this an easy clip vector?
COMMENT $3B0C no -> full clip
COMMENT_LINE $3B0E macro call ->                     SIMPLE_CLIP_RIGHT
FORCE_SYMBOL $3B0E clip_vlp_nsright
COMMENT_LINE $3B13 macro call ->                     EXACT_CLIP_RIGHT
FORCE_SYMBOL $3B13 clip_vlp_pExact_right
COMMENT $3B16 address of result list
FORCE_SYMBOL $3B16 clipped_vector_final
COMMENT_LINE $3B19 draw it and go to center
COMMENT_LINE $3B19 macro call ->                     DRAW_IT
COMMENT_LINE $3B19 macro call ->                     _SCALE   SCALE_VLIST
COMMENT $3B19 scale for placing first point
FORCE_SYMBOL $3B19 SCALE_VLIST
COMMENT_LINE $3B1B macro call ->                     _SCALE_A
COMMENT $3B1B move to time 1 lo, this means scaling
FORCE_SYMBOL $3B1B VIA_t1_cnt_lo
FORCE_NO_SYMBOL $3B1D
COMMENT_LINE $3B1F macro call ->                     MY_MOVE_TO_B_END
FORCE_NO_SYMBOL $3B1F
FORCE_SYMBOL $3B21 VIA_int_flags
FORCE_SYMBOL $3B25 myDraw_VL_mode2
COMMENT_LINE $3B28 ---------------------------------------------------------------------------------------------
COMMENT $3B28 on stack the beginning of the next line
FORCE_NO_SYMBOL $3B28
FORCE_NO_SYMBOL $3B2D
COMMENT_LINE $3B2F ---------------------------------------------------------------------------------------------
COMMENT_LINE $3B2F PART CENTER TILES
COMMENT_LINE $3B2F ---------------------------------------------------------------------------------------------
COMMENT $3B2F go down one y position (here always one tile height)
FORCE_SYMBOL $3B2F displayPosY
FORCE_SYMBOL $3B32 TILE_HEIGHT
FORCE_SYMBOL $3B34 displayPosY
FORCE_SYMBOL $3B37 xCoarse
FORCE_SYMBOL $3B3A xCoarseCheck
COMMENT_LINE $3B3D y points to first "X" data in a line
COMMENT_LINE $3B3D destroys x
COMMENT_LINE $3B3D "returns" with y pointing to first x entry in whatever line
COMMENT_LINE $3B3D displayPosY is correctly updated
COMMENT $3B3D load position of tile
FORCE_NO_SYMBOL $3B3D
COMMENT $3B3F check if line is finished, on negative -> yes branch
COMMENT $3B41 compare to current coarse position
FORCE_SYMBOL $3B41 xCoarseCheck
COMMENT $3B44 if higher than current coarse, than print it (potentially)
COMMENT $3B46 increase level pointer by one X position size
FORCE_SYMBOL $3B46 X_ENTRY_LENGTH
COMMENT $3B48 and check next entry
COMMENT $3B4A go down one y position (here always one tile height)
FORCE_SYMBOL $3B4A displayPosY
FORCE_SYMBOL $3B4D TILE_HEIGHT
FORCE_SYMBOL $3B4F displayPosY
COMMENT $3B52 check if we approach last line
FORCE_SYMBOL $3B52 endVerticalcompare
COMMENT $3B55 if so - branch
COMMENT $3B59 on stack the beginning of the next line
FORCE_NO_SYMBOL $3B59
COMMENT $3B5C if next line is -1 than we are completly done
COMMENT $3B60 load pointer of next line, and increase to line start
COMMENT $3B62 store to stack
FORCE_NO_SYMBOL $3B62
COMMENT $3B64 and start checking next line
COMMENT_LINE $3B66 first time round only
COMMENT_LINE $3B66 TODO optimize tile info to not "add" but sum instead!
COMMENT $3B66 load position of tile
FORCE_NO_SYMBOL $3B66
FORCE_SYMBOL $3B68 xCoarseCheck
COMMENT_LINE $3B6B test if x pos higher display width
COMMENT $3B6B calculate correct screen posiiton in tiles
FORCE_SYMBOL $3B6B xCoarse
COMMENT $3B6E if larger than possibly displayed
FORCE_SYMBOL $3B6E FULL_TILES_HORIZONTAL
COMMENT $3B70 go to next line
COMMENT_LINE $3B72 here display tile is an actual fact
COMMENT_LINE $3B72 todo possibly test if
COMMENT_LINE $3B72 tile size is larger than display witdh, possibly shorten to only display a "partial" tile
COMMENT_LINE $3B72 in b the tile position of the tile
COMMENT_LINE $3B72 now calculate the display position, multiply with "tile width"
COMMENT_LINE $3B72 here display bottom clipped tile
COMMENT_LINE $3B72 and adjust position with the actual start position of our display
COMMENT_LINE $3B72 realized as lookup table. since the muls are fix
FORCE_SYMBOL $3B72 xPosLookup
COMMENT $3B77 this will be our x position on screen
FORCE_SYMBOL $3B77 displayPosX
COMMENT_LINE $3B7A in displayPosY/displayPosY the next position (without xFine/yFine)
COMMENT_LINE $3B7A macro call ->                     _SCALE   SCALE_MOVE                   ; scale for move
COMMENT $3B7A scale for placing first point
FORCE_SYMBOL $3B7A SCALE_MOVE
COMMENT_LINE $3B7C macro call ->                     _SCALE_A
COMMENT $3B7C move to time 1 lo, this means scaling
FORCE_SYMBOL $3B7C VIA_t1_cnt_lo
FORCE_SYMBOL $3B7E displayPosY
FORCE_SYMBOL $3B81 xFine
COMMENT_LINE $3B84 macro call ->                     MY_MOVE_TO_D_START
COMMENT $3B84 Store Y in D/A register
FORCE_SYMBOL $3B84 VIA_port_a
COMMENT $3B86 Blank low, zero high?
FORCE_NO_SYMBOL $3B86
FORCE_SYMBOL $3B88 VIA_cntl
COMMENT $3B8B Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $3B8B VIA_port_b
COMMENT $3B8D Clear shift regigster
FORCE_SYMBOL $3B8D VIA_shift_reg
COMMENT $3B8F Disable mux
FORCE_SYMBOL $3B8F VIA_port_b
COMMENT $3B91 Store X in D/A register
FORCE_SYMBOL $3B91 VIA_port_a
COMMENT $3B93 enable timer
FORCE_SYMBOL $3B93 VIA_t1_cnt_hi
COMMENT_LINE $3B95 macro call ->  LOAD_TILE_VLIST
COMMENT $3B95 address of vectorlist
FORCE_NO_SYMBOL $3B95
FORCE_SYMBOL $3B9B counter0
COMMENT_LINE $3BA0 in a the current animation counter of correct length
COMMENT_LINE $3BA3 in a number of animation steps of tile list
COMMENT_LINE $3BA3 here we are "in move" check for clipping and do the clip, left/none/right
COMMENT_LINE $3BA3 first test left
COMMENT_LINE $3BA3 noTopClipNeccessary_ever
FORCE_SYMBOL $3BA3 displayPosX
COMMENT $3BA6 test if there is a left clip tile possible!
FORCE_SYMBOL $3BA6 START_POS_HORIZONTAL
FORCE_SYMBOL $3BAC xFine
COMMENT $3BB3 id of vector
FORCE_SYMBOL $3BB5 horizontalLeftBuffer
COMMENT $3BBA address of result list
FORCE_SYMBOL $3BBA clipped_vector_left
FORCE_SYMBOL $3BBD displayCont_center
FORCE_SYMBOL $3BC0 horizontalLeftBuffer
FORCE_SYMBOL $3BC3 leftclip
COMMENT $3BC6 address of result list
FORCE_SYMBOL $3BC6 clipped_vector_left
COMMENT_LINE $3BC9 clip left!
COMMENT_LINE $3BC9 D = clipping place (in scale of added strengths of vector X positions)
COMMENT_LINE $3BC9 X = Vector list to clip
COMMENT_LINE $3BC9 U = target of clipping
COMMENT $3BC9 is this an easy clip vector?
COMMENT $3BCB no -> full clip
COMMENT_LINE $3BCD macro call ->                     SIMPLE_CLIP_LEFT
FORCE_SYMBOL $3BCD clip_vlp_nsleft
COMMENT $3BD0 address of result list
FORCE_SYMBOL $3BD0 clipped_vector_left
COMMENT_LINE $3BD5 macro call ->                     EXPONENT_CLIP_LEFT
FORCE_SYMBOL $3BD5 clip_vlp_p2_left
COMMENT $3BD8 address of result list
FORCE_SYMBOL $3BD8 clipped_vector_left
FORCE_SYMBOL $3BDD xFine
COMMENT $3BE2 make sure ramping is disabled
FORCE_NO_SYMBOL $3BE2
COMMENT $3BE5 disable ramping
FORCE_SYMBOL $3BE5 VIA_t1_cnt_lo
COMMENT_LINE $3BE7 macro call ->                     _ZERO_VECTOR_BEAM                     ; and we go to zero
FORCE_NO_SYMBOL $3BE7
COMMENT $3BE9 /BLANK low and /ZERO low
FORCE_SYMBOL $3BE9 VIA_cntl
COMMENT $3BEB incTilePos
FORCE_SYMBOL $3BEB lineEndFoundCenter
FORCE_SYMBOL $3BEE rightclip
COMMENT $3BF1 address of result list
FORCE_SYMBOL $3BF1 clipped_vector_right
COMMENT_LINE $3BF4 clip right!
COMMENT_LINE $3BF4 D = clipping place (in scale of added strengths of vector X positions)
COMMENT_LINE $3BF4 X = Vector list to clip
COMMENT_LINE $3BF4 U = target of clipping
COMMENT $3BF4 is this an easy clip vector?
COMMENT $3BF6 no -> full clip
COMMENT_LINE $3BF8 macro call ->                     SIMPLE_CLIP_RIGHT
FORCE_SYMBOL $3BF8 clip_vlp_nsright
COMMENT_LINE $3BFD macro call ->                     EXPONENT_CLIP_RIGHT
FORCE_SYMBOL $3BFD clip_vlp_p2_right
COMMENT $3C00 address of result list
FORCE_SYMBOL $3C00 clipped_vector_right
FORCE_SYMBOL $3C03 displayPosY
FORCE_SYMBOL $3C06 xFine
COMMENT_LINE $3C0B multi tile up to three insert
FORCE_SYMBOL $3C0B xFine
FORCE_SYMBOL $3C10 rightclip
FORCE_SYMBOL $3C18 rightclip
COMMENT $3C1B TILE_WIDTH
FORCE_NO_SYMBOL $3C1B
FORCE_SYMBOL $3C20 xFine
FORCE_SYMBOL $3C25 rightclip
FORCE_SYMBOL $3C2D rightclip
FORCE_NO_SYMBOL $3C30
COMMENT_LINE $3C35 multi tile up to three insert end
COMMENT_LINE $3C35 now test for right
FORCE_NO_SYMBOL $3C35
FORCE_SYMBOL $3C39 END_POS_HORIZONTAL
COMMENT $3C3B check if X boundary
FORCE_SYMBOL $3C3D TILE_WIDTH
FORCE_SYMBOL $3C3F END_POS_HORIZONTAL
COMMENT $3C41 check if X boundary
FORCE_SYMBOL $3C46 TILE_WIDTH
FORCE_SYMBOL $3C48 END_POS_HORIZONTAL
COMMENT $3C4A check if X boundary
COMMENT_LINE $3C4E max width of multi tile is 2, so only two tests
FORCE_SYMBOL $3C4E END_POS_HORIZONTAL
COMMENT $3C50 check if X boundary
COMMENT_LINE $3C52 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $3C52 next time there will be use of the look ahead calculations
COMMENT_LINE $3C52 this part realizes the center "in move" look ahead - start
COMMENT_LINE $3C52 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $3C52 increase level pointer by one X position size
FORCE_SYMBOL $3C52 X_ENTRY_LENGTH
COMMENT $3C54 load position of tile
FORCE_NO_SYMBOL $3C54
COMMENT $3C56 check if line is finished, on negative -> yes branch
COMMENT $3C58 compare to current coarse position
FORCE_SYMBOL $3C58 xCoarseCheck
COMMENT $3C5B if higher than current coarse, than print it
COMMENT $3C5D load position of tile
FORCE_NO_SYMBOL $3C5D
FORCE_SYMBOL $3C5F xCoarseCheck
COMMENT_LINE $3C62 test if x pos higher display width
COMMENT $3C62 calculate correct screen posiiton in tiles
FORCE_SYMBOL $3C62 xCoarse
COMMENT $3C65 if larger than possibly displayed
FORCE_SYMBOL $3C65 FULL_TILES_HORIZONTAL
COMMENT $3C67 go to next line
COMMENT_LINE $3C69 here display tile next is an actual fact
COMMENT_LINE $3C69 now calculate the display position, multiply with "tile width"
COMMENT_LINE $3C69 here display bottom clipped tile
COMMENT_LINE $3C69 and adjust position with the actual start position of our display
COMMENT_LINE $3C69 realized as lookup table. since the muls are fix
FORCE_SYMBOL $3C69 xPosLookup
COMMENT $3C6E this will be our x position on screen
FORCE_SYMBOL $3C6E displayPosX
FORCE_SYMBOL $3C71 displayPosY
FORCE_SYMBOL $3C74 xFine
FORCE_SYMBOL $3C77 nextDisplayPos
COMMENT_LINE $3C7A jmp to display
COMMENT_LINE $3C7A macro call ->                     DRAW_IT
COMMENT_LINE $3C7A macro call ->                     _SCALE   SCALE_VLIST
COMMENT $3C7A scale for placing first point
FORCE_SYMBOL $3C7A SCALE_VLIST
COMMENT_LINE $3C7C macro call ->                     _SCALE_A
COMMENT $3C7C move to time 1 lo, this means scaling
FORCE_SYMBOL $3C7C VIA_t1_cnt_lo
FORCE_NO_SYMBOL $3C7E
COMMENT_LINE $3C80 macro call ->                     MY_MOVE_TO_B_END
FORCE_NO_SYMBOL $3C80
FORCE_SYMBOL $3C82 VIA_int_flags
FORCE_SYMBOL $3C86 myDraw_VL_mode2
COMMENT_LINE $3C89 macro call ->                     _SCALE   SCALE_MOVE                   ; scale for move
COMMENT $3C89 scale for placing first point
FORCE_SYMBOL $3C89 SCALE_MOVE
COMMENT_LINE $3C8B macro call ->                     _SCALE_A
COMMENT $3C8B move to time 1 lo, this means scaling
FORCE_SYMBOL $3C8B VIA_t1_cnt_lo
FORCE_SYMBOL $3C8D nextDisplayPos
COMMENT_LINE $3C90 nop 10
FORCE_SYMBOL $3C90 display_center_start
COMMENT $3C93 go down one y position (here always one tile height)
FORCE_SYMBOL $3C93 displayPosY
FORCE_SYMBOL $3C96 TILE_HEIGHT
FORCE_SYMBOL $3C98 displayPosY
COMMENT $3C9B check if we approach last line
FORCE_SYMBOL $3C9B endVerticalcompare
COMMENT $3C9E if so - branch (out of macro)
COMMENT_LINE $3CA0 seekInNextLineCenter:
COMMENT $3CA0 on stack the beginning of the next line
FORCE_NO_SYMBOL $3CA0
COMMENT $3CA3 if next line is -1 than we are completly done
COMMENT $3CA5 load pointer of next line, and increase to line start
COMMENT $3CA7 store to stack
FORCE_NO_SYMBOL $3CA7
COMMENT_LINE $3CA9 continueCenterNextLine
FORCE_SYMBOL $3CA9 xCoarse
FORCE_SYMBOL $3CAC xCoarseCheck
COMMENT_LINE $3CAF y points to first "X" data in a line
COMMENT_LINE $3CAF destroys x
COMMENT_LINE $3CAF "returns" with y pointing to first x entry in whatever line
COMMENT_LINE $3CAF displayPosY is correctly updated
COMMENT_LINE $3CB1 macro call ->                     DRAW_IT
COMMENT_LINE $3CB1 macro call ->                     _SCALE   SCALE_VLIST
COMMENT $3CB1 scale for placing first point
FORCE_SYMBOL $3CB1 SCALE_VLIST
COMMENT_LINE $3CB3 macro call ->                     _SCALE_A
COMMENT $3CB3 move to time 1 lo, this means scaling
FORCE_SYMBOL $3CB3 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $3CB5
COMMENT_LINE $3CB7 macro call ->                     MY_MOVE_TO_B_END
FORCE_NO_SYMBOL $3CB7
FORCE_SYMBOL $3CB9 VIA_int_flags
FORCE_SYMBOL $3CBD myDraw_VL_mode2
COMMENT $3CC0 if so - branch (out of macro)
COMMENT_LINE $3CC2 macro call ->                     DRAW_IT
COMMENT_LINE $3CC2 macro call ->                     _SCALE   SCALE_VLIST
COMMENT $3CC2 scale for placing first point
FORCE_SYMBOL $3CC2 SCALE_VLIST
COMMENT_LINE $3CC4 macro call ->                     _SCALE_A
COMMENT $3CC4 move to time 1 lo, this means scaling
FORCE_SYMBOL $3CC4 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $3CC6
COMMENT_LINE $3CC8 macro call ->                     MY_MOVE_TO_B_END
FORCE_NO_SYMBOL $3CC8
FORCE_SYMBOL $3CCA VIA_int_flags
FORCE_SYMBOL $3CCE myDraw_VL_mode2
COMMENT $3CD1 if so - branch (out of macro)
FORCE_SYMBOL $3CD1 displaylevelDone
COMMENT_LINE $3CD4 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $3CD4 this part realizes the center "in move" look ahead - end
COMMENT_LINE $3CD4 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $3CD4 ---------------------------------------------------------------------------------------------
COMMENT_LINE $3CD4 PART BOTTOM TILES
COMMENT_LINE $3CD4 ---------------------------------------------------------------------------------------------
COMMENT $3CD4 in preparation of bottom
FORCE_SYMBOL $3CD4 verticalBuffer
COMMENT $3CD7 on stack the beginning of the next line
FORCE_NO_SYMBOL $3CD7
COMMENT $3CDA if next line is -1 than we are completly done
COMMENT $3CDE load pointer of next line, and increase to line start
COMMENT $3CE0 store to stack
FORCE_NO_SYMBOL $3CE0
FORCE_SYMBOL $3CE2 xCoarse
COMMENT $3CE5 coarse check represents the last printed position
FORCE_SYMBOL $3CE5 xCoarseCheck
COMMENT_LINE $3CE8 y points to first "X" data in a line
COMMENT_LINE $3CE8 destroys x
COMMENT_LINE $3CE8 "returns" with y pointing to first x entry in whatever line
COMMENT_LINE $3CE8 displayPosY is correctly updated
COMMENT $3CE8 load position of tile
FORCE_NO_SYMBOL $3CE8
COMMENT $3CEA if negative, line is finished, which on the bottom line also means display is finished
COMMENT $3CEE if higher coarsecheck, than potentially this tile can be printed
FORCE_SYMBOL $3CEE xCoarseCheck
COMMENT $3CF1 jump if "printable"
COMMENT $3CF3 otherwise increase y with length of one "x" entry
FORCE_SYMBOL $3CF3 X_ENTRY_LENGTH
COMMENT $3CF5 and keep on looking for a tile
COMMENT_LINE $3CF7 TODO optimize tile info to not "add" but sum instead!
COMMENT $3CF7 load position of tile
FORCE_NO_SYMBOL $3CF7
COMMENT $3CF9 to the xCoarse check
FORCE_SYMBOL $3CF9 xCoarseCheck
COMMENT_LINE $3CFC test if x pos higher display width
COMMENT $3CFC determine screen position by reducing the current start position in level display
FORCE_SYMBOL $3CFC xCoarse
FORCE_SYMBOL $3CFF FULL_TILES_HORIZONTAL
COMMENT $3D01 if wider than one display size, which on the bottom line also means display is finished
COMMENT_LINE $3D05 todo possibly test if
COMMENT_LINE $3D05 tile size is larger than display witdh, possibly shorten to only display a "partial" tile
COMMENT_LINE $3D05 in b the tile position of the tile
COMMENT_LINE $3D05 now calculate the display position, multiply with "tile width"
COMMENT_LINE $3D05 here display bottom clipped tile
COMMENT_LINE $3D05 and adjust position with the actual start position of our display
COMMENT_LINE $3D05 realized as lookup table. since the muls are fix
FORCE_SYMBOL $3D05 xPosLookup
COMMENT $3D0A this will be our x position on screen
FORCE_SYMBOL $3D0A displayPosX
COMMENT_LINE $3D0D in displayPosY/displayPosX the next position (without yFine/xFine)
COMMENT_LINE $3D0D macro call ->                     _SCALE   SCALE_MOVE                   ; scale for move
COMMENT $3D0D scale for placing first point
FORCE_SYMBOL $3D0D SCALE_MOVE
COMMENT_LINE $3D0F macro call ->                     _SCALE_A
COMMENT $3D0F move to time 1 lo, this means scaling
FORCE_SYMBOL $3D0F VIA_t1_cnt_lo
FORCE_SYMBOL $3D11 displayPosY
FORCE_SYMBOL $3D14 xFine
COMMENT_LINE $3D17 macro call ->                     MY_MOVE_TO_D_START
COMMENT $3D17 Store Y in D/A register
FORCE_SYMBOL $3D17 VIA_port_a
COMMENT $3D19 Blank low, zero high?
FORCE_NO_SYMBOL $3D19
FORCE_SYMBOL $3D1B VIA_cntl
COMMENT $3D1E Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $3D1E VIA_port_b
COMMENT $3D20 Clear shift regigster
FORCE_SYMBOL $3D20 VIA_shift_reg
COMMENT $3D22 Disable mux
FORCE_SYMBOL $3D22 VIA_port_b
COMMENT $3D24 Store X in D/A register
FORCE_SYMBOL $3D24 VIA_port_a
COMMENT $3D26 enable timer
FORCE_SYMBOL $3D26 VIA_t1_cnt_hi
COMMENT_LINE $3D28 DO CLIPPING AND CHANGE OF VLIST HERE
COMMENT_LINE $3D28 ---- bottom clip start
FORCE_SYMBOL $3D28 yFine
COMMENT_LINE $3D2F we buffer clipped vectors, if two same vlists are the same -> reuse the buffer
COMMENT_LINE $3D2F macro call ->  LOAD_TILE_VLIST
COMMENT $3D2F address of vectorlist
FORCE_NO_SYMBOL $3D2F
FORCE_SYMBOL $3D35 counter0
COMMENT_LINE $3D3A in a the current animation counter of correct length
COMMENT_LINE $3D3D in a number of animation steps of tile list
COMMENT $3D3D id of vector
FORCE_SYMBOL $3D3F verticalBuffer
FORCE_SYMBOL $3D44 verticalBuffer
COMMENT $3D47 address of result list
FORCE_SYMBOL $3D47 clipped_vector_vertical
COMMENT $3D4A type of vectorlist
COMMENT $3D4C remember type, since for left/right we might need it, and it must be at vlist start -1
COMMENT $3D4E no -> full clip
COMMENT $3D50 place where to clip
FORCE_SYMBOL $3D50 bottomclip
COMMENT_LINE $3D53 macro call ->                     SIMPLE_CLIP_BOTTOM
FORCE_SYMBOL $3D53 clip_vlp_sbottom
COMMENT $3D58 place where to clip
FORCE_SYMBOL $3D58 bottomclip
COMMENT_LINE $3D5B macro call ->                     EXPONENT_CLIP_BOTTOM
FORCE_SYMBOL $3D5B clip_vlp_p2_bottom
COMMENT $3D5E use the just generated vlist as source
FORCE_SYMBOL $3D5E clipped_vector_vertical
COMMENT_LINE $3D61 ---- bottom clip end
COMMENT_LINE $3D61 exits with X pointing to current vlist
COMMENT_LINE $3D61 noBottomClipNeccessary:
COMMENT_LINE $3D61 here test for left/right clip!
COMMENT_LINE $3D61 first test left
FORCE_SYMBOL $3D61 displayPosX
COMMENT $3D64 test if there is a left clip tile possible!
FORCE_SYMBOL $3D64 START_POS_HORIZONTAL
FORCE_SYMBOL $3D68 xFine
COMMENT_LINE $3D6D this is a corner piece, also clip left!
COMMENT_LINE $3D6D D = clipping place (in scale of added strengths of vector X positions)
COMMENT_LINE $3D6D X = Vector list
FORCE_SYMBOL $3D6D leftclip
COMMENT $3D70 address of result list
FORCE_SYMBOL $3D70 clipped_vector_final
COMMENT $3D73 is this an easy clip vector?
COMMENT $3D75 no -> full clip
COMMENT_LINE $3D77 macro call ->                     SIMPLE_CLIP_LEFT
FORCE_SYMBOL $3D77 clip_vlp_nsleft
COMMENT_LINE $3D7C macro call ->                     EXACT_CLIP_LEFT
FORCE_SYMBOL $3D7C clip_vlp_pExact_left
COMMENT $3D7F address of result list
FORCE_SYMBOL $3D7F clipped_vector_final
COMMENT_LINE $3D84 ### multi tile up to three insert
COMMENT_LINE $3D84 ;;
FORCE_SYMBOL $3D84 xFine
FORCE_SYMBOL $3D89 rightclip
FORCE_SYMBOL $3D91 rightclip
COMMENT $3D94 TILE_WIDTH
FORCE_NO_SYMBOL $3D94
FORCE_SYMBOL $3D99 xFine
FORCE_SYMBOL $3D9E rightclip
FORCE_SYMBOL $3DA6 rightclip
FORCE_NO_SYMBOL $3DA9
COMMENT_LINE $3DAE now test for right
FORCE_NO_SYMBOL $3DAE
FORCE_SYMBOL $3DB2 END_POS_HORIZONTAL
COMMENT $3DB4 check if X boundary
FORCE_SYMBOL $3DB6 TILE_WIDTH
FORCE_SYMBOL $3DB8 END_POS_HORIZONTAL
COMMENT $3DBA check if X boundary
FORCE_SYMBOL $3DBF TILE_WIDTH
FORCE_SYMBOL $3DC1 END_POS_HORIZONTAL
COMMENT $3DC3 check if X boundary
COMMENT_LINE $3DC7 max width of multi tile is 2, so only two tests
COMMENT_LINE $3DC7 ;;
COMMENT_LINE $3DC7 ###
COMMENT_LINE $3DC7 now test for right
FORCE_SYMBOL $3DC7 END_POS_HORIZONTAL
COMMENT $3DC9 check if X boundary
COMMENT_LINE $3DCB macro call ->                     DRAW_IT
COMMENT_LINE $3DCB macro call ->                     _SCALE   SCALE_VLIST
COMMENT $3DCB scale for placing first point
FORCE_SYMBOL $3DCB SCALE_VLIST
COMMENT_LINE $3DCD macro call ->                     _SCALE_A
COMMENT $3DCD move to time 1 lo, this means scaling
FORCE_SYMBOL $3DCD VIA_t1_cnt_lo
FORCE_NO_SYMBOL $3DCF
COMMENT_LINE $3DD1 macro call ->                     MY_MOVE_TO_B_END
FORCE_NO_SYMBOL $3DD1
FORCE_SYMBOL $3DD3 VIA_int_flags
FORCE_SYMBOL $3DD7 myDraw_VL_mode2
COMMENT $3DDA otherwise increase y with length of one "x" entry
FORCE_SYMBOL $3DDA X_ENTRY_LENGTH
COMMENT $3DDC and keep on looking for a tile
FORCE_SYMBOL $3DDC keepLookingBottom
FORCE_SYMBOL $3DDF xFine
COMMENT $3DE4 make sure ramping is disabled
FORCE_NO_SYMBOL $3DE4
COMMENT $3DE7 disable ramping
FORCE_SYMBOL $3DE7 VIA_t1_cnt_lo
COMMENT_LINE $3DE9 macro call ->                     _ZERO_VECTOR_BEAM                     ; and we go to zero
FORCE_NO_SYMBOL $3DE9
COMMENT $3DEB /BLANK low and /ZERO low
FORCE_SYMBOL $3DEB VIA_cntl
COMMENT $3DED incTilePos_bottom, which on the bottom line also means display is finished
FORCE_SYMBOL $3DED displaylevelDone
COMMENT_LINE $3DF0 this is a corner piece, also clip right!
COMMENT_LINE $3DF0 D = clipping place (in scale of added strengths of vector X positions)
COMMENT_LINE $3DF0 X = Vector list
FORCE_SYMBOL $3DF0 rightclip
COMMENT $3DF3 address of result list
FORCE_SYMBOL $3DF3 clipped_vector_final
COMMENT $3DF6 is this an easy clip vector?
COMMENT $3DF8 no -> full clip
COMMENT_LINE $3DFA macro call ->                     SIMPLE_CLIP_RIGHT
FORCE_SYMBOL $3DFA clip_vlp_nsright
COMMENT_LINE $3DFF macro call ->                     EXACT_CLIP_RIGHT
FORCE_SYMBOL $3DFF clip_vlp_pExact_right
COMMENT $3E02 address of result list
FORCE_SYMBOL $3E02 clipped_vector_final
FORCE_SYMBOL $3E05 displayPosY
FORCE_SYMBOL $3E08 xFine
COMMENT_LINE $3E0B macro call ->                     DRAW_IT
COMMENT_LINE $3E0B macro call ->                     _SCALE   SCALE_VLIST
COMMENT $3E0B scale for placing first point
FORCE_SYMBOL $3E0B SCALE_VLIST
COMMENT_LINE $3E0D macro call ->                     _SCALE_A
COMMENT $3E0D move to time 1 lo, this means scaling
FORCE_SYMBOL $3E0D VIA_t1_cnt_lo
FORCE_NO_SYMBOL $3E0F
COMMENT_LINE $3E11 macro call ->                     MY_MOVE_TO_B_END
FORCE_NO_SYMBOL $3E11
FORCE_SYMBOL $3E13 VIA_int_flags
FORCE_SYMBOL $3E17 myDraw_VL_mode2
COMMENT_LINE $3E1A and jump to exit, bottom right -> == finish
COMMENT $3E1A incTilePos_bottom, which on the bottom line also means display is finished
FORCE_SYMBOL $3E1A displaylevelDone
COMMENT_LINE $3E1D the general idea to draw the world with clipped tiles goes:
COMMENT_LINE $3E1D drawing 3 parts
COMMENT_LINE $3E1D top clipped
COMMENT_LINE $3E1D middle part
COMMENT_LINE $3E1D bottom clipped
COMMENT_LINE $3E1D top/bottom
COMMENT_LINE $3E1D in these lines 2 tiles (corner pieces) may be clipped two times
COMMENT_LINE $3E1D clipping
COMMENT_LINE $3E1D for each clipping direction top/bottom/left/right
COMMENT_LINE $3E1D four different optimized routines exist:
COMMENT_LINE $3E1D a) exact clip - all vectors can be clipped regardless of any size/position (only used atm for the second corner clips)
COMMENT_LINE $3E1D this is by far the slowest
COMMENT_LINE $3E1D b) exponent clip - here each vector of a list must be one of 2,4,8,16,32,64,128 sizes (127=128)
COMMENT_LINE $3E1D if these criteria is met, division within the clip routines is done via "easy" asr...
COMMENT_LINE $3E1D c) simple clipping - here each x,y pair of coordinates in a vectorlist must have one of its values zero
COMMENT_LINE $3E1D if this is the case clipping can be done WITHOUT any divide - this is the fastest
COMMENT_LINE $3E1D for easy "visiblily" - all rectangles are "simple"!
COMMENT_LINE $3E1D clipping - when needed is executed in the "move" section of the tile print
COMMENT_LINE $3E1D but usually takes longer than the actual move, so here is "loss"
COMMENT_LINE $3E1D for center tiles (tiles without top/bottom clipping) the moveTo section is used to "look ahead", and locate the next
COMMENT_LINE $3E1D possible tile
COMMENT_LINE $3E1D within each part left and right clips are done seperately
COMMENT_LINE $3E1D there is a right/left and vertical buffer
COMMENT_LINE $3E1D if the same kind of types come in a row - they only need to be clipped once!
COMMENT_LINE $3E1D the tilemap is "compiled" to be more "condensed"
COMMENT_LINE $3E1D only the actual tiles are kept in a level, along with its "x"-position
COMMENT_LINE $3E1D each level has a list of "horizontal" tile definitions
COMMENT_LINE $3E1D so the actual y coordinate within the tile map can easily be calculated (as word pointers)
COMMENT_LINE $3E1D within one line the tile is searched via "tile" coordinates, till the first displayable tile is found
COMMENT_LINE $3E1D than all tiles are displayed till line end - or the new tile is "out of display bounds" than the next line begins
COMMENT_LINE $3E1D within the routine, the next line address is always stored on the stack, so it can be easily found
COMMENT_LINE $3E1D while displaying tiles horizontally a tile can have a horizontal size,
COMMENT_LINE $3E1D so in horizontal directions tiles can be larger than one tile position, that way
COMMENT_LINE $3E1D one can save positionings and draw "larger" portions in one go, this
COMMENT_LINE $3E1D comes at the expanse of more clipping on the edges
COMMENT_LINE $3E1D big tiles (larger than one tile posiion) must have "left split children". Meaning if a tile is e.g. has a width of
COMMENT_LINE $3E1D 3 tiles, than there must be defined actually 3 tiles, one with a size of 3
COMMENT_LINE $3E1D one with a size of two and one with a size of one
COMMENT_LINE $3E1D each shorter tile is a left-clipped (one/two complete tiles clipped away) version of the larger tile
COMMENT_LINE $3E1D the tile map must be build this way
COMMENT_LINE $3E1D meaning, if the sign "3" denotes the tile with a width of three, and "2" denotes the two width tile,
COMMENT_LINE $3E1D and "1" the one width tile, the
COMMENT_LINE $3E1D original level definition must look look like "321".
COMMENT_LINE $3E1D the tile definition must be such, that the "3" tile is definted with a width of 3, "2" width of 2 and  "1" one.
COMMENT_LINE $3E1D if the tile is fully displayed, the 3 of the "3" is added to the horizontal coordinates, so the following two
COMMENT_LINE $3E1D tiles are not displayed at all.
COMMENT_LINE $3E1D when the level is scrolled that only the "21" is visible, the 3 automatically gets skipped, because it is "out of bounds"
COMMENT_LINE $3E1D so the "2" kicks in and so on...
COMMENT_LINE $3E1D include "displayWorldCompiledClippedLookAhead.asm"
COMMENT_LINE $3E1D include "displayWorldCompiledClipped.asm"
COMMENT_LINE $3E1D ***************************************************************************
COMMENT_LINE $3E1D DATA SECTION
COMMENT_LINE $3E1D ***************************************************************************
COMMENT_LINE $3E1D ***************************************************************************
COMMENT_LINE $3E31 include line ->                     include  "tileDef1.i"
COMMENT_LINE $3E31 all of these start at the lower left corner
COMMENT_LINE $3E31 "exponential" tiles have strengths of 2 exponentials
COMMENT_LINE $3E31 127 = 128
COMMENT_LINE $3E31 tile macro
COMMENT_LINE $3E31 dw address of tile in lo/hi
COMMENT_LINE $3E31 width of tile in "char"
COMMENT $3E31 animTileCount (ANIMATION)
COMMENT $3E32 ID, clip type
COMMENT $3E34 mode, y, x
COMMENT $3E37 mode, y, x
COMMENT $3E3A mode, y, x
COMMENT $3E3D mode, y, x
COMMENT $3E40 mode, y, x
COMMENT $3E43 mode, y, x
COMMENT $3E46 mode, y, x
COMMENT $3E49 mode, y, x
COMMENT $3E4C endmarker (1)
COMMENT_LINE $3E4D ---------------------------------------------------------------------------
COMMENT $3E4D animTileCount (ANIMATION)
COMMENT $3E4E ID, clip type
COMMENT $3E50 mode, y, x
COMMENT $3E53 mode, y, x
COMMENT $3E56 mode, y, x
COMMENT $3E59 mode, y, x
COMMENT $3E5C endmarker (1)
COMMENT_LINE $3E5D ---------------------------------------------------------------------------
COMMENT_LINE $3E5D ---------------------------------------------------------------------------
COMMENT $3E5D animTileCount (ANIMATION)
COMMENT $3E5E ID, type
COMMENT $3E60 mode, y, x
COMMENT $3E63 mode, y, x
COMMENT $3E66 mode, y, x
COMMENT $3E69 mode, y, x
COMMENT $3E6C mode, y, x
COMMENT $3E6F endmarker (1)
COMMENT_LINE $3E70 ---------------------------------------------------------------------------
COMMENT_LINE $3E70 ---------------------------------------------------------------------------
COMMENT $3E70 animTileCount (ANIMATION)
COMMENT $3E71 ID, type
COMMENT $3E73 mode, y, x
COMMENT $3E76 mode, y, x
COMMENT $3E79 mode, y, x
COMMENT $3E7C endmarker (1)
COMMENT_LINE $3E7D ---------------------------------------------------------------------------
COMMENT_LINE $3E7D ---------------------------------------------------------------------------
COMMENT_LINE $3E7D diagonals only allowed as 4,8,16,32,64
COMMENT $3E7D animTileCount (ANIMATION)
COMMENT $3E7E ID, type
COMMENT $3E80 pattern, y, x
COMMENT $3E83 pattern, y, x
COMMENT $3E86 pattern, y, x
COMMENT $3E89 pattern, y, x
COMMENT $3E8C pattern, y, x
COMMENT $3E8F endmarker (high bit in pattern not set)
COMMENT_LINE $3E90 ---------------------------------------------------------------------------
COMMENT_LINE $3E90 ---------------------------------------------------------------------------
COMMENT $3E90 animTileCount (ANIMATION)
COMMENT $3E91 ID, type
COMMENT $3E93 mode, y, x
COMMENT $3E96 mode, y, x
COMMENT $3E99 mode, y, x
COMMENT $3E9C mode, y, x
COMMENT $3E9F endmarker (1)
COMMENT_LINE $3EA0 ---------------------------------------------------------------------------
COMMENT_LINE $3EA0 ---------------------------------------------------------------------------
COMMENT $3EA0 animTileCount (ANIMATION)
COMMENT $3EA1 ID, type
COMMENT $3EA3 pattern, y, x
COMMENT $3EA6 pattern, y, x
COMMENT $3EA9 pattern, y, x
COMMENT $3EAC pattern, y, x
COMMENT $3EAF pattern, y, x
COMMENT $3EB2 endmarker (high bit in pattern not set)
COMMENT_LINE $3EB3 ---------------------------------------------------------------------------
COMMENT_LINE $3EB3 ---------------------------------------------------------------------------
COMMENT $3EB3 animTileCount (ANIMATION)
COMMENT $3EB4 ID, type
COMMENT $3EB6 pattern, y, x
COMMENT $3EB9 pattern, y, x
COMMENT $3EBC pattern, y, x
COMMENT $3EBF pattern, y, x
COMMENT $3EC2 pattern, y, x
COMMENT $3EC5 endmarker (high bit in pattern not set)
COMMENT_LINE $3EC6 ---------------------------------------------------------------------------
COMMENT_LINE $3EC6 ---------------------------------------------------------------------------
COMMENT $3EC6 animTileCount (ANIMATION)
COMMENT $3EC7 multiTileCount
COMMENT $3EC8 ID, type
COMMENT_LINE $3ECA same hight, double X
COMMENT $3ECA mode, y, x
COMMENT $3ECD mode, y, x
COMMENT $3ED0 mode, y, x
COMMENT $3ED3 endmarker (1)
COMMENT_LINE $3ED4 ---------------------------------------------------------------------------
COMMENT_LINE $3ED4 ---------------------------------------------------------------------------
COMMENT $3ED4 animTileCount (ANIMATION)
COMMENT $3ED5 ID, type
COMMENT $3ED7 pattern, y, x
COMMENT $3EDA pattern, y, x
COMMENT $3EDD pattern, y, x
COMMENT $3EE0 endmarker (high bit in pattern not set)
COMMENT_LINE $3EE1 ---------------------------------------------------------------------------
COMMENT_LINE $3EE1 ;;;;;;;;;;;;;
COMMENT $3EE1 animTileCount (ANIMATION), this is the number of the counter to be used, NOT the number of animation steps!
COMMENT $3EE2 ID, type - irrelevant for multi tiles
COMMENT_LINE $3EE4 DW AnimList_0 ; list of all single vectorlists in this
COMMENT_LINE $3EE4 DW AnimList_1
COMMENT_LINE $3EE4 DW AnimList_2
COMMENT_LINE $3EE4 DW AnimList_3
COMMENT $3EE4 list of all single vectorlists in this
COMMENT $3EF0 ID, type
COMMENT $3EF2 pattern, y, x
COMMENT $3EF5 pattern, y, x
COMMENT $3EF8 pattern, y, x
COMMENT $3EFB pattern, y, x
COMMENT $3EFE endmarker (high bit in pattern not set)
COMMENT $3EFF ID, type
COMMENT $3F01 pattern, y, x
COMMENT $3F04 pattern, y, x
COMMENT $3F07 pattern, y, x
COMMENT $3F0A pattern, y, x
COMMENT $3F0D pattern, y, x
COMMENT $3F10 pattern, y, x
COMMENT $3F13 endmarker (high bit in pattern not set)
COMMENT $3F14 ID, type
COMMENT $3F16 pattern, y, x
COMMENT $3F19 pattern, y, x
COMMENT $3F1C pattern, y, x
COMMENT $3F1F pattern, y, x
COMMENT $3F22 pattern, y, x
COMMENT $3F25 endmarker (high bit in pattern not set)
COMMENT $3F26 ID, type
COMMENT $3F28 pattern, y, x
COMMENT $3F2B pattern, y, x
COMMENT $3F2E pattern, y, x
COMMENT $3F31 pattern, y, x
COMMENT $3F34 pattern, y, x
COMMENT $3F37 pattern, y, x
COMMENT $3F3A endmarker (high bit in pattern not set)
COMMENT $3F3B list of all single vectorlists in this
COMMENT $3F47 ID, type
COMMENT $3F49 pattern, y, x
COMMENT $3F4C pattern, y, x
COMMENT $3F4F pattern, y, x
COMMENT $3F52 pattern, y, x
COMMENT $3F55 pattern, y, x
COMMENT $3F58 pattern, y, x
COMMENT $3F5B pattern, y, x
COMMENT $3F5E pattern, y, x
COMMENT $3F61 pattern, y, x
COMMENT $3F64 pattern, y, x
COMMENT $3F67 pattern, y, x
COMMENT $3F6A pattern, y, x
COMMENT $3F6D pattern, y, x
COMMENT $3F70 endmarker (high bit in pattern not set)
COMMENT $3F71 ID, type
COMMENT $3F73 pattern, y, x
COMMENT $3F76 pattern, y, x
COMMENT $3F79 pattern, y, x
COMMENT $3F7C pattern, y, x
COMMENT $3F7F pattern, y, x
COMMENT $3F82 pattern, y, x
COMMENT $3F85 pattern, y, x
COMMENT $3F88 pattern, y, x
COMMENT $3F8B pattern, y, x
COMMENT $3F8E pattern, y, x
COMMENT $3F91 pattern, y, x
COMMENT $3F94 pattern, y, x
COMMENT $3F97 pattern, y, x
COMMENT $3F9A endmarker (high bit in pattern not set)
COMMENT $3F9B ID, type
COMMENT $3F9D pattern, y, x
COMMENT $3FA0 pattern, y, x
COMMENT $3FA3 pattern, y, x
COMMENT $3FA6 pattern, y, x
COMMENT $3FA9 pattern, y, x
COMMENT $3FAC pattern, y, x
COMMENT $3FAF pattern, y, x
COMMENT $3FB2 pattern, y, x
COMMENT $3FB5 pattern, y, x
COMMENT $3FB8 pattern, y, x
COMMENT $3FBB pattern, y, x
COMMENT $3FBE pattern, y, x
COMMENT $3FC1 pattern, y, x
COMMENT $3FC4 endmarker (high bit in pattern not set)
COMMENT $3FC5 ID, type
COMMENT $3FC7 pattern, y, x
COMMENT $3FCA pattern, y, x
COMMENT $3FCD pattern, y, x
COMMENT $3FD0 pattern, y, x
COMMENT $3FD3 pattern, y, x
COMMENT $3FD6 endmarker (high bit in pattern not set)
COMMENT_LINE $3FD7 ;;;;;;;;;;;;;
COMMENT_LINE $3FD7 BLOW_UP EQU 1
COMMENT $3FD7 list of all single vectorlists in this
COMMENT $3FDF 1
COMMENT $3FE1 2
COMMENT $3FE3 3
COMMENT $3FE5 4
COMMENT $3FE7 5
COMMENT $3FE9 6
COMMENT $3FEB 7
COMMENT_LINE $3FED dw openLRBlockList_double ;8
COMMENT $3FED 8
COMMENT $3FEF 9
COMMENT $3FF1 ":"
COMMENT $3FF3 ";"
COMMENT $3FF5 "<"
COMMENT $3FF7 "="
COMMENT $3FF9 ">"
COMMENT $3FFB "?"
COMMENT $3FFD "@"
COMMENT $3FFF A
COMMENT_LINE $4001 **********************************************************
COMMENT $4001 size y,x in ascii
COMMENT $4003 start pos (middle)
COMMENT_LINE $4005 include line ->                     include  "level1.i.asm"
COMMENT $4005 next line start
COMMENT_LINE $4008 macro call ->  TILE_A (31)
COMMENT $400C end of line
COMMENT $400D next line start
COMMENT_LINE $4010 macro call ->  TILE_A (10)
COMMENT_LINE $4015 macro call ->  TILE_A (54)
COMMENT $4019 end of line
COMMENT $401A next line start
COMMENT $401C end of line
COMMENT $401D next line start
COMMENT_LINE $4020 macro call ->  TILE_5 (2)
COMMENT_LINE $4025 macro call ->  TILE_5 (3)
COMMENT_LINE $402A macro call ->  TILE_5 (7)
COMMENT_LINE $402F macro call ->  TILE_5 (8)
COMMENT_LINE $4034 macro call ->  TILE_5 (11)
COMMENT_LINE $4039 macro call ->  TILE_5 (12)
COMMENT_LINE $403E macro call ->  TILE_5 (13)
COMMENT_LINE $4043 macro call ->  TILE_5 (14)
COMMENT_LINE $4048 macro call ->  TILE_5 (17)
COMMENT_LINE $404D macro call ->  TILE_5 (18)
COMMENT_LINE $4052 macro call ->  TILE_5 (19)
COMMENT_LINE $4057 macro call ->  TILE_5 (23)
COMMENT_LINE $405C macro call ->  TILE_5 (24)
COMMENT_LINE $4061 macro call ->  TILE_5 (25)
COMMENT_LINE $4066 macro call ->  TILE_5 (29)
COMMENT_LINE $406B macro call ->  TILE_5 (33)
COMMENT_LINE $4070 macro call ->  TILE_A (56)
COMMENT $4074 end of line
COMMENT $4075 next line start
COMMENT_LINE $4078 macro call ->  TILE_5 (2)
COMMENT_LINE $407D macro call ->  TILE_5 (4)
COMMENT_LINE $4082 macro call ->  TILE_5 (6)
COMMENT_LINE $4087 macro call ->  TILE_5 (8)
COMMENT_LINE $408C macro call ->  TILE_5 (11)
COMMENT_LINE $4091 macro call ->  TILE_5 (17)
COMMENT_LINE $4096 macro call ->  TILE_5 (20)
COMMENT_LINE $409B macro call ->  TILE_5 (23)
COMMENT_LINE $40A0 macro call ->  TILE_5 (26)
COMMENT_LINE $40A5 macro call ->  TILE_5 (30)
COMMENT_LINE $40AA macro call ->  TILE_5 (32)
COMMENT_LINE $40AF macro call ->  TILE_A (72)
COMMENT $40B3 end of line
COMMENT $40B4 next line start
COMMENT_LINE $40B7 macro call ->  TILE_5 (2)
COMMENT_LINE $40BC macro call ->  TILE_A (5)
COMMENT_LINE $40C1 macro call ->  TILE_5 (8)
COMMENT_LINE $40C6 macro call ->  TILE_5 (11)
COMMENT_LINE $40CB macro call ->  TILE_5 (12)
COMMENT_LINE $40D0 macro call ->  TILE_A (13)
COMMENT_LINE $40D5 macro call ->  TILE_5 (17)
COMMENT_LINE $40DA macro call ->  TILE_A (18)
COMMENT_LINE $40DF macro call ->  TILE_5 (19)
COMMENT_LINE $40E4 macro call ->  TILE_5 (23)
COMMENT_LINE $40E9 macro call ->  TILE_A (24)
COMMENT_LINE $40EE macro call ->  TILE_5 (25)
COMMENT_LINE $40F3 macro call ->  TILE_A (31)
COMMENT $40F7 end of line
COMMENT $40F8 next line start
COMMENT_LINE $40FB macro call ->  TILE_5 (2)
COMMENT_LINE $4100 macro call ->  TILE_5 (8)
COMMENT_LINE $4105 macro call ->  TILE_5 (11)
COMMENT_LINE $410A macro call ->  TILE_5 (17)
COMMENT_LINE $410F macro call ->  TILE_5 (19)
COMMENT_LINE $4114 macro call ->  TILE_5 (23)
COMMENT_LINE $4119 macro call ->  TILE_5 (25)
COMMENT_LINE $411E macro call ->  TILE_5 (32)
COMMENT $4122 end of line
COMMENT $4123 next line start
COMMENT_LINE $4126 macro call ->  TILE_5 (2)
COMMENT_LINE $412B macro call ->  TILE_5 (8)
COMMENT_LINE $4130 macro call ->  TILE_5 (11)
COMMENT_LINE $4135 macro call ->  TILE_5 (12)
COMMENT_LINE $413A macro call ->  TILE_5 (13)
COMMENT_LINE $413F macro call ->  TILE_5 (14)
COMMENT_LINE $4144 macro call ->  TILE_5 (17)
COMMENT_LINE $4149 macro call ->  TILE_5 (20)
COMMENT_LINE $414E macro call ->  TILE_5 (23)
COMMENT_LINE $4153 macro call ->  TILE_5 (26)
COMMENT_LINE $4158 macro call ->  TILE_5 (33)
COMMENT_LINE $415D macro call ->  TILE_A (54)
COMMENT $4161 end of line
COMMENT $4162 next line start
COMMENT $4164 end of line
COMMENT $4165 next line start
COMMENT $4167 end of line
COMMENT $4168 next line start
COMMENT $416A end of line
COMMENT $416B next line start
COMMENT $416D end of line
COMMENT $416E next line start
COMMENT $4170 end of line
COMMENT $4171 next line start
COMMENT $4173 end of line
COMMENT $4174 next line start
COMMENT_LINE $4177 macro call ->  TILE_A (9)
COMMENT $417B end of line
COMMENT $417C next line start
COMMENT_LINE $417F macro call ->  TILE_A (8)
COMMENT_LINE $4184 macro call ->  TILE_A (11)
COMMENT_LINE $4189 macro call ->  TILE_A (23)
COMMENT_LINE $418E macro call ->  TILE_A (43)
COMMENT_LINE $4193 macro call ->  TILE_A (58)
COMMENT $4197 end of line
COMMENT $4198 next line start
COMMENT_LINE $419B macro call ->  TILE_A (7)
COMMENT_LINE $41A0 macro call ->  TILE_A (10)
COMMENT $41A4 end of line
COMMENT $41A5 next line start
COMMENT_LINE $41A8 macro call ->  TILE_A (3)
COMMENT_LINE $41AD macro call ->  TILE_A (6)
COMMENT_LINE $41B2 macro call ->  TILE_A (7)
COMMENT_LINE $41B7 macro call ->  TILE_A (8)
COMMENT_LINE $41BC macro call ->  TILE_A (9)
COMMENT_LINE $41C1 macro call ->  TILE_A (14)
COMMENT $41C5 end of line
COMMENT $41C6 next line start
COMMENT_LINE $41C9 macro call ->  TILE_A (2)
COMMENT_LINE $41CE macro call ->  TILE_A (3)
COMMENT_LINE $41D3 macro call ->  TILE_A (4)
COMMENT_LINE $41D8 macro call ->  TILE_A (5)
COMMENT_LINE $41DD macro call ->  TILE_A (6)
COMMENT_LINE $41E2 macro call ->  TILE_A (7)
COMMENT_LINE $41E7 macro call ->  TILE_A (8)
COMMENT_LINE $41EC macro call ->  TILE_A (9)
COMMENT_LINE $41F1 macro call ->  TILE_A (10)
COMMENT_LINE $41F6 macro call ->  TILE_A (11)
COMMENT_LINE $41FB macro call ->  TILE_A (12)
COMMENT $41FF end of line
COMMENT $4200 next line start
COMMENT_LINE $4203 macro call ->  TILE_A (2)
COMMENT_LINE $4208 macro call ->  TILE_A (3)
COMMENT_LINE $420D macro call ->  TILE_A (4)
COMMENT_LINE $4212 macro call ->  TILE_A (5)
COMMENT $4216 end of line
COMMENT $4217 next line start
COMMENT_LINE $421A macro call ->  TILE_A (3)
COMMENT_LINE $421F macro call ->  TILE_5 (17)
COMMENT_LINE $4224 macro call ->  TILE_5 (21)
COMMENT_LINE $4229 macro call ->  TILE_5 (25)
COMMENT_LINE $422E macro call ->  TILE_5 (26)
COMMENT_LINE $4233 macro call ->  TILE_5 (27)
COMMENT_LINE $4238 macro call ->  TILE_5 (28)
COMMENT_LINE $423D macro call ->  TILE_5 (31)
COMMENT_LINE $4242 macro call ->  TILE_5 (32)
COMMENT_LINE $4247 macro call ->  TILE_5 (36)
COMMENT_LINE $424C macro call ->  TILE_5 (37)
COMMENT_LINE $4251 macro call ->  TILE_5 (42)
COMMENT_LINE $4256 macro call ->  TILE_5 (43)
COMMENT_LINE $425B macro call ->  TILE_5 (49)
COMMENT_LINE $4260 macro call ->  TILE_5 (50)
COMMENT_LINE $4265 macro call ->  TILE_5 (51)
COMMENT $4269 end of line
COMMENT $426A next line start
COMMENT_LINE $426D macro call ->  TILE_5 (18)
COMMENT_LINE $4272 macro call ->  TILE_5 (20)
COMMENT_LINE $4277 macro call ->  TILE_5 (24)
COMMENT_LINE $427C macro call ->  TILE_5 (31)
COMMENT_LINE $4281 macro call ->  TILE_5 (33)
COMMENT_LINE $4286 macro call ->  TILE_5 (35)
COMMENT_LINE $428B macro call ->  TILE_5 (37)
COMMENT_LINE $4290 macro call ->  TILE_5 (41)
COMMENT_LINE $4295 macro call ->  TILE_5 (44)
COMMENT_LINE $429A macro call ->  TILE_5 (48)
COMMENT $429E end of line
COMMENT $429F next line start
COMMENT_LINE $42A2 macro call ->  TILE_A (19)
COMMENT_LINE $42A7 macro call ->  TILE_5 (25)
COMMENT_LINE $42AC macro call ->  TILE_A (26)
COMMENT_LINE $42B1 macro call ->  TILE_5 (27)
COMMENT_LINE $42B6 macro call ->  TILE_5 (31)
COMMENT_LINE $42BB macro call ->  TILE_A (34)
COMMENT_LINE $42C0 macro call ->  TILE_5 (37)
COMMENT_LINE $42C5 macro call ->  TILE_5 (40)
COMMENT_LINE $42CA macro call ->  TILE_5 (45)
COMMENT_LINE $42CF macro call ->  TILE_5 (49)
COMMENT_LINE $42D4 macro call ->  TILE_A (50)
COMMENT_LINE $42D9 macro call ->  TILE_5 (51)
COMMENT_LINE $42DE macro call ->  TILE_A (72)
COMMENT $42E2 end of line
COMMENT $42E3 next line start
COMMENT_LINE $42E6 macro call ->  TILE_5 (18)
COMMENT_LINE $42EB macro call ->  TILE_5 (20)
COMMENT_LINE $42F0 macro call ->  TILE_5 (28)
COMMENT_LINE $42F5 macro call ->  TILE_5 (31)
COMMENT_LINE $42FA macro call ->  TILE_5 (37)
COMMENT_LINE $42FF macro call ->  TILE_5 (40)
COMMENT_LINE $4304 macro call ->  TILE_5 (41)
COMMENT_LINE $4309 macro call ->  TILE_A (42)
COMMENT_LINE $430E macro call ->  TILE_A (43)
COMMENT_LINE $4313 macro call ->  TILE_5 (44)
COMMENT_LINE $4318 macro call ->  TILE_5 (45)
COMMENT_LINE $431D macro call ->  TILE_5 (52)
COMMENT $4321 end of line
COMMENT $4322 next line start
COMMENT_LINE $4325 macro call ->  TILE_5 (17)
COMMENT_LINE $432A macro call ->  TILE_5 (21)
COMMENT_LINE $432F macro call ->  TILE_5 (24)
COMMENT_LINE $4334 macro call ->  TILE_5 (25)
COMMENT_LINE $4339 macro call ->  TILE_5 (26)
COMMENT_LINE $433E macro call ->  TILE_5 (27)
COMMENT_LINE $4343 macro call ->  TILE_5 (31)
COMMENT_LINE $4348 macro call ->  TILE_5 (37)
COMMENT_LINE $434D macro call ->  TILE_5 (40)
COMMENT_LINE $4352 macro call ->  TILE_5 (45)
COMMENT_LINE $4357 macro call ->  TILE_5 (49)
COMMENT_LINE $435C macro call ->  TILE_5 (50)
COMMENT_LINE $4361 macro call ->  TILE_5 (51)
COMMENT $4365 end of line
COMMENT $4366 next line start
COMMENT_LINE $4369 macro call ->  TILE_A (69)
COMMENT $436D end of line
COMMENT $436E next line start
COMMENT $4370 end of line
COMMENT $4371 next line start
COMMENT $4373 end of line
COMMENT $4374 next line start
COMMENT_LINE $4377 macro call ->  TILE_A (68)
COMMENT $437B end of line
COMMENT $437C next line start
COMMENT $437E end of line
COMMENT $437F next line start
COMMENT $4381 end of line
COMMENT $4382 next line start
COMMENT $4384 end of line
COMMENT $4385 next line start
COMMENT $4387 end of line
COMMENT $4388 next line start
COMMENT $438A end of line
COMMENT $438B next line start
COMMENT $438D end of line
COMMENT $438E next line start
COMMENT $4390 end of line
COMMENT $4391 next line start
COMMENT $4393 end of line
COMMENT $43DE end of line
COMMENT_LINE $43E0 **********************************************************
COMMENT_LINE $43E0 include line ->                     INCLUDE  "drawRoutines.i"
COMMENT_LINE $43E0 **********************************************************
COMMENT_LINE $43E0 input list in X - scale 6
COMMENT_LINE $43E0 0 move
COMMENT_LINE $43E0 negative draw
COMMENT_LINE $43E0 positive end
FORCE_NO_SYMBOL $43E0
COMMENT $43E2 Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $43E2 VIA_aux_cntl
COMMENT_LINE $43EA VIA values back to default
COMMENT $43EA [6] check
FORCE_NO_SYMBOL $43EA
COMMENT $43ED [4] Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $43ED VIA_aux_cntl
COMMENT $43EF [4] $CC /BLANK low and /ZERO low
FORCE_SYMBOL $43EF VIA_cntl
COMMENT $43F6 [2]
FORCE_NO_SYMBOL $43F6
COMMENT $43F8 [4] ; light OFF, ZERO OFF
FORCE_SYMBOL $43F8 VIA_cntl
COMMENT $43FC (2) [4] Send Y to A/D
FORCE_SYMBOL $43FC VIA_port_a
COMMENT $43FE (2) [4] enable mux, thus y integrators are set to Y
FORCE_SYMBOL $43FE VIA_port_b
COMMENT $4400 [6] Disable mux
FORCE_SYMBOL $4400 VIA_port_b
COMMENT $4402 [6] Send X to A/D
FORCE_SYMBOL $4402 VIA_port_a
COMMENT $4404 light ON, ZERO OFF
FORCE_NO_SYMBOL $4404
COMMENT $4406 [4] enable timer 1 (6 cycles)
FORCE_SYMBOL $4406 VIA_t1_cnt_hi
COMMENT_LINE $4408 light on
COMMENT $4408 [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $4408 VIA_cntl
COMMENT_LINE $440A 24 cycles -> light off
COMMENT $440A [7]
COMMENT $440C [3]
COMMENT $440E [3]
COMMENT $4410 [3]
COMMENT $4412 one branch not taken less
COMMENT $4415 [2]
FORCE_NO_SYMBOL $4415
COMMENT $4417 [4] ; light OFF, ZERO OFF
FORCE_SYMBOL $4417 VIA_cntl
COMMENT $441B (2) [4] Send Y to A/D
FORCE_SYMBOL $441B VIA_port_a
COMMENT $441D (2) [4] enable mux, thus y integrators are set to Y
FORCE_SYMBOL $441D VIA_port_b
COMMENT $441F [6] Disable mux
FORCE_SYMBOL $441F VIA_port_b
COMMENT $4421 [6] Send X to A/D
FORCE_SYMBOL $4421 VIA_port_a
COMMENT $4423 [4] enable timer 1 (6 cycles)
FORCE_SYMBOL $4423 VIA_t1_cnt_hi
COMMENT_LINE $4425 light on
COMMENT_LINE $4425 stb <VIA_cntl ; [4] ZERO disabled, and BLANK disabled
COMMENT_LINE $4425 24 cycles -> light off
COMMENT $4425 [7]
COMMENT $4427 [3]
COMMENT $4429 [3]
COMMENT $442B [3]
COMMENT_LINE $442D **********************************************************
COMMENT_LINE $442D draw bigger vlists than above one - scale 16
COMMENT_LINE $442D input list in X
COMMENT_LINE $442D destroys u
COMMENT_LINE $442D 0 move
COMMENT_LINE $442D negative use as shift
COMMENT_LINE $442D positive end
FORCE_NO_SYMBOL $442D
COMMENT $442F Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $442F VIA_aux_cntl
COMMENT_LINE $4437 VIA values back to default
COMMENT_LINE $4437 LDD      #$98ce                       ;[6] check
COMMENT $4437 [6] check
FORCE_NO_SYMBOL $4437
COMMENT $443E [4] Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $443E VIA_aux_cntl
COMMENT $4440 [4] $CC /BLANK low and /ZERO low
FORCE_SYMBOL $4440 VIA_cntl
FORCE_NO_SYMBOL $4445
COMMENT $4448 (2) [4] Send Y to A/D
FORCE_SYMBOL $4448 VIA_port_a
FORCE_SYMBOL $444A VIA_cntl
COMMENT $444C (2) [4] enable mux, thus y integrators are set to Y
FORCE_SYMBOL $444C VIA_port_b
COMMENT $444E [6] Disable mux
FORCE_SYMBOL $444E VIA_port_b
COMMENT $4450 [6] Send X to A/D
FORCE_SYMBOL $4450 VIA_port_a
COMMENT $4452 light ON, ZERO OFF
FORCE_NO_SYMBOL $4452
COMMENT $4454 [4] enable timer 1 (6 cycles)
FORCE_SYMBOL $4454 VIA_t1_cnt_hi
COMMENT_LINE $4456 light on
COMMENT $4456 [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $4456 VIA_cntl
COMMENT_LINE $4458 24 cycles -> light off
COMMENT $4458 [7]
COMMENT $445A [3]
COMMENT $445C [3]
COMMENT $445E [3]
FORCE_NO_SYMBOL $4462
COMMENT $4465 (2) [4] Send Y to A/D
FORCE_SYMBOL $4465 VIA_port_a
FORCE_SYMBOL $4467 VIA_cntl
COMMENT $4469 (2) [4] enable mux, thus y integrators are set to Y
FORCE_SYMBOL $4469 VIA_port_b
COMMENT $446B [6] Disable mux
FORCE_SYMBOL $446B VIA_port_b
COMMENT $446D [6] Send X to A/D
FORCE_SYMBOL $446D VIA_port_a
COMMENT $446F [4] enable timer 1 (6 cycles)
FORCE_SYMBOL $446F VIA_t1_cnt_hi
COMMENT_LINE $4471 light on
COMMENT_LINE $4471 stb <VIA_cntl ; [4] ZERO disabled, and BLANK disabled
COMMENT_LINE $4471 24 cycles -> light off
COMMENT $4471 [7]
COMMENT $4473 [3]
COMMENT $4475 [3]
COMMENT $4477 [3]
COMMENT_LINE $4479 draw bigger vlists than above one - scale 24
COMMENT_LINE $4479 input list in X
COMMENT_LINE $4479 destroys u
COMMENT_LINE $4479 0 move
COMMENT_LINE $4479 negative use as shift
COMMENT_LINE $4479 positive end
FORCE_NO_SYMBOL $4479
COMMENT $447B Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $447B VIA_aux_cntl
COMMENT_LINE $4483 VIA values back to default
COMMENT $448B [6] check
FORCE_NO_SYMBOL $448B
COMMENT $448E [4] Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $448E VIA_aux_cntl
COMMENT_LINE $4490 nop 2
COMMENT $4490 [4] $CC /BLANK low and /ZERO low
FORCE_SYMBOL $4490 VIA_cntl
COMMENT $4495 $ce is light off
FORCE_NO_SYMBOL $4495
COMMENT $4498 (2) [4] Send Y to A/D
FORCE_SYMBOL $4498 VIA_port_a
FORCE_SYMBOL $449E VIA_cntl
COMMENT $44A0 (2) [4] enable mux, thus y integrators are set to Y
FORCE_SYMBOL $44A0 VIA_port_b
COMMENT $44A2 [6] Disable mux
FORCE_SYMBOL $44A2 VIA_port_b
COMMENT $44A4 [6] Send X to A/D
FORCE_SYMBOL $44A4 VIA_port_a
COMMENT $44A6 light ON, ZERO OFF
FORCE_NO_SYMBOL $44A6
COMMENT $44A8 [4] enable timer 1 (6 cycles)
FORCE_SYMBOL $44A8 VIA_t1_cnt_hi
COMMENT_LINE $44AA light on
COMMENT $44AA [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $44AA VIA_cntl
COMMENT_LINE $44AC 24 cycles -> light off
COMMENT $44AC [7]
COMMENT $44AE [3]
COMMENT $44B0 [3]
COMMENT $44B2 [3]
FORCE_NO_SYMBOL $44B6
COMMENT $44B9 (2) [4] Send Y to A/D
FORCE_SYMBOL $44B9 VIA_port_a
COMMENT_LINE $44BB nop 4
FORCE_SYMBOL $44BF VIA_cntl
COMMENT $44C1 (2) [4] enable mux, thus y integrators are set to Y
FORCE_SYMBOL $44C1 VIA_port_b
COMMENT $44C3 [6] Disable mux
FORCE_SYMBOL $44C3 VIA_port_b
COMMENT $44C5 [6] Send X to A/D
FORCE_SYMBOL $44C5 VIA_port_a
COMMENT_LINE $44C7 nop 4
COMMENT $44C7 [4] enable timer 1 (6 cycles)
FORCE_SYMBOL $44C7 VIA_t1_cnt_hi
COMMENT_LINE $44C9 light on
COMMENT_LINE $44CD stb <VIA_cntl ; [4] ZERO disabled, and BLANK disabled
COMMENT_LINE $44CD 24 cycles -> light off
COMMENT $44CD [7]
COMMENT $44CF [3]
COMMENT $44D1 [3]
COMMENT $44D3 [3]
COMMENT_LINE $44D5 **********************************************************
COMMENT_LINE $44D5 draw bigger vlists than above one - scale 40
COMMENT_LINE $44D5 input list in X
COMMENT_LINE $44D5 destroys u
COMMENT_LINE $44D5 0 move
COMMENT_LINE $44D5 negative use as shift
COMMENT_LINE $44D5 positive end
FORCE_NO_SYMBOL $44D5
COMMENT $44D7 Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $44D7 VIA_aux_cntl
COMMENT_LINE $44D9 next_line4
COMMENT_LINE $44DF VIA values back to default
COMMENT $44E5 [6] check
FORCE_NO_SYMBOL $44E5
COMMENT $44E8 [4] Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $44E8 VIA_aux_cntl
COMMENT $44EC [4] $CC /BLANK low and /ZERO low
FORCE_SYMBOL $44EC VIA_cntl
FORCE_NO_SYMBOL $44F1
COMMENT $44F4 (2) [4] Send Y to A/D
FORCE_SYMBOL $44F4 VIA_port_a
FORCE_SYMBOL $44FA VIA_cntl
COMMENT $44FC (2) [4] enable mux, thus y integrators are set to Y
FORCE_SYMBOL $44FC VIA_port_b
COMMENT $44FE [6] Disable mux
FORCE_SYMBOL $44FE VIA_port_b
COMMENT $4500 [6] Send X to A/D
FORCE_SYMBOL $4500 VIA_port_a
COMMENT $4502 light ON, ZERO OFF
FORCE_NO_SYMBOL $4502
COMMENT $4504 [4] enable timer 1 (6 cycles)
FORCE_SYMBOL $4504 VIA_t1_cnt_hi
COMMENT_LINE $4506 light on
COMMENT $4506 [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $4506 VIA_cntl
COMMENT_LINE $4508 24 cycles -> light off
COMMENT $4508 [7]
COMMENT $450A NEW
COMMENT $4512 [3]
COMMENT $4514 [3]
COMMENT $4516 [3]
FORCE_NO_SYMBOL $451A
COMMENT $451D (2) [4] Send Y to A/D
FORCE_SYMBOL $451D VIA_port_a
FORCE_SYMBOL $4523 VIA_cntl
COMMENT $4525 (2) [4] enable mux, thus y integrators are set to Y
FORCE_SYMBOL $4525 VIA_port_b
COMMENT $4527 [6] Disable mux
FORCE_SYMBOL $4527 VIA_port_b
COMMENT $4529 [6] Send X to A/D
FORCE_SYMBOL $4529 VIA_port_a
COMMENT_LINE $452B nop 4
COMMENT $452B [4] enable timer 1 (6 cycles)
FORCE_SYMBOL $452B VIA_t1_cnt_hi
COMMENT_LINE $452D light on
COMMENT_LINE $4531 stb <VIA_cntl ; [4] ZERO disabled, and BLANK disabled
COMMENT_LINE $4531 24 cycles -> light off
COMMENT $4531 [7]
COMMENT $4533 NEW
COMMENT $453B [3]
COMMENT $453D [3]
COMMENT $453F [3]
COMMENT_LINE $4541 **********************************************************
COMMENT_LINE $4541 draw bigger vlists than above one - scale 40
COMMENT_LINE $4541 input list in X
COMMENT_LINE $4541 destroys u
COMMENT_LINE $4541 0 move
COMMENT_LINE $4541 negative use as shift
COMMENT_LINE $4541 positive end
FORCE_NO_SYMBOL $4541
COMMENT $4543 Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $4543 VIA_aux_cntl
COMMENT_LINE $4545 next_line4
COMMENT_LINE $454B VIA values back to default
COMMENT $454E [6] check
FORCE_NO_SYMBOL $454E
COMMENT $4551 [4] Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $4551 VIA_aux_cntl
COMMENT $4554 [4] $CC /BLANK low and /ZERO low
FORCE_SYMBOL $4554 VIA_cntl
FORCE_NO_SYMBOL $4559
COMMENT $455C (2) [4] Send Y to A/D
FORCE_SYMBOL $455C VIA_port_a
FORCE_SYMBOL $4560 VIA_cntl
COMMENT $4562 (2) [4] enable mux, thus y integrators are set to Y
FORCE_SYMBOL $4562 VIA_port_b
COMMENT $4564 [6] Disable mux
FORCE_SYMBOL $4564 VIA_port_b
COMMENT $4566 [6] Send X to A/D
FORCE_SYMBOL $4566 VIA_port_a
COMMENT $4568 light ON, ZERO OFF
FORCE_NO_SYMBOL $4568
COMMENT $456A [4] enable timer 1 (6 cycles)
FORCE_SYMBOL $456A VIA_t1_cnt_hi
COMMENT_LINE $456C light on
COMMENT $456C [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $456C VIA_cntl
COMMENT_LINE $456E 24 cycles -> light off
COMMENT $456E [7]
COMMENT $4570 NEW
COMMENT $4574 [3]
COMMENT $4576 [3]
COMMENT $4578 [3]
FORCE_NO_SYMBOL $457C
COMMENT $457F (2) [4] Send Y to A/D
FORCE_SYMBOL $457F VIA_port_a
FORCE_SYMBOL $4583 VIA_cntl
COMMENT $4585 (2) [4] enable mux, thus y integrators are set to Y
FORCE_SYMBOL $4585 VIA_port_b
COMMENT $4587 [6] Disable mux
FORCE_SYMBOL $4587 VIA_port_b
COMMENT $4589 [6] Send X to A/D
FORCE_SYMBOL $4589 VIA_port_a
COMMENT_LINE $458B nop 4
COMMENT $458B [4] enable timer 1 (6 cycles)
FORCE_SYMBOL $458B VIA_t1_cnt_hi
COMMENT_LINE $458D light on
COMMENT_LINE $458F stb <VIA_cntl ; [4] ZERO disabled, and BLANK disabled
COMMENT_LINE $458F 24 cycles -> light off
COMMENT $458F [7]
COMMENT $4591 NEW
COMMENT $4595 [3]
COMMENT $4597 [3]
COMMENT $4599 [3]
COMMENT_LINE $459B **********************************************************
COMMENT_LINE $459B draw bigger vlists than above one - scale 16
COMMENT_LINE $459B input list in X
COMMENT_LINE $459B destroys u
COMMENT_LINE $459B 0 move
COMMENT_LINE $459B negative use as shift
COMMENT_LINE $459B positive end
COMMENT_LINE $459B macro call ->                     _SCALE   SCALE_VLIST
COMMENT $459B scale for placing first point
FORCE_SYMBOL $459B SCALE_VLIST
COMMENT_LINE $459D macro call ->                     _SCALE_A
COMMENT $459D move to time 1 lo, this means scaling
FORCE_SYMBOL $459D VIA_t1_cnt_lo
FORCE_NO_SYMBOL $459F
COMMENT_LINE $45A1 macro call ->                     MY_MOVE_TO_B_END
FORCE_NO_SYMBOL $45A1
FORCE_SYMBOL $45A3 VIA_int_flags
COMMENT $45A7 Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $45A7 VIA_aux_cntl
COMMENT_LINE $45AF VIA values back to default
COMMENT $45AF [6] check
FORCE_NO_SYMBOL $45AF
COMMENT $45B6 [4] Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $45B6 VIA_aux_cntl
COMMENT $45B8 [4] $CC /BLANK low and /ZERO low
FORCE_SYMBOL $45B8 VIA_cntl
FORCE_NO_SYMBOL $45BD
COMMENT $45C0 (2) [4] Send Y to A/D
FORCE_SYMBOL $45C0 VIA_port_a
FORCE_SYMBOL $45C2 VIA_cntl
COMMENT $45C4 (2) [4] enable mux, thus y integrators are set to Y
FORCE_SYMBOL $45C4 VIA_port_b
COMMENT $45C6 [6] Disable mux
FORCE_SYMBOL $45C6 VIA_port_b
COMMENT $45C8 [6] Send X to A/D
FORCE_SYMBOL $45C8 VIA_port_a
COMMENT $45CA light ON, ZERO OFF
FORCE_NO_SYMBOL $45CA
COMMENT $45CC [4] enable timer 1 (6 cycles)
FORCE_SYMBOL $45CC VIA_t1_cnt_hi
COMMENT_LINE $45CE light on
COMMENT $45CE [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $45CE VIA_cntl
COMMENT_LINE $45D0 24 cycles -> light off
COMMENT $45D0 [7]
COMMENT $45D2 [3]
COMMENT $45D4 [3]
COMMENT $45D6 [3]
FORCE_NO_SYMBOL $45DA
COMMENT $45DD (2) [4] Send Y to A/D
FORCE_SYMBOL $45DD VIA_port_a
FORCE_SYMBOL $45DF VIA_cntl
COMMENT $45E1 (2) [4] enable mux, thus y integrators are set to Y
FORCE_SYMBOL $45E1 VIA_port_b
COMMENT $45E3 [6] Disable mux
FORCE_SYMBOL $45E3 VIA_port_b
COMMENT $45E5 [6] Send X to A/D
FORCE_SYMBOL $45E5 VIA_port_a
COMMENT $45E7 [4] enable timer 1 (6 cycles)
FORCE_SYMBOL $45E7 VIA_t1_cnt_hi
COMMENT_LINE $45E9 light on
COMMENT_LINE $45E9 stb <VIA_cntl ; [4] ZERO disabled, and BLANK disabled
COMMENT_LINE $45E9 24 cycles -> light off
COMMENT $45E9 [7]
COMMENT $45EB [3]
COMMENT $45ED [3]
COMMENT $45EF [3]
COMMENT_LINE $45F1 bank 2
COMMENT $45F1 forward
COMMENT $464C forward
COMMENT $46A7 forward
COMMENT $4702 forward
COMMENT $475D forward
COMMENT_LINE $C91A Spinning
COMMENT $C91A count of lines in 16 bit string that is currently printed (rotation)
COMMENT $C91B current angle used
COMMENT $C91F this is the y position of the center of the spin
COMMENT $C920 save position of stack, S reg is used in spinning routine as auxialry index
COMMENT_LINE $47B8 ***********************************************************************
COMMENT_LINE $47B8 ** Intro
COMMENT_LINE $47B8 ***********************************************************************
COMMENT $47B8 ten seconds
FORCE_NO_SYMBOL $47B8
FORCE_SYMBOL $47BB angleUse
FORCE_SYMBOL $47BE bigCounter
FORCE_SYMBOL $47C1 maState
FORCE_SYMBOL $47C4 maIntensity
COMMENT_LINE $47C7 center y position of spin
FORCE_NO_SYMBOL $47C7
COMMENT $47C9 this is the y position of the center of the spin
FORCE_SYMBOL $47C9 ySpinOffset
FORCE_SYMBOL $47CC alternatingRotation
FORCE_NO_SYMBOL $47CF
FORCE_SYMBOL $47D2 spinCenterScale
FORCE_SYMBOL $47D8 rotationSpeed
FORCE_SYMBOL $47DC maState
FORCE_SYMBOL $47DF MA_STATE_FADE_IN_WHO
FORCE_SYMBOL $47E5 MA_STATE_FADE_IN_MALBAN
FORCE_SYMBOL $47E9 maIntensity
FORCE_NO_SYMBOL $47EC
FORCE_SYMBOL $47EE maIntensity
FORCE_SYMBOL $47F1 maIntensity
FORCE_NO_SYMBOL $47F4
FORCE_SYMBOL $47F8 maState
COMMENT $47FB 4 seconds
FORCE_NO_SYMBOL $47FB
FORCE_SYMBOL $47FE bigCounter
FORCE_SYMBOL $4803 MA_STATE_FADE_HOLD_MALBAN
FORCE_SYMBOL $4807 bigCounter
FORCE_NO_SYMBOL $480A
FORCE_SYMBOL $480D bigCounter
FORCE_SYMBOL $4812 maState
FORCE_SYMBOL $4817 MA_STATE_FADE_OUT_MALBAN
FORCE_SYMBOL $481B maIntensity
FORCE_NO_SYMBOL $481E
FORCE_SYMBOL $4820 maIntensity
FORCE_SYMBOL $4825 maState
FORCE_SYMBOL $482A MA_STATE_FADE_OUT_MALBAN
FORCE_NO_SYMBOL $482E
FORCE_SYMBOL $4830 Intensity_a
COMMENT_LINE $4833 String drawing Malban
FORCE_NO_SYMBOL $4833
FORCE_SYMBOL $4835 VIA_t1_cnt_lo
FORCE_SYMBOL $4839 Vec_Text_Height
FORCE_SYMBOL $483C someText
FORCE_NO_SYMBOL $483F
FORCE_SYMBOL $4843 sync_Print_Str_d_16
FORCE_SYMBOL $4846 maState
FORCE_SYMBOL $4849 MA_STATE_FADE_OUT_MALBAN
FORCE_SYMBOL $484D maState
FORCE_SYMBOL $4850 MA_STATE_FADE_IN_PRESENTS
FORCE_SYMBOL $4854 Intensity_5F
COMMENT_LINE $4857 image drawing, malban pic
FORCE_SYMBOL $4859 Vec_Text_Height
FORCE_SYMBOL $485C MA_WIDTH
FORCE_SYMBOL $485E Vec_Text_Width
COMMENT $4861 Text position relative Y
FORCE_SYMBOL $4861 MA_YPOS
COMMENT $4863 Text position relative X
FORCE_SYMBOL $4863 MA_XPOS
FORCE_SYMBOL $4865 C1_data
COMMENT $4868 Vectrex BIOS print routine
FORCE_SYMBOL $4868 rac_draw_raster_image
COMMENT_LINE $486C ***********************
COMMENT_LINE $486C rotating presents
COMMENT_LINE $486C ***********************
COMMENT_LINE $486C calculate current angle of spin
FORCE_SYMBOL $486C angleUse
FORCE_SYMBOL $486F rotationSpeed
FORCE_SYMBOL $4872 angleUse
FORCE_SYMBOL $4875 alternatingRotation
FORCE_SYMBOL $487A rotationSpeed
FORCE_NO_SYMBOL $4883
FORCE_SYMBOL $4886 rotationSpeed
FORCE_NO_SYMBOL $488B
FORCE_SYMBOL $488D alternatingRotation
FORCE_NO_SYMBOL $4890
FORCE_SYMBOL $4893 rotationSpeed
FORCE_NO_SYMBOL $4896
FORCE_SYMBOL $4899 bigCounter
FORCE_SYMBOL $48A0 alternatingRotation
FORCE_NO_SYMBOL $48A3
FORCE_SYMBOL $48A7 angleUse
FORCE_NO_SYMBOL $48AA
COMMENT $48AE 64 "angle" == 90 degrees this is a straight PRESENTS
FORCE_NO_SYMBOL $48B4
FORCE_SYMBOL $48B6 alternatingRotation
FORCE_NO_SYMBOL $48BF
FORCE_SYMBOL $48C2 rotationSpeed
FORCE_SYMBOL $48C5 angleUse
FORCE_NO_SYMBOL $48C8
FORCE_SYMBOL $48D4 alternatingRotation
FORCE_SYMBOL $48DC rotationSpeed
FORCE_SYMBOL $48DF angleUse
FORCE_NO_SYMBOL $48E2
FORCE_NO_SYMBOL $48EC
FORCE_SYMBOL $48EE alternatingRotation
FORCE_SYMBOL $48F3 Intensity_5F
FORCE_SYMBOL $48F6 someText2
FORCE_SYMBOL $48F9 displayCenterRotatedString
FORCE_SYMBOL $48FC bigCounter
FORCE_NO_SYMBOL $48FF
FORCE_SYMBOL $4902 bigCounter
FORCE_SYMBOL $4908 MA_STATE_FADE_IN_WHO
FORCE_SYMBOL $490A maState
FORCE_NO_SYMBOL $490D
FORCE_SYMBOL $4910 bigCounter
FORCE_SYMBOL $4914 Intensity_1F
FORCE_NO_SYMBOL $4917
FORCE_NO_SYMBOL $491B
FORCE_SYMBOL $491E jsrBank3to2
FORCE_SYMBOL $4921 bigCounter
FORCE_NO_SYMBOL $4924
FORCE_SYMBOL $4927 bigCounter
FORCE_SYMBOL $492C demoRunningFlag
FORCE_SYMBOL $492F Intensity_5F
COMMENT_LINE $4932 String drawing Malban
FORCE_NO_SYMBOL $4932
FORCE_SYMBOL $4934 VIA_t1_cnt_lo
FORCE_SYMBOL $4938 Vec_Text_Height
FORCE_SYMBOL $493B xmas
FORCE_NO_SYMBOL $493E
FORCE_SYMBOL $4942 sync_Print_Str_d_16
FORCE_SYMBOL $4945 for
FORCE_NO_SYMBOL $4948
FORCE_SYMBOL $494C sync_Print_Str_d_16
FORCE_SYMBOL $494F alex
FORCE_SYMBOL $4954 sync_Print_Str_d_16
COMMENT_LINE $49A2 ***********************************************************************
COMMENT_LINE $49A2 ** Large Font and print routine
COMMENT_LINE $49A2 ***********************************************************************
COMMENT_LINE $49A2 format:
COMMENT_LINE $49A2 height, width
COMMENT_LINE $49A2 shiftreg, ...,  shiftreg
COMMENT_LINE $49A2 ....
COMMENT_LINE $49A2 shiftreg, ...,  shiftreg
COMMENT_LINE $49A2 16 x 16
COMMENT_LINE $49A2 db $10, $77
COMMENT_LINE $49A2 SPACE        !          "          c          H          %         ...         '         I_          _I         :-)       +          ,          _           .          /          0          1          2          3          4         5           6         7            8         9          :          ;          T          |          T         ?            :-)       A          B          C           D         E           F         G          H           I         J          k           L          M          N         O          P           Q         R          S          T          U          V           W          X         Y          Z
COMMENT $49A2 forward
COMMENT $49DE forward
COMMENT $4A1A forward
COMMENT $4A56 forward
COMMENT $4A92 forward
COMMENT $4ACE forward
COMMENT $4B0A forward
COMMENT $4B46 forward
COMMENT $4B82 forward
COMMENT $4BBE forward
COMMENT $4BFA forward
COMMENT $4C36 forward
COMMENT $4C72 forward
COMMENT $4CAE forward
COMMENT $4CEA forward
COMMENT $4D26 forward
COMMENT $4D62 forward
COMMENT $4D9E forward
COMMENT $4DDA forward
COMMENT $4E16 forward
COMMENT $4E52 forward
COMMENT $4E8E forward
COMMENT $4ECA forward
COMMENT $4F06 forward
COMMENT $4F42 forward
COMMENT $4F7E forward
COMMENT $4FBA forward
COMMENT $4FF6 forward
COMMENT $5032 forward
COMMENT $506E forward
COMMENT $50AA forward
COMMENT $50E6 forward
COMMENT_LINE $5122 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $5122 zero delay is needed for zeroing to work correctly
COMMENT_LINE $5122 depends on the distance of the current integrator position to actual zero point
COMMENT_LINE $5122 experiment with my vectri:
COMMENT_LINE $5122 ZERO ing the integrators takes time. Measures at my vectrex show e.g.:
COMMENT_LINE $5122 If you move the beam with a to x = -127 and y = -127 at diffferent scale values, the time to reach zero:
COMMENT_LINE $5122 - scale $ff -> zero 110 cycles
COMMENT_LINE $5122 - scale $7f -> zero 75 cycles
COMMENT_LINE $5122 - scale $40 -> zero 57 cycles
COMMENT_LINE $5122 - scale $20 -> zero 53 cycles
COMMENT_LINE $5122 put move position on stack put it so, that we can load "d" directly from stack
COMMENT $5124 Save string pointer
FORCE_SYMBOL $5124 Vec_Str_Ptr
COMMENT_LINE $5127 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $5127 Point to start of chargen bitmaps
FORCE_SYMBOL $5127 FONT16_START_A_EVEN
COMMENT $512A Point to start of chargen bitmaps
FORCE_SYMBOL $512A FONT16_START_A_ODD
FORCE_NO_SYMBOL $512E
COMMENT $5130 store zeroing values to cntl
FORCE_SYMBOL $5130 VIA_cntl
COMMENT_LINE $5132 zero
COMMENT $5132 zero the integrators
COMMENT_LINE $5135 reset integrators
COMMENT_LINE $5135 ;;; clr <VIA_port_a ; reset integrator offset
COMMENT_LINE $5135 lda #%10000010
COMMENT_LINE $5135 wait that zeroing surely has the desired effect!
FORCE_SYMBOL $5135 VIA_port_a
FORCE_SYMBOL $5137 VIA_port_b
COMMENT $5139 and wait for zeroing to be actually done
FORCE_SYMBOL $5139 ZERO_DELAY_P
FORCE_SYMBOL $513C VIA_port_b
COMMENT_LINE $513E ;;; sta <VIA_port_b ; while waiting, zero offsets
COMMENT_LINE $5141 ;;; inc <VIA_port_b
FORCE_NO_SYMBOL $5141
COMMENT_LINE $5143 ;;;;;;
COMMENT $5143 Store Y in D/A register
FORCE_SYMBOL $5143 VIA_port_a
COMMENT $5145 Blank low, zero high?
FORCE_NO_SYMBOL $5145
FORCE_SYMBOL $5147 VIA_cntl
COMMENT $514A Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $514A VIA_port_b
COMMENT_LINE $514C STA      <VIA_shift_reg               ;Clear shift regigster
COMMENT $514C y must be set more than xx cycles on some vectrex
COMMENT $514D Disable mux
FORCE_SYMBOL $514D VIA_port_b
COMMENT $514F Store X in D/A register
FORCE_SYMBOL $514F VIA_port_a
COMMENT $5151 enable timer
FORCE_SYMBOL $5151 VIA_t1_cnt_hi
COMMENT $5153 Point to start of text string
FORCE_SYMBOL $5153 Vec_Str_Ptr
FORCE_NO_SYMBOL $5156
FORCE_SYMBOL $5158 VIA_int_flags
COMMENT_LINE $515C ;;;;;;
COMMENT $515C AUX: b→ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
FORCE_NO_SYMBOL $515C
COMMENT $515F ramp off/on set mux to channel 1
FORCE_SYMBOL $515F VIA_port_b
COMMENT $5161 Shift reg mode = 110 (shift out under system clock), T1 PB7 disabled, one shot mode
FORCE_SYMBOL $5161 VIA_aux_cntl
COMMENT $5163 Clear D/A output
FORCE_SYMBOL $5163 VIA_port_a
COMMENT_LINE $5165 first entry here, ramp is disabled
COMMENT_LINE $5165 if there was a jump from below
COMMENT_LINE $5165 ramp will be enabled by next line
COMMENT $5165 Enable mux
FORCE_SYMBOL $5165 VIA_port_b
COMMENT $516A Disable mux
FORCE_SYMBOL $516A VIA_port_b
COMMENT $516C Send it to the D/A
FORCE_SYMBOL $516C VIA_port_a
COMMENT $516E [4]enable RAMP, disable mux (start moving)
FORCE_SYMBOL $516E VIA_port_b
COMMENT $5170 [3]
COMMENT_LINE $5172 one letter is drawn (one row that is) in 18 cycles
COMMENT_LINE $5172 13 cycles overhead
COMMENT_LINE $5172 ramp is thus active for #ofLetters*18 + 13 cycles
COMMENT $5172 [+5]Get bitmap from chargen table
COMMENT $5174 [+4]rasterout of char bitmap "row" thru shift out in shift register
FORCE_SYMBOL $5174 VIA_shift_reg
COMMENT $5176 5
COMMENT $5178 6
COMMENT $517A 3
COMMENT $517C 4
FORCE_SYMBOL $517C VIA_shift_reg
COMMENT $517E [+6]Get next character
COMMENT $5180 [+3]Go back if not terminator
COMMENT $5182 [4]Check for last row
FORCE_SYMBOL $5182 FONT16_END
COMMENT $5185 [3]Branch if last row
COMMENT $5187 [3]Point to next chargen row
FORCE_SYMBOL $5187 FONT16_LENGTH
COMMENT $518A [3]Point to next chargen row
FORCE_SYMBOL $518A FONT16_LENGTH
FORCE_NO_SYMBOL $518D
COMMENT $5190 PB7 enabled
FORCE_SYMBOL $5190 VIA_aux_cntl
FORCE_SYMBOL $5192 Vec_Text_Height
FORCE_NO_SYMBOL $5195
FORCE_NO_SYMBOL $5197
COMMENT $5199 Go back for next scan line
FORCE_NO_SYMBOL $519B
FORCE_SYMBOL $519E VIA_shift_reg
COMMENT $51A0 T1→PB7 enabled
FORCE_SYMBOL $51A0 VIA_aux_cntl
COMMENT $51A2 all done, correct stack
COMMENT_LINE $51A4 ***********************************************************************
COMMENT_LINE $51A4 ** Malban C1 image display
COMMENT_LINE $51A4 ***********************************************************************
COMMENT_LINE $51A4 put move position on stack put it so, that we can load "d" directly from stack
COMMENT $51A8 load line counter
COMMENT $51AA height counter
FORCE_SYMBOL $51AA ma_counter1
COMMENT $51AD load line width
COMMENT $51AF width counter
FORCE_SYMBOL $51AF ma_counter2
COMMENT $51B2 width counter (work)
FORCE_SYMBOL $51B2 ma_counter3
COMMENT_LINE $51B5 setup VIA raster routine
COMMENT_LINE $51B5 setup rampin with auxControl
COMMENT $51B5 reload line width
FORCE_SYMBOL $51B5 ma_counter2
FORCE_SYMBOL $51B8 ma_counter3
COMMENT_LINE $51BB zero
COMMENT $51BB zero the integrators
FORCE_NO_SYMBOL $51BB
COMMENT $51BD store zeroing values to cntl
FORCE_SYMBOL $51BD VIA_cntl
COMMENT $51BF and wait for zeroing to be actually done
FORCE_SYMBOL $51BF ZERO_DELAY
COMMENT_LINE $51C1 reset integrators
COMMENT $51C1 reset integrator offset
FORCE_SYMBOL $51C1 VIA_port_a
FORCE_NO_SYMBOL $51C3
COMMENT_LINE $51C5 wait that zeroing surely has the desired effect!
COMMENT $51C5 while waiting, zero offsets
FORCE_SYMBOL $51C5 VIA_port_b
FORCE_SYMBOL $51CA VIA_port_b
COMMENT_LINE $51CC unzero is done by moveto_d
FORCE_SYMBOL $51CC RA_SCALE_MOVE
FORCE_SYMBOL $51CE VIA_t1_cnt_lo
FORCE_NO_SYMBOL $51D0
COMMENT_LINE $51D2 jsr      Moveto_d
COMMENT_LINE $51D2 ;;;;; move to d as direct code start
COMMENT $51D2 Store Y in D/A register
FORCE_SYMBOL $51D2 VIA_port_a
COMMENT $51D4 Blank low, zero high?
FORCE_NO_SYMBOL $51D4
FORCE_SYMBOL $51D6 VIA_cntl
COMMENT $51D9 Enable mux
FORCE_SYMBOL $51D9 VIA_port_b
COMMENT $51DB Clear shift regigster
FORCE_SYMBOL $51DB VIA_shift_reg
COMMENT $51DD Disable mux
FORCE_SYMBOL $51DD VIA_port_b
COMMENT $51DF Store X in D/A register
FORCE_SYMBOL $51DF VIA_port_a
COMMENT $51E1 enable timer
FORCE_SYMBOL $51E1 VIA_t1_cnt_hi
COMMENT $51E3 optimized correct adder for next scan line
COMMENT $51E5 done befor wait loop of move to d
FORCE_NO_SYMBOL $51E5
FORCE_NO_SYMBOL $51E7
COMMENT $51E9 preload next scale
FORCE_SYMBOL $51E9 RA_SCALE_DRAW
FORCE_NO_SYMBOL $51EB
FORCE_SYMBOL $51ED VIA_int_flags
COMMENT_LINE $51F1 ;;;;; move to d as direct code end
FORCE_SYMBOL $51F1 VIA_t1_cnt_lo
COMMENT_LINE $51F3 ensure y int does nothing
COMMENT $51F3 mux disabled, mux sel = y int
FORCE_NO_SYMBOL $51F3
COMMENT $51F5 to via b
FORCE_SYMBOL $51F5 VIA_port_b
COMMENT $51F7 ensure dac is 0
FORCE_SYMBOL $51F7 VIA_port_a
COMMENT $51F9 enable mux
FORCE_SYMBOL $51F9 VIA_port_b
COMMENT $51FB delay
COMMENT $51FC disable mux
FORCE_SYMBOL $51FC VIA_port_b
COMMENT $51FE a = $18,
FORCE_NO_SYMBOL $51FE
COMMENT $5200 $18: T1 OneSHotMode WITHOUT Ramp control, Shift out under System clock
FORCE_SYMBOL $5200 VIA_aux_cntl
COMMENT $5202 get width
FORCE_SYMBOL $5202 Vec_Text_Width
COMMENT $5205 Send it to the D/A
FORCE_SYMBOL $5205 VIA_port_a
COMMENT $5207 a = $01
FORCE_NO_SYMBOL $5207
COMMENT $5209 Enable RAMP, disable mux
FORCE_SYMBOL $5209 VIA_port_b
COMMENT_LINE $520B output is ongoing! (RAMP is enabled)
COMMENT $520B [5]
FORCE_SYMBOL $520B ma_counter3
COMMENT $520E [2] wait
COMMENT $520F [2] wait
COMMENT $5210 [6] get bitmap (shiftreg-data) from raster table
COMMENT $5212 [4] This loop needs to have exactly 18 cycles (8*2+2)
FORCE_SYMBOL $5212 VIA_shift_reg
COMMENT_LINE $5214 one complete shiftreg output takes 16 cycles (8*2) + 2 cycles since VIA needs some rest
COMMENT $5214 [3]
COMMENT $5216 [2]
COMMENT $5217 [3] go back if not done for line
COMMENT $5219 [2] delay 2 to finish last shiftout
COMMENT $521A [4] b is 0 now, switch of shift
FORCE_SYMBOL $521A VIA_shift_reg
COMMENT_LINE $521C don't bother about ramp and dac, in the next round all will be resetted
COMMENT $521C EXIT routine
FORCE_NO_SYMBOL $521C
COMMENT $521E T1->PB7 enabled
FORCE_SYMBOL $521E VIA_aux_cntl
COMMENT $5220 check for last row
FORCE_SYMBOL $5220 ma_counter1
COMMENT $5223 branch if not last row
COMMENT $5225 all done, correct stack
COMMENT_LINE $5228 **************************************************************************
COMMENT_LINE $5228 ** spinning a string
COMMENT_LINE $5228 **************************************************************************
COMMENT $0000 [+4]rasterout of char bitmap "row" thru shift out in shift register
COMMENT $0000 [6]
COMMENT $0000 zero the integrators
COMMENT $0000 store zeroing values to cntl
COMMENT $0000 start of String (9 = stringlength + 1)
COMMENT $0000 Point to next "row" of font bitmap
COMMENT $0000 [+4]rasterout of char bitmap "row" thru shift out in shift register
COMMENT $0000 8
COMMENT $0000 5 sneaky reuse of stack as an addition index pointer
COMMENT $0000 5
COMMENT $0000 [6]
COMMENT $0000 zero the integrators
COMMENT $0000 store zeroing values to cntl
COMMENT $0000 start of String (9 = stringlength + 1)
COMMENT $0000 Point to next "row" of font bitmap
COMMENT_LINE $0000 **************************************************************************
COMMENT_LINE $5228 in x pointer to string
COMMENT_LINE $5228 angle in "angle"
COMMENT_LINE $5228 fixed string length of "8"
COMMENT_LINE $5228 in x pointer to string
COMMENT_LINE $5228 angle in "angleUse"
COMMENT_LINE $5228 fixed string length of "8"
COMMENT_LINE $5228 expects zeroed on entry
COMMENT_LINE $5228 leaves with VIA_aux = to $18 ("normal" is $98)
COMMENT_LINE $5228 y used for circle data
COMMENT_LINE $5228 x used for font
COMMENT_LINE $5228 s used for offset data
COMMENT_LINE $5228 u used for chartable
COMMENT_LINE $5228 string is printed with "angleUse" angle
COMMENT_LINE $5228 the beam is positioned to that angle +/- some offsets
COMMENT $5228 zero the integrators
FORCE_NO_SYMBOL $5228
COMMENT $522A store zeroing values to cntl
FORCE_SYMBOL $522A VIA_cntl
FORCE_NO_SYMBOL $522C
COMMENT $522E [4]disable RAMP, disable mux
FORCE_SYMBOL $522E VIA_port_b
FORCE_SYMBOL $5230 stackSafe
FORCE_SYMBOL $5234 linePrinting
COMMENT_LINE $5237 ;;;;;;;;;;;;;
FORCE_SYMBOL $5237 FONT16_START_A_EVEN
COMMENT_LINE $523A LDY      #FONT16_START_A_ODD
COMMENT_LINE $0000 ;;;;;;;;;;;;;
COMMENT $523A 0 = shift,
FORCE_NO_SYMBOL $523A
FORCE_SYMBOL $523C VIA_aux_cntl
FORCE_SYMBOL $523E spinCenterScale
COMMENT $5241 length of 7,5 letters
FORCE_SYMBOL $5241 VIA_t1_cnt_lo
COMMENT $5243 this is the y position of the center of the spin
FORCE_SYMBOL $5243 ySpinOffset
COMMENT $5246 4
FORCE_SYMBOL $5246 VIA_port_a
COMMENT $5248 4
FORCE_SYMBOL $5248 VIA_port_b
COMMENT $524E 4
FORCE_SYMBOL $524E VIA_port_b
COMMENT $5250 light OFF, ZERO OFF
FORCE_NO_SYMBOL $5250
COMMENT $5253 5
FORCE_SYMBOL $5253 VIA_port_a
COMMENT $5255 4
FORCE_SYMBOL $5255 VIA_t1_cnt_hi
FORCE_SYMBOL $5257 VIA_cntl
COMMENT_LINE $5259 prepare the "real" angle of the string
COMMENT $5259 each char has 16 bits not 8
COMMENT $525B length of 7,5 letters
FORCE_SYMBOL $525B VIA_t1_cnt_lo
FORCE_SYMBOL $525D wheelcircleData
FORCE_SYMBOL $5261 angleUse
FORCE_NO_SYMBOL $5264
FORCE_SYMBOL $5266 angleTmp
FORCE_SYMBOL $526B printAngleOffsets
FORCE_NO_SYMBOL $526F
FORCE_SYMBOL $5271 VIA_int_flags
COMMENT_LINE $5275 now the center position around which we rotate is reached on screen
COMMENT_LINE $5275 get angle to start printing the current line
FORCE_SYMBOL $5275 linePrinting
FORCE_SYMBOL $5278 linePrinting
FORCE_SYMBOL $527E angleTmp
FORCE_NO_SYMBOL $5281
COMMENT $5283 if it is odd, then it is a cosinus instead of sinus - which prints the string the wrong way!
FORCE_SYMBOL $5285 angleTmp
FORCE_SYMBOL $5288 wheelcircleData
FORCE_NO_SYMBOL $528E
COMMENT_LINE $5290 ;;;;;;;;;; move to that position
COMMENT $5290 4
FORCE_SYMBOL $5290 VIA_port_a
COMMENT $5292 4
FORCE_SYMBOL $5292 VIA_port_b
COMMENT $5298 4
FORCE_SYMBOL $5298 VIA_port_b
COMMENT $529A 5
FORCE_SYMBOL $529A VIA_port_a
COMMENT $529C light OFF, ZERO OFF
FORCE_NO_SYMBOL $529C
COMMENT $529F 4
FORCE_SYMBOL $529F VIA_t1_cnt_hi
FORCE_SYMBOL $52A1 VIA_cntl
COMMENT_LINE $52A3 prepare the "real" angle of the string
FORCE_SYMBOL $52A3 wheelcircleData
FORCE_SYMBOL $52A7 angleUse
FORCE_NO_SYMBOL $52AA
COMMENT $52AC if it is odd, then it is a cosinus instead of sinus - which prints the string the wrong way!
FORCE_NO_SYMBOL $52B0
FORCE_SYMBOL $52B2 VIA_int_flags
COMMENT_LINE $52B6 ;;;;;;;;;;
FORCE_NO_SYMBOL $52B6
COMMENT $52B8 [4]disable RAMP, disable mux
FORCE_SYMBOL $52B8 VIA_port_b
FORCE_NO_SYMBOL $52BA
COMMENT $52BC Shift reg mode = 110 (shift out under system clock), T1 PB7 disabled, one shot mode
FORCE_SYMBOL $52BC VIA_aux_cntl
COMMENT_LINE $52BE load the real angle
COMMENT_LINE $52BE print one line of string
COMMENT $52BE Blank low, zero high
FORCE_NO_SYMBOL $52BE
COMMENT $52C1 store zeroing values to cntl
FORCE_SYMBOL $52C1 VIA_cntl
COMMENT $52C3 y coordinate
FORCE_NO_SYMBOL $52C3
COMMENT_LINE $52C5 inverse - since we are going to "center" from the current position
COMMENT $52C6 Y To D/A output
FORCE_SYMBOL $52C6 VIA_port_a
COMMENT $52C8 ramp off set mux to channel 0, Enable mux (set y)
FORCE_SYMBOL $52C8 VIA_port_b
COMMENT $52CE B = $81
COMMENT $52CF Disable RAMP, set mux to channel 0, disable mux
FORCE_SYMBOL $52CF VIA_port_b
FORCE_NO_SYMBOL $52D1
COMMENT $52D4 Send it to the D/A (X)
FORCE_SYMBOL $52D4 VIA_port_a
COMMENT $52D6 both to ORB, both ENABLE RAMP, mux off
FORCE_NO_SYMBOL $52D6
COMMENT $52D8 [4]enable RAMP, disable mux
FORCE_SYMBOL $52D8 VIA_port_b
COMMENT $52DE [+4]rasterout of char bitmap "row" thru shift out in shift register
FORCE_SYMBOL $52DE VIA_shift_reg
COMMENT $52E0 8
FORCE_SYMBOL $52E0 ODD_EVEN_OFFSET
COMMENT $52E4 5 sneaky reuse of stack as an addition index pointer
COMMENT $52E6 5
FORCE_SYMBOL $52E6 VIA_shift_reg
COMMENT $52E9 [6]
COMMENT $52ED zero the integrators
FORCE_NO_SYMBOL $52ED
COMMENT $52EF store zeroing values to cntl
FORCE_SYMBOL $52EF VIA_cntl
FORCE_SYMBOL $52F1 FONT16_END
COMMENT $52F7 start of String (9 = stringlength + 1)
COMMENT $52F9 Point to next "row" of font bitmap
FORCE_SYMBOL $52F9 FONT16_LENGTH
FORCE_NO_SYMBOL $52FC
FORCE_SYMBOL $52FE VIA_port_a
FORCE_SYMBOL $5300 VIA_port_b
FORCE_SYMBOL $5302 nextRotateStringLine
FORCE_SYMBOL $5305 stackSafe
COMMENT $5328 0degrees: 0
COMMENT $532A 1degrees: 1
COMMENT $532C 2degrees: 2
COMMENT $532E 3degrees: 4
COMMENT $5330 4degrees: 5
COMMENT $5332 5degrees: 7
COMMENT $5334 6degrees: 8
COMMENT $5336 7degrees: 9
COMMENT $5338 8degrees: 11
COMMENT $533A 9degrees: 12
COMMENT $533C 10degrees: 14
COMMENT $533E 1degrees: 15
COMMENT $5340 2degrees: 16
COMMENT $5342 3degrees: 18
COMMENT $5344 4degrees: 19
COMMENT $5346 5degrees: 21
COMMENT $5348 6degrees: 22
COMMENT $534A 7degrees: 23
COMMENT $534C 8degrees: 25
COMMENT $534E 9degrees: 26
COMMENT $5350 20degrees: 28
COMMENT $5352 1degrees: 29
COMMENT $5354 2degrees: 31
COMMENT $5356 3degrees: 32
COMMENT $5358 4degrees: 33
COMMENT $535A 56degrees: 35
COMMENT $535C 6degrees: 36
COMMENT $535E 7degrees: 38
COMMENT $5360 8degrees: 39
COMMENT $5362 9degrees: 40
COMMENT $5364 30degrees: 42
COMMENT $5366 1degrees: 43
COMMENT $5368 2degrees: 45
COMMENT $536A 3degrees: 46
COMMENT $536C 4degrees: 48
COMMENT $536E 5degrees: 49
COMMENT $5370 6degrees: 50
COMMENT $5372 7degrees: 52
COMMENT $5374 8degrees: 53
COMMENT $5376 9degrees: 55
COMMENT $5378 40degrees: 56
COMMENT $537A 1degrees: 57
COMMENT $537C 2degrees: 59
COMMENT $537E 3degrees: 60
COMMENT $5380 4degrees: 62
COMMENT $5382 5degrees: 63
COMMENT $5384 6degrees: 64
COMMENT $5386 7degrees: 66
COMMENT $5388 8degrees: 67
COMMENT $538A 9degrees: 69
COMMENT $538C 50degrees: 70
COMMENT $538E 1degrees: 72
COMMENT $5390 2degrees: 73
COMMENT $5392 3degrees: 74
COMMENT $5394 4degrees: 76
COMMENT $5396 5degrees: 77
COMMENT $5398 6degrees: 79
COMMENT $539A 7degrees: 80
COMMENT $539C 8degrees: 81
COMMENT $539E 9degrees: 83
COMMENT $53A0 60degrees: 84
COMMENT $53A2 1degrees: 86
COMMENT $53A4 2degrees: 87
COMMENT $53A6 2degrees: 88
COMMENT $53A8 3degrees: 90 64 "angle" == 90 degrees
COMMENT $53AA 4degrees: 91
COMMENT $53AC 5degrees: 93
COMMENT $53AE 6degrees: 94
COMMENT $53B0 7degrees: 95
COMMENT $53B2 8degrees: 97
COMMENT $53B4 9degrees: 98
COMMENT $53B6 70degrees: 100
COMMENT $53B8 1degrees: 101
COMMENT $53BA 2degrees: 103
COMMENT $53BC 3degrees: 104
COMMENT $53BE 4degrees: 105
COMMENT $53C0 5degrees: 107
COMMENT $53C2 6degrees: 108
COMMENT $53C4 7degrees: 110
COMMENT $53C6 8degrees: 111
COMMENT $53C8 9degrees: 112
COMMENT $53CA 90degrees: 114
COMMENT $53CC 1degrees: 115
COMMENT $53CE 2degrees: 117
COMMENT $53D0 3degrees: 118
COMMENT $53D2 4degrees: 119
COMMENT $53D4 5degrees: 121
COMMENT $53D6 6degrees: 122
COMMENT $53D8 7degrees: 124
COMMENT $53DA 8degrees: 125
COMMENT $53DC 9degrees: 127
COMMENT $53DE 100degrees: 128
COMMENT $53E0 1degrees: 129
COMMENT $53E2 2degrees: 131
COMMENT $53E4 3degrees: 132
COMMENT $53E6 4degrees: 134
COMMENT $53E8 5degrees: 135
COMMENT $53EA 6degrees: 136
COMMENT $53EC 7degrees: 138
COMMENT $53EE 8degrees: 139
COMMENT $53F0 9degrees: 141
COMMENT $53F2 110degrees: 142
COMMENT $53F4 1degrees: 143
COMMENT $53F6 2degrees: 145
COMMENT $53F8 3degrees: 146
COMMENT $53FA 4degrees: 148
COMMENT $53FC 5degrees: 149
COMMENT $53FE 6degrees: 151
COMMENT $5400 7degrees: 152
COMMENT $5402 8degrees: 153
COMMENT $5404 9degrees: 155
COMMENT $5406 120degrees: 156
COMMENT $5408 1degrees: 158
COMMENT $540A 2degrees: 159
COMMENT $540C 3degrees: 160
COMMENT $540E 4degrees: 162
COMMENT $5410 5degrees: 163
COMMENT $5412 6degrees: 165
COMMENT $5414 7degrees: 166
COMMENT $5416 8degrees: 167
COMMENT $5418 9degrees: 169
COMMENT $541A 130degrees: 170
COMMENT $541C 1degrees: 172
COMMENT $541E 2degrees: 173
COMMENT $5420 3degrees: 175
COMMENT $5422 4degrees: 176
COMMENT $5424 5degrees: 177
COMMENT $5426 6degrees: 179
COMMENT $5428 7degrees: 180
COMMENT $542A 8degrees: 182
COMMENT $542C 9degrees: 183
COMMENT $542E 140degrees: 184
COMMENT $5430 degrees: 186
COMMENT $5432 degrees: 187
COMMENT $5434 degrees: 189
COMMENT $5436 degrees: 190
COMMENT $5438 degrees: 191
COMMENT $543A degrees: 193
COMMENT $543C degrees: 194
COMMENT $543E degrees: 196
COMMENT $5440 degrees: 197
COMMENT $5442 degrees: 199
COMMENT $5444 degrees: 200
COMMENT $5446 degrees: 201
COMMENT $5448 degrees: 203
COMMENT $544A degrees: 204
COMMENT $544C degrees: 206
COMMENT $544E degrees: 207
COMMENT $5450 degrees: 208
COMMENT $5452 degrees: 210
COMMENT $5454 degrees: 211
COMMENT $5456 degrees: 213
COMMENT $5458 degrees: 214
COMMENT $545A degrees: 215
COMMENT $545C degrees: 217
COMMENT $545E degrees: 218
COMMENT $5460 degrees: 220
COMMENT $5462 degrees: 221
COMMENT $5464 degrees: 223
COMMENT $5466 degrees: 224
COMMENT $5468 degrees: 225
COMMENT $546A degrees: 227
COMMENT $546C degrees: 228
COMMENT $546E degrees: 230
COMMENT $5470 degrees: 231
COMMENT $5472 degrees: 232
COMMENT $5474 degrees: 234
COMMENT $5476 degrees: 235
COMMENT $5478 degrees: 237
COMMENT $547A degrees: 238
COMMENT $547C degrees: 239
COMMENT $547E degrees: 241
COMMENT $5480 degrees: 242
COMMENT $5482 degrees: 244
COMMENT $5484 degrees: 245
COMMENT $5486 degrees: 247
COMMENT $5488 degrees: 248
COMMENT $548A degrees: 249
COMMENT $548C degrees: 251
COMMENT $548E degrees: 252
COMMENT $5490 degrees: 254
COMMENT $5492 degrees: 255
COMMENT $5494 degrees: 256
COMMENT $5496 degrees: 258
COMMENT $5498 degrees: 259
COMMENT $549A degrees: 261
COMMENT $549C degrees: 262
COMMENT $549E degrees: 263
COMMENT $54A0 degrees: 265
COMMENT $54A2 degrees: 266
COMMENT $54A4 degrees: 268
COMMENT $54A6 degrees: 269
COMMENT $54A8 degrees: 271
COMMENT $54AA degrees: 272
COMMENT $54AC degrees: 273
COMMENT $54AE degrees: 275
COMMENT $54B0 degrees: 276
COMMENT $54B2 degrees: 278
COMMENT $54B4 degrees: 279
COMMENT $54B6 degrees: 280
COMMENT $54B8 degrees: 282
COMMENT $54BA degrees: 283
COMMENT $54BC degrees: 285
COMMENT $54BE degrees: 286
COMMENT $54C0 degrees: 287
COMMENT $54C2 degrees: 289
COMMENT $54C4 degrees: 290
COMMENT $54C6 degrees: 292
COMMENT $54C8 degrees: 293
COMMENT $54CA degrees: 295
COMMENT $54CC degrees: 296
COMMENT $54CE degrees: 297
COMMENT $54D0 degrees: 299
COMMENT $54D2 degrees: 300
COMMENT $54D4 degrees: 302
COMMENT $54D6 degrees: 303
COMMENT $54D8 degrees: 304
COMMENT $54DA degrees: 306
COMMENT $54DC degrees: 307
COMMENT $54DE degrees: 309
COMMENT $54E0 degrees: 310
COMMENT $54E2 degrees: 312
COMMENT $54E4 degrees: 313
COMMENT $54E6 degrees: 314
COMMENT $54E8 degrees: 316
COMMENT $54EA degrees: 317
COMMENT $54EC degrees: 319
COMMENT $54EE degrees: 320
COMMENT $54F0 degrees: 321
COMMENT $54F2 degrees: 323
COMMENT $54F4 degrees: 324
COMMENT $54F6 degrees: 326
COMMENT $54F8 degrees: 327
COMMENT $54FA degrees: 328
COMMENT $54FC degrees: 330
COMMENT $54FE degrees: 331
COMMENT $5500 degrees: 333
COMMENT $5502 degrees: 334
COMMENT $5504 degrees: 336
COMMENT $5506 degrees: 337
COMMENT $5508 degrees: 338
COMMENT $550A degrees: 340
COMMENT $550C degrees: 341
COMMENT $550E degrees: 343
COMMENT $5510 degrees: 344
COMMENT $5512 degrees: 345
COMMENT $5514 degrees: 347
COMMENT $5516 degrees: 348
COMMENT $5518 degrees: 350
COMMENT $551A degrees: 351
COMMENT $551C degrees: 352
COMMENT $551E degrees: 354
COMMENT $5520 degrees: 355
COMMENT $5522 degrees: 357
COMMENT $5524 degrees: 358
COMMENT $5526 degrees: 0
COMMENT $C915 which string in the pointer list to start with
COMMENT $C916 line for the scroll line within one string (bitmap)
COMMENT $C917 compensation offset while printing for line gap between two strings
COMMENT $C918 x offset of line (used to ensure MID alignment)
COMMENT $C919 counter of how many string lines have been processed within the scroller (coutdown from BITMAP_LINES_TITLE)
COMMENT_LINE $5528 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $5528 implements the vertical scroller on the
COMMENT_LINE $5528 desktop
COMMENT_LINE $5528 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $5528 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $5528 u pointer to String
COMMENT_LINE $5528 in ,s position where position is synced to
COMMENT_LINE $0000 zero is short, since we stay near center -> no wait loop!
COMMENT $0000 zero the integrators
COMMENT $0000 store zeroing values to cntl
COMMENT $0000 reset integrator offset
COMMENT $0000 while waiting, zero offsets
COMMENT $0000 from now on "in move"
COMMENT $0000 next line of font is this much further down
COMMENT $0000 next line of font is this much further down
COMMENT_LINE $0000 somehow get next x offset!
COMMENT_LINE $0000 when using higher scale for screen positioing - adjust these waits!
COMMENT $0000 uses S register for a PSHS wait!
COMMENT_LINE $0000 tfr      a,a                            ; 6 WAIT
COMMENT_LINE $0000 tfr      a,a                            ; 6 WAIT
COMMENT_LINE $0000 nop      2                              ; 4 WAIT
COMMENT_LINE $0000 nop      10                             ; 20 WAIT
COMMENT $0000 preload values ;a?AUX: b?ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
COMMENT $0000 ramp off/on set mux to channel 1
COMMENT $0000 Shift reg mode = 110 (shift out under system clock), T1 PB7 disabled, one shot mode
COMMENT $0000 Clear D/A output
COMMENT $0000 if not done on a real vectrex - uper lines end up slighjtly diagonal
COMMENT $0000 Disable mux
COMMENT $0000 Send it to the D/A
COMMENT $0000 [4]enable RAMP, disable mux (start moving)
COMMENT $0000 Get next character
COMMENT $0000 Get bitmap from chargen table
COMMENT $0000 Save in shift register
COMMENT $0000 Get next character
COMMENT $0000 Go back if not terminator
COMMENT $0000 restore aux settings and zero
COMMENT $0000 T1?PB7 enabled
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 u pointer $80 +1
COMMENT_LINE $0000 in ,s position where position is synced to
COMMENT_LINE $0000 zero is short, since we stay near center -> no wait loop!
COMMENT_LINE $0000 zero was done by last printing
COMMENT $0000 zero the integrators
COMMENT_LINE $0000 stb <VIA_cntl ; store zeroing values to cntl
COMMENT $0000 reset integrator offset
COMMENT $0000 while waiting, zero integrators (enable mux to "y")
COMMENT $0000 disable mux
COMMENT $0000 load position
COMMENT $0000 move there, from now on "in move"
COMMENT $0000 test if line max reached, if so jump out of endless loop (out of macro)
COMMENT $0000 ensure spacing between bitmap lines
COMMENT $0000 next line of font is this much further down
COMMENT $0000 ensure FONT is pointing to "row" of bitmap
COMMENT $0000 if end -> start next String
COMMENT $0000 if one before end, ensure, next time position is updated wirh "in between string" spacing
COMMENT $0000 next line of font is this much further down
COMMENT $0000 reset u
COMMENT_LINE $0000 u is correct
COMMENT $0000 neg is end of list, value is xline offset, skip it!
COMMENT $0000 save current u
COMMENT $0000 start new font "row"
COMMENT $0000 WAIT
COMMENT_LINE $0000 waiting for timer to expire
COMMENT $0000 preload values ;a?AUX: b?ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
COMMENT $0000 ramp off/on set mux to channel 1
COMMENT $0000 Shift reg mode = 110 (shift out under system clock), T1 PB7 disabled, one shot mode
COMMENT $0000 Clear D/A output
COMMENT $0000 if not done on a real vectrex - uper lines end up slighjtly diagonal
COMMENT $0000 Disable mux
COMMENT $0000 Send it to the D/A
COMMENT $0000 [4]enable RAMP, disable mux (start moving)
COMMENT $0000 Get next character
COMMENT $0000 Get bitmap from chargen table
COMMENT $0000 Save in shift register
COMMENT $0000 Get next character
COMMENT $0000 Go back if not terminator
COMMENT $0000 restore aux settings and zero
COMMENT $0000 T1?PB7 enabled
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 in u pointer to first line of String "pointers"
COMMENT_LINE $0000 "BITMAP_LINES_TITLE" lines are printed
COMMENT_LINE $0000 in a NO of String line to start with, assumed < FONT_HEIGHT
COMMENT_LINE $0000 in x sync coordinates
COMMENT_LINE $5528 put move position on stack put it so, that we can load "d" directly from stack
COMMENT $552A Point to start of chargen bitmaps
FORCE_SYMBOL $552A FONT_START_A
COMMENT_LINE $552D start at position IN Char
FORCE_SYMBOL $5530 FONT_LENGTH
COMMENT_LINE $5535 if (x == FONT_START_A+5*FONT_LENGTH) -> reset and find new string line
COMMENT_LINE $5535 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $5535 POSITION "EXACT" PATCH assuming x pos is middle aligned,
COMMENT_LINE $5535 if that is a case we can use neg x pos as "opposite" string pos
COMMENT_LINE $5535 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $5535 we assume we ARE zeroing here!
COMMENT $5535 zero the integrators
COMMENT_LINE $5538 stb <VIA_port_a ; reset integrator offset
COMMENT_LINE $5538 lda #%10000010
COMMENT_LINE $5538 wait that zeroing surely has the desired effect!
COMMENT $5538 while waiting, zero offsets
FORCE_SYMBOL $5538 VIA_port_b
FORCE_NO_SYMBOL $553A
COMMENT $553D Store Y in D/A register
FORCE_SYMBOL $553D VIA_port_a
COMMENT $553F Blank low, zero high?
FORCE_NO_SYMBOL $553F
FORCE_SYMBOL $5541 VIA_cntl
COMMENT $5544 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $5544 VIA_port_b
COMMENT_LINE $5546 STA      <VIA_shift_reg               ;Clear shift regigster
COMMENT $5546 y must be set more than xx cycles on some vectrex
COMMENT $5547 Disable mux
FORCE_SYMBOL $5547 VIA_port_b
COMMENT $5549 Store X in D/A register
FORCE_SYMBOL $5549 VIA_port_a
COMMENT $554B enable timer
FORCE_SYMBOL $554B VIA_t1_cnt_hi
COMMENT $554D that many lines must be printed
FORCE_SYMBOL $554D BITMAP_LINES_TITLE
FORCE_SYMBOL $554F tmp2_lc
COMMENT $5554 in y always a savecopy of current u AFTER the offset
FORCE_NO_SYMBOL $5554
FORCE_SYMBOL $5556 it_xlinePrintOffset
FORCE_NO_SYMBOL $5559
FORCE_SYMBOL $555B VIA_int_flags
COMMENT_LINE $555F ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $555F zero is short, since we stay near center -> no wait loop!
COMMENT $555F zero the integrators
COMMENT $5562 store zeroing values to cntl
FORCE_SYMBOL $5562 VIA_cntl
COMMENT $5564 reset integrator offset
FORCE_SYMBOL $5564 VIA_port_a
COMMENT $5566 while waiting, zero offsets
FORCE_SYMBOL $5566 VIA_port_b
FORCE_SYMBOL $5569 VIA_port_b
FORCE_NO_SYMBOL $556B
FORCE_SYMBOL $556D it_xlinePrintOffset
COMMENT $5570 from now on "in move"
COMMENT $5570 Store Y in D/A register
FORCE_SYMBOL $5570 VIA_port_a
COMMENT $5572 Blank low, zero high?
FORCE_NO_SYMBOL $5572
FORCE_SYMBOL $5574 VIA_cntl
COMMENT $5577 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $5577 VIA_port_b
COMMENT_LINE $5579 STA      <VIA_shift_reg               ;Clear shift regigster
COMMENT $5579 y must be set more than xx cycles on some vectrex
COMMENT $557A Disable mux
FORCE_SYMBOL $557A VIA_port_b
COMMENT $557C Store X in D/A register
FORCE_SYMBOL $557C VIA_port_a
COMMENT $557E enable timer
FORCE_SYMBOL $557E VIA_t1_cnt_hi
FORCE_NO_SYMBOL $5580
FORCE_SYMBOL $5582 SPACE_BETWEEN_LINES
COMMENT $5584 next line of font is this much further down
FORCE_NO_SYMBOL $5584
FORCE_NO_SYMBOL $558B
FORCE_SYMBOL $558D SPACE_BETWEEN_STRINGS
COMMENT $558F next line of font is this much further down
FORCE_NO_SYMBOL $558F
COMMENT_LINE $5591 somehow get next x offset!
FORCE_NO_SYMBOL $5595
FORCE_SYMBOL $5597 it_xlinePrintOffset
FORCE_NO_SYMBOL $559A
COMMENT_LINE $559E when using higher scale for screen positioing - adjust these waits!
COMMENT $559E uses S register for a PSHS wait!
COMMENT $559E wait 16 cycles
COMMENT $55A2 wait 16 cycles
COMMENT $55A6 wait 2 cycles
COMMENT $55A7 wait 2 cycles
COMMENT_LINE $55A8 tfr      a,a                            ; 6 WAIT
COMMENT_LINE $55A8 tfr      a,a                            ; 6 WAIT
COMMENT_LINE $55A8 nop      2                              ; 4 WAIT
COMMENT_LINE $55A8 nop      10                             ; 20 WAIT
COMMENT $55A8 preload values ;a?AUX: b?ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
FORCE_NO_SYMBOL $55A8
COMMENT $55AB ramp off/on set mux to channel 1
FORCE_SYMBOL $55AB VIA_port_b
COMMENT $55AD Shift reg mode = 110 (shift out under system clock), T1 PB7 disabled, one shot mode
FORCE_SYMBOL $55AD VIA_aux_cntl
COMMENT $55AF Clear D/A output
FORCE_SYMBOL $55AF VIA_port_a
FORCE_SYMBOL $55B1 VIA_port_b
COMMENT $55B3 if not done on a real vectrex - uper lines end up slighjtly diagonal
COMMENT $55B4 Disable mux
FORCE_SYMBOL $55B4 VIA_port_b
COMMENT $55B9 Send it to the D/A
FORCE_SYMBOL $55B9 VIA_port_a
COMMENT $55BB [4]enable RAMP, disable mux (start moving)
FORCE_SYMBOL $55BB VIA_port_b
COMMENT $55BD Get next character
COMMENT $55BF Get bitmap from chargen table
COMMENT $55C1 Save in shift register
FORCE_SYMBOL $55C1 VIA_shift_reg
COMMENT $55C3 Get next character
COMMENT $55C5 Go back if not terminator
COMMENT $55C7 restore aux settings and zero
FORCE_NO_SYMBOL $55C7
COMMENT $55CA T1?PB7 enabled
FORCE_SYMBOL $55CA VIA_aux_cntl
COMMENT_LINE $55CC zero is short, since we stay near center -> no wait loop!
COMMENT_LINE $55CC zero was done by last printing
COMMENT $55CC zero the integrators
COMMENT_LINE $55CF stb <VIA_cntl ; store zeroing values to cntl
COMMENT $55CF reset integrator offset
FORCE_SYMBOL $55CF VIA_port_a
COMMENT $55D1 while waiting, zero integrators (enable mux to "y")
FORCE_SYMBOL $55D1 VIA_port_b
COMMENT $55D4 disable mux
FORCE_SYMBOL $55D4 VIA_port_b
COMMENT $55D6 load position
FORCE_NO_SYMBOL $55D6
FORCE_SYMBOL $55D8 it_xlinePrintOffset
COMMENT $55DB move there, from now on "in move"
COMMENT $55DB Store Y in D/A register
FORCE_SYMBOL $55DB VIA_port_a
COMMENT $55DD Blank low, zero high?
FORCE_NO_SYMBOL $55DD
FORCE_SYMBOL $55DF VIA_cntl
COMMENT $55E2 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $55E2 VIA_port_b
COMMENT_LINE $55E4 STA      <VIA_shift_reg               ;Clear shift regigster
COMMENT $55E4 y must be set more than xx cycles on some vectrex
COMMENT $55E5 Disable mux
FORCE_SYMBOL $55E5 VIA_port_b
COMMENT $55E7 Store X in D/A register
FORCE_SYMBOL $55E7 VIA_port_a
COMMENT $55E9 enable timer
FORCE_SYMBOL $55E9 VIA_t1_cnt_hi
COMMENT $55EB test if line max reached, if so jump out of endless loop (out of macro)
FORCE_SYMBOL $55EB tmp2_lc
COMMENT $55F0 ensure spacing between bitmap lines
FORCE_NO_SYMBOL $55F0
FORCE_SYMBOL $55F2 SPACE_BETWEEN_LINES
COMMENT $55F4 next line of font is this much further down
FORCE_NO_SYMBOL $55F4
COMMENT $55F6 ensure FONT is pointing to "row" of bitmap
FORCE_SYMBOL $55F6 FONT_LENGTH
COMMENT $55F9 if end -> start next String
COMMENT $55FE if one before end, ensure, next time position is updated wirh "in between string" spacing
FORCE_NO_SYMBOL $5603
FORCE_SYMBOL $5605 it_xlinePrintOffset
FORCE_NO_SYMBOL $5608
FORCE_SYMBOL $560A SPACE_BETWEEN_STRINGS
COMMENT $560C next line of font is this much further down
FORCE_NO_SYMBOL $560C
COMMENT $560E reset u
FORCE_NO_SYMBOL $560E
COMMENT_LINE $5612 u is correct
COMMENT $5612 neg is end of list, value is xline offset, skip it!
COMMENT $5616 save current u
FORCE_NO_SYMBOL $5616
COMMENT $5618 start new font "row"
FORCE_SYMBOL $5618 FONT_START_A
COMMENT $561B WAIT
COMMENT_LINE $561D waiting for timer to expire
COMMENT $561D preload values ;a?AUX: b?ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
FORCE_NO_SYMBOL $561D
COMMENT $5620 ramp off/on set mux to channel 1
FORCE_SYMBOL $5620 VIA_port_b
COMMENT $5622 Shift reg mode = 110 (shift out under system clock), T1 PB7 disabled, one shot mode
FORCE_SYMBOL $5622 VIA_aux_cntl
COMMENT $5624 Clear D/A output
FORCE_SYMBOL $5624 VIA_port_a
FORCE_SYMBOL $5626 VIA_port_b
COMMENT $5628 if not done on a real vectrex - uper lines end up slighjtly diagonal
COMMENT $5629 Disable mux
FORCE_SYMBOL $5629 VIA_port_b
COMMENT $562E Send it to the D/A
FORCE_SYMBOL $562E VIA_port_a
COMMENT $5630 [4]enable RAMP, disable mux (start moving)
FORCE_SYMBOL $5630 VIA_port_b
COMMENT $5632 Get next character
COMMENT $5634 Get bitmap from chargen table
COMMENT $5636 Save in shift register
FORCE_SYMBOL $5636 VIA_shift_reg
COMMENT $5638 Get next character
COMMENT $563A Go back if not terminator
COMMENT $563C restore aux settings and zero
FORCE_NO_SYMBOL $563C
COMMENT $563F T1?PB7 enabled
FORCE_SYMBOL $563F VIA_aux_cntl
COMMENT_LINE $5643 zero
COMMENT $5644 ensure timer is finished, otherwise we leave our trusty bank 0
FORCE_NO_SYMBOL $5644
FORCE_SYMBOL $5646 VIA_int_flags
FORCE_SYMBOL $564A VIA_shift_reg
COMMENT $564C all done, correct stack
COMMENT_LINE $564E end if string list encountered
COMMENT $564E ensure timer is finished, otherwise we leave our trusty bank 0
FORCE_NO_SYMBOL $564E
FORCE_SYMBOL $5650 VIA_int_flags
COMMENT $5654 [2]disable mux, disable ramp
FORCE_NO_SYMBOL $5654
COMMENT $5657 T1?PB7 enabled
FORCE_SYMBOL $5657 VIA_aux_cntl
COMMENT $5659 all done, correct stack
COMMENT_LINE $565B ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $565B ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $565B ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $565B scroller
FORCE_SYMBOL $565B it_stringCounter
FORCE_SYMBOL $565E it_lineCounter
FORCE_SYMBOL $5661 it_linePrintOffset
FORCE_NO_SYMBOL $5665
FORCE_NO_SYMBOL $5669
FORCE_SYMBOL $566C jsrBank3to2
COMMENT $566F 30;28 ; scale used for positioning of scroller (strength is maxed $) changing -> waits in scroller must be adjusted
FORCE_NO_SYMBOL $566F
FORCE_SYMBOL $5671 VIA_t1_cnt_lo
FORCE_SYMBOL $5673 Reset_Pen
FORCE_SYMBOL $5676 Intensity_5F
COMMENT $5679 $7f90;$7f81 ; move to
FORCE_NO_SYMBOL $5679
FORCE_SYMBOL $567C it_linePrintOffset
FORCE_SYMBOL $5681 IntroTextScrollPointers
FORCE_SYMBOL $5684 it_stringCounter
FORCE_SYMBOL $568C it_lineCounter
FORCE_SYMBOL $568F printStringList_25_Sync_direct
COMMENT $5695 decrease scroller each 3rd round
FORCE_NO_SYMBOL $5695
FORCE_SYMBOL $5699 it_linePrintOffset
FORCE_SYMBOL $569E it_lineCounter
FORCE_SYMBOL $56A2 FONT_HEIGHT
FORCE_SYMBOL $56A7 it_linePrintOffset
FORCE_SYMBOL $56AA SPACE_BETWEEN_STRINGS
FORCE_SYMBOL $56AC it_linePrintOffset
FORCE_SYMBOL $56AF it_stringCounter
COMMENT $56B3 number of max string lines printed at the moment (should be determined somehow)
FORCE_SYMBOL $56B3 MAX_STRING_NO_DISPLAY
FORCE_SYMBOL $56BA it_stringCounter
FORCE_SYMBOL $56BD it_lineCounter
FORCE_SYMBOL $56C1 demoRunningFlag
FORCE_SYMBOL $56C5 it_linePrintOffset
FORCE_SYMBOL $56C8 SPACE_BETWEEN_LINES
FORCE_SYMBOL $56CA it_linePrintOffset
COMMENT_LINE $56CE pointers are only needed/used in determining the start of the printing
COMMENT_LINE $56CE the text itself must be continuous from the
COMMENT_LINE $56CE start pointer passed to the scroll function
COMMENT_LINE $57DC line18_ita          db       NONE_CHAR, " ADDITIONAL",$80
COMMENT_LINE $57DC line19_ita          db       NONE_CHAR, "    GFX",$80
COMMENT_LINE $57DC line20_ita          db       HALF_CHAR, "    BY",$80
COMMENT_LINE $57DC line51_ita          db       HALF_CHAR, " SELANSKI",$80
COMMENT_LINE $5821 line35_it           db       HALF_CHAR, "   ALEX",$80
COMMENT_LINE $5821 line36_it           db       HALF_CHAR, "  THOMAS",$80
COMMENT_LINE $5821 line37_it           db       NONE_CHAR, "VECTREXMAD!",$80
COMMENT_LINE $5821 line38_it           db       NONE_CHAR, "  KRISTOF",$80
COMMENT_LINE $5821 line39_it           db       HALF_CHAR, "  SASCHA",$80
COMMENT_LINE $5835 line42_it           db       HALF_CHAR, " CHRIS M.",$80
COMMENT_LINE $5835 line43_it           db       HALF_CHAR, " CHRIS T.",$80
COMMENT_LINE $5835 line44_it           db       HALF_CHAR, " CHRIS R.",$80
COMMENT_LINE $5835 line45_it           db       NONE_CHAR, "  RICHARD",$80
COMMENT_LINE $5835 line46_it           db       NONE_CHAR, "   GAUZE",$80
COMMENT_LINE $5835 line47_it           db       HALF_CHAR, "  GEORGE",$80
COMMENT_LINE $5835 line48_it           db       HALF_CHAR, "   CLAY",$80
COMMENT_LINE $5835 line49_it           db       HALF_CHAR, "   JOHN",$80
COMMENT_LINE $5835 line50_it           db       HALF_CHAR, "   JUAN",$80
COMMENT_LINE $5835 line51_it           db       HALF_CHAR, " SELANSKI",$80
COMMENT_LINE $5835 line52_it           db       NONE_CHAR, "VECTREXROLI",$80
COMMENT_LINE $5853 line52_4_it         db       HALF_CHAR, "   TONY",$80
COMMENT_LINE $5859 line52a1_it         db       NONE_CHAR, "  SPECIAL",$80
COMMENT_LINE $5859 line52a2_it         db       HALF_CHAR, "  THANKS",$80
COMMENT_LINE $5859 line52a3_it         db       HALF_CHAR, " FOR HELP",$80
COMMENT_LINE $5859 line52a4_it         db       NONE_CHAR, "AND TESTING",$80
COMMENT_LINE $5859 line52a_it          db       NONE_CHAR, " ",$80
COMMENT_LINE $5859 line52c_it          db       HALF_CHAR, "  HELMUT",$80
COMMENT_LINE $5859 line52d_it          db       HALF_CHAR, "  JEROME",$80
COMMENT_LINE $5859 line52e_it          db       NONE_CHAR, "    VTK",$80
COMMENT_LINE $5859 line52f_it          db       NONE_CHAR, "    NIC",$80
COMMENT_LINE $5859 line52g_it          db       HALF_CHAR, "   PEER",$80
COMMENT_LINE $5859 line53_it           db       NONE_CHAR, " ",$80
COMMENT_LINE $5859 line54_it           db       NONE_CHAR, " ",$80
COMMENT $58A9 = end
COMMENT_LINE $58AA ***************************************************************************
COMMENT_LINE $58AA ** Init
COMMENT_LINE $58AA ***************************************************************************
FORCE_NO_SYMBOL $58AA
FORCE_SYMBOL $58AD demoRunningFlag
FORCE_SYMBOL $58B0 firstDemoDone
COMMENT $58BC always add 8 later
FORCE_SYMBOL $58BF lastDemoPointer
FORCE_NO_SYMBOL $58C2
FORCE_SYMBOL $58C4 random_x
FORCE_NO_SYMBOL $58C7
FORCE_SYMBOL $58C9 random_a
FORCE_SYMBOL $58CC VIA_t2_lo
FORCE_SYMBOL $58CE random_b
FORCE_SYMBOL $58D1 VIA_t1_cnt_lo
FORCE_SYMBOL $58D3 random_c
COMMENT $58D6 call random once
FORCE_SYMBOL $58D6 random_x
FORCE_SYMBOL $58D9 random_a
FORCE_SYMBOL $58DC random_b
FORCE_SYMBOL $58DF random_x
FORCE_SYMBOL $58E2 random_a
FORCE_SYMBOL $58E5 random_b
FORCE_SYMBOL $58E8 random_b
FORCE_SYMBOL $58EC random_a
FORCE_SYMBOL $58EF random_c
FORCE_SYMBOL $58F2 random_c
FORCE_NO_SYMBOL $58F5
FORCE_SYMBOL $58F8 jsrBank3to0T1
COMMENT_LINE $58FC ***************************************************************************
COMMENT_LINE $58FC ***************************************************************************
COMMENT_LINE $58FC ............................
COMMENT_LINE $58FC .. Play Demos
COMMENT_LINE $58FC three demos can be played at any given time
COMMENT_LINE $58FC there are pointers to the demo structure kept in
COMMENT_LINE $58FC currentDemo1 ds 2
COMMENT_LINE $58FC currentDemo2 ds 2
COMMENT_LINE $58FC currentDemo3 ds 2
COMMENT_LINE $58FC If a pointer is 0, then the demo is "done"
COMMENT_LINE $58FC There is an active demo counter "demoRunningFlag"
COMMENT_LINE $58FC if that reaches zero - then new demos are selected
COMMENT_LINE $58FC but only if it reaches zero!
COMMENT_LINE $58FC each demo can = the "demoFlag" = 0, when playing
COMMENT_LINE $58FC after the demo is called - it will then be discarded
COMMENT_LINE $58FC the demos itself are kept in a structure:
COMMENT_LINE $58FC struct   Demo
COMMENT_LINE $58FC ds       BANK,2                       ; D current position ; BUG TARGET POS
COMMENT_LINE $58FC ds       INITROUTINE,2                ; D ; BUG TARGET POS
COMMENT_LINE $58FC ds       SUBROUTINE,2                 ; D ; BUG TARGET POS
COMMENT_LINE $58FC ds       CYCLES,2                     ; PC
COMMENT_LINE $58FC end struct
COMMENT_LINE $58FC If all 4 values are 0,0,0,0 - then the list has reached its end - and will start on top again
COMMENT_LINE $58FC todo: randomize
COMMENT_LINE $58FC ............................
COMMENT_LINE $58FC ***************************************************************************
COMMENT_LINE $58FC ** Overall routine + empty demo handling
COMMENT_LINE $58FC ***************************************************************************
FORCE_SYMBOL $58FC demoRunningFlag
COMMENT_LINE $5901 todo init demo
COMMENT_LINE $5901 lll
COMMENT_LINE $5901 for now fixed demos
FORCE_SYMBOL $5901 lastDemoPointer
COMMENT $5904 jump to next demo
FORCE_SYMBOL $5904 DemoListEntry
FORCE_SYMBOL $5906 BANK
FORCE_SYMBOL $5908 INITROUTINE
FORCE_SYMBOL $590A SUBROUTINE
FORCE_SYMBOL $590C CYCLES
COMMENT $5910 reset - all demos have been played
FORCE_SYMBOL $5910 Demos
FORCE_SYMBOL $5913 demoRunningFlag
FORCE_SYMBOL $5916 lastDemoPointer
FORCE_SYMBOL $5919 demo1Data
FORCE_SYMBOL $591D POINTER
COMMENT_LINE $5921 todo
COMMENT_LINE $5921 run more then one demo at a time
COMMENT_LINE $5921 build "random" demos
COMMENT_LINE $5921 ***************************************************************************
COMMENT_LINE $5921 ** run demos, handling of finished flag
COMMENT_LINE $5921 ***************************************************************************
FORCE_SYMBOL $5921 demo1Data
FORCE_SYMBOL $5925 POINTER
FORCE_NO_SYMBOL $5929
FORCE_SYMBOL $592B demoFlag
FORCE_SYMBOL $5930 demoFlag
FORCE_SYMBOL $5935 demoRunningFlag
FORCE_NO_SYMBOL $5938
COMMENT $593B y is not ensured anymore here!, running the demo may destroy it!
FORCE_SYMBOL $593E demo2Data
FORCE_SYMBOL $5942 POINTER
FORCE_NO_SYMBOL $5946
FORCE_SYMBOL $5948 demoFlag
FORCE_SYMBOL $594D demoFlag
FORCE_SYMBOL $5952 demoRunningFlag
FORCE_NO_SYMBOL $5955
COMMENT $5958 y is not ensured anymore here!, running the demo may destroy it!
FORCE_SYMBOL $595B demo3Data
FORCE_SYMBOL $595F POINTER
FORCE_NO_SYMBOL $5963
FORCE_SYMBOL $5965 demoFlag
FORCE_SYMBOL $596A demoFlag
FORCE_SYMBOL $596F demoRunningFlag
FORCE_NO_SYMBOL $5972
COMMENT $5975 y is not ensured anymore here!, running the demo may destroy it!
COMMENT_LINE $5979 ***************************************************************************
COMMENT_LINE $5979 ** chose bank to run
COMMENT_LINE $5979 ***************************************************************************
COMMENT_LINE $5979 ............................
COMMENT_LINE $5979 .. Run Demos
COMMENT_LINE $5979 ............................
COMMENT_LINE $5979 on Entry:
COMMENT_LINE $5979 Y is always a pointer to the RAM of the demo (1,2,3)
COMMENT_LINE $5979 X is always a pointer to the ROM list entry of demo lists
FORCE_SYMBOL $5979 BANK
FORCE_NO_SYMBOL $597B
FORCE_NO_SYMBOL $597F
FORCE_NO_SYMBOL $5983
FORCE_NO_SYMBOL $5987
COMMENT_LINE $598B error - but don't bother
FORCE_SYMBOL $598C SUBROUTINE
FORCE_SYMBOL $598F SUBROUTINE
FORCE_SYMBOL $5991 jsrBank3to2
FORCE_SYMBOL $5994 SUBROUTINE
FORCE_SYMBOL $5996 jsrBank3to1T1
FORCE_SYMBOL $5999 SUBROUTINE
FORCE_SYMBOL $599B jsrBank3to0T1
COMMENT_LINE $599E ***************************************************************************
COMMENT_LINE $599E ** initialize a demo, if necessary
COMMENT_LINE $599E ***************************************************************************
COMMENT_LINE $599E ............................
COMMENT_LINE $599E .. Init Demos
COMMENT_LINE $599E on Entry:
COMMENT_LINE $599E Y is always a pointer to the RAM of the demo (1,2,3)
COMMENT_LINE $599E X is always a pointer to the ROM list entry of demo lists
COMMENT_LINE $599E ............................
FORCE_SYMBOL $599E LISTDATA
FORCE_SYMBOL $59A0 DATA
FORCE_SYMBOL $59A2 BANK
FORCE_NO_SYMBOL $59A4
FORCE_NO_SYMBOL $59A8
FORCE_NO_SYMBOL $59AC
FORCE_NO_SYMBOL $59B0
FORCE_SYMBOL $59B5 INITROUTINE
COMMENT $59B7 == 0, then no init routine
FORCE_NO_SYMBOL $59B9
FORCE_SYMBOL $59BB INITROUTINE
FORCE_SYMBOL $59BF jsrBank3to2
FORCE_SYMBOL $59C2 INITROUTINE
FORCE_SYMBOL $59C6 jsrBank3to1T1
FORCE_SYMBOL $59C9 INITROUTINE
FORCE_SYMBOL $59CD jsrBank3to0T1
COMMENT_LINE $59D0 ***************************************************************************
COMMENT_LINE $59D8 ***************************************************************************
COMMENT_LINE $59D8 ** The actual demo list
COMMENT_LINE $59D8 ** bank information supplied by Vide
COMMENT_LINE $59D8 ***************************************************************************
COMMENT $5AD2 0,0,0,0 = end of list
RANGE $0000-$5B54 DP $D0
RANGE $0000-$000B CHAR_DATA 11
RANGE $000B-$000D DW_DATA 1
RANGE $000D-$0011 DB_DATA 4
RANGE $0011-$0017 CHAR_DATA 6
RANGE $0017-$0018 DB_DATA 1
RANGE $0018-$03A2 CODE
RANGE $03A2-$03A3 DB_DATA 1
RANGE $03A3-$03A4 DB_DATA 1
RANGE $03A4-$03A5 DB_DATA 1
RANGE $03A5-$03A6 DB_DATA 1
RANGE $03A6-$03A7 DB_DATA 1
RANGE $03A7-$03A8 DB_DATA 1
RANGE $03A8-$03A9 DB_DATA 1
RANGE $03A9-$03AA DB_DATA 1
RANGE $03AA-$03AB DB_DATA 1
RANGE $03AB-$03AC DB_DATA 1
RANGE $03AC-$03AD DB_DATA 1
RANGE $03AD-$03AE DB_DATA 1
RANGE $03AE-$03AF DB_DATA 1
RANGE $03AF-$03B0 DB_DATA 1
RANGE $03B0-$03B1 DB_DATA 1
RANGE $03B1-$03B2 DB_DATA 1
RANGE $03B2-$03B3 DB_DATA 1
RANGE $03B3-$03B4 DB_DATA 1
RANGE $03B4-$03B5 DB_DATA 1
RANGE $03B5-$03B6 DB_DATA 1
RANGE $03B6-$059A CODE
RANGE $059A-$05C8 DB_DATA 46
RANGE $05C8-$05DC DB_DATA 20
RANGE $05DC-$05E0 DB_DATA 4
RANGE $05E0-$05F4 DB_DATA 20
RANGE $05F4-$05F8 DB_DATA 4
RANGE $05F8-$060C DB_DATA 20
RANGE $060C-$0610 DB_DATA 4
RANGE $0610-$0624 DB_DATA 20
RANGE $0624-$0628 DB_DATA 4
RANGE $0628-$063C DB_DATA 20
RANGE $063C-$0640 DB_DATA 4
RANGE $0640-$066A DB_DATA 42
RANGE $066A-$067E DB_DATA 20
RANGE $067E-$0682 DB_DATA 4
RANGE $0682-$0696 DB_DATA 20
RANGE $0696-$069A DB_DATA 4
RANGE $069A-$06AE DB_DATA 20
RANGE $06AE-$06B2 DB_DATA 4
RANGE $06B2-$06DC DB_DATA 42
RANGE $06DC-$06F0 DB_DATA 20
RANGE $06F0-$06F4 DB_DATA 4
RANGE $06F4-$0708 DB_DATA 20
RANGE $0708-$070C DB_DATA 4
RANGE $070C-$0720 DB_DATA 20
RANGE $0720-$0724 DB_DATA 4
RANGE $0724-$0738 DB_DATA 20
RANGE $0738-$073C DB_DATA 4
RANGE $073C-$0750 DB_DATA 20
RANGE $0750-$0754 DB_DATA 4
RANGE $0754-$0772 DB_DATA 30
RANGE $0772-$0796 DB_DATA 36
RANGE $0796-$07C0 DB_DATA 42
RANGE $07C0-$07EE DB_DATA 46
RANGE $07EE-$08DE CODE
RANGE $08DE-$08E0 DB_DATA 2
RANGE $08E0-$08E2 DB_DATA 2
RANGE $08E2-$08E4 DB_DATA 2
RANGE $08E4-$08E6 DB_DATA 2
RANGE $08E6-$08E8 DB_DATA 2
RANGE $08E8-$08EA DB_DATA 2
RANGE $08EA-$08EC DB_DATA 2
RANGE $08EC-$08EE DB_DATA 2
RANGE $08EE-$08F0 DB_DATA 2
RANGE $08F0-$08F2 DB_DATA 2
RANGE $08F2-$08F4 DB_DATA 2
RANGE $08F4-$08F6 DB_DATA 2
RANGE $08F6-$08F8 DB_DATA 2
RANGE $08F8-$08FA DB_DATA 2
RANGE $08FA-$08FC DB_DATA 2
RANGE $08FC-$08FE DB_DATA 2
RANGE $08FE-$0900 DB_DATA 2
RANGE $0900-$0902 DB_DATA 2
RANGE $0902-$0904 DB_DATA 2
RANGE $0904-$0906 DB_DATA 2
RANGE $0906-$0908 DB_DATA 2
RANGE $0908-$090A DB_DATA 2
RANGE $090A-$090C DB_DATA 2
RANGE $090C-$090E DB_DATA 2
RANGE $090E-$0910 DB_DATA 2
RANGE $0910-$0912 DB_DATA 2
RANGE $0912-$0914 DB_DATA 2
RANGE $0914-$0916 DB_DATA 2
RANGE $0916-$0918 DB_DATA 2
RANGE $0918-$091A DB_DATA 2
RANGE $091A-$091C DB_DATA 2
RANGE $091C-$091E DB_DATA 2
RANGE $091E-$0920 DB_DATA 2
RANGE $0920-$0922 DB_DATA 2
RANGE $0922-$0924 DB_DATA 2
RANGE $0924-$0926 DB_DATA 2
RANGE $0926-$0928 DB_DATA 2
RANGE $0928-$092A DB_DATA 2
RANGE $092A-$092C DB_DATA 2
RANGE $092C-$092E DB_DATA 2
RANGE $092E-$0930 DB_DATA 2
RANGE $0930-$0932 DB_DATA 2
RANGE $0932-$0934 DB_DATA 2
RANGE $0934-$0936 DB_DATA 2
RANGE $0936-$0938 DB_DATA 2
RANGE $0938-$093A DB_DATA 2
RANGE $093A-$093C DB_DATA 2
RANGE $093C-$093E DB_DATA 2
RANGE $093E-$0940 DB_DATA 2
RANGE $0940-$0942 DB_DATA 2
RANGE $0942-$0944 DB_DATA 2
RANGE $0944-$0946 DB_DATA 2
RANGE $0946-$0948 DB_DATA 2
RANGE $0948-$094A DB_DATA 2
RANGE $094A-$094C DB_DATA 2
RANGE $094C-$094E DB_DATA 2
RANGE $094E-$0950 DB_DATA 2
RANGE $0950-$0952 DB_DATA 2
RANGE $0952-$0954 DB_DATA 2
RANGE $0954-$0956 DB_DATA 2
RANGE $0956-$0958 DB_DATA 2
RANGE $0958-$095A DB_DATA 2
RANGE $095A-$095C DB_DATA 2
RANGE $095C-$095E DB_DATA 2
RANGE $095E-$0960 DB_DATA 2
RANGE $0960-$0962 DB_DATA 2
RANGE $0962-$0964 DB_DATA 2
RANGE $0964-$0966 DB_DATA 2
RANGE $0966-$0968 DB_DATA 2
RANGE $0968-$096A DB_DATA 2
RANGE $096A-$096C DB_DATA 2
RANGE $096C-$096E DB_DATA 2
RANGE $096E-$0970 DB_DATA 2
RANGE $0970-$0972 DB_DATA 2
RANGE $0972-$0974 DB_DATA 2
RANGE $0974-$0976 DB_DATA 2
RANGE $0976-$0978 DB_DATA 2
RANGE $0978-$097A DB_DATA 2
RANGE $097A-$097C DB_DATA 2
RANGE $097C-$097E DB_DATA 2
RANGE $097E-$0980 DB_DATA 2
RANGE $0980-$0982 DB_DATA 2
RANGE $0982-$0984 DB_DATA 2
RANGE $0984-$0986 DB_DATA 2
RANGE $0986-$0988 DB_DATA 2
RANGE $0988-$098A DB_DATA 2
RANGE $098A-$098C DB_DATA 2
RANGE $098C-$098E DB_DATA 2
RANGE $098E-$0990 DB_DATA 2
RANGE $0990-$0992 DB_DATA 2
RANGE $0992-$0994 DB_DATA 2
RANGE $0994-$0996 DB_DATA 2
RANGE $0996-$0998 DB_DATA 2
RANGE $0998-$099A DB_DATA 2
RANGE $099A-$099C DB_DATA 2
RANGE $099C-$099E DB_DATA 2
RANGE $099E-$09A0 DB_DATA 2
RANGE $09A0-$09A2 DB_DATA 2
RANGE $09A2-$09A4 DB_DATA 2
RANGE $09A4-$09A6 DB_DATA 2
RANGE $09A6-$09A8 DB_DATA 2
RANGE $09A8-$09AA DB_DATA 2
RANGE $09AA-$09AC DB_DATA 2
RANGE $09AC-$09AE DB_DATA 2
RANGE $09AE-$09B0 DB_DATA 2
RANGE $09B0-$09B2 DB_DATA 2
RANGE $09B2-$09B4 DB_DATA 2
RANGE $09B4-$09B6 DB_DATA 2
RANGE $09B6-$09B8 DB_DATA 2
RANGE $09B8-$09BA DB_DATA 2
RANGE $09BA-$09BC DB_DATA 2
RANGE $09BC-$09BE DB_DATA 2
RANGE $09BE-$09C0 DB_DATA 2
RANGE $09C0-$09C2 DB_DATA 2
RANGE $09C2-$09C4 DB_DATA 2
RANGE $09C4-$09C6 DB_DATA 2
RANGE $09C6-$09C8 DB_DATA 2
RANGE $09C8-$09CA DB_DATA 2
RANGE $09CA-$09CC DB_DATA 2
RANGE $09CC-$09CE DB_DATA 2
RANGE $09CE-$09D0 DB_DATA 2
RANGE $09D0-$09D2 DB_DATA 2
RANGE $09D2-$09D4 DB_DATA 2
RANGE $09D4-$09D6 DB_DATA 2
RANGE $09D6-$09D8 DB_DATA 2
RANGE $09D8-$09DA DB_DATA 2
RANGE $09DA-$09DC DB_DATA 2
RANGE $09DC-$09DE DB_DATA 2
RANGE $09DE-$09E0 DB_DATA 2
RANGE $09E0-$09E2 DB_DATA 2
RANGE $09E2-$09E4 DB_DATA 2
RANGE $09E4-$09E6 DB_DATA 2
RANGE $09E6-$09E8 DB_DATA 2
RANGE $09E8-$09EA DB_DATA 2
RANGE $09EA-$09EC DB_DATA 2
RANGE $09EC-$09EE DB_DATA 2
RANGE $09EE-$09F0 DB_DATA 2
RANGE $09F0-$09F2 DB_DATA 2
RANGE $09F2-$09F4 DB_DATA 2
RANGE $09F4-$09F6 DB_DATA 2
RANGE $09F6-$09F8 DB_DATA 2
RANGE $09F8-$09FA DB_DATA 2
RANGE $09FA-$09FC DB_DATA 2
RANGE $09FC-$09FE DB_DATA 2
RANGE $09FE-$0A00 DB_DATA 2
RANGE $0A00-$0A02 DB_DATA 2
RANGE $0A02-$0A04 DB_DATA 2
RANGE $0A04-$0A06 DB_DATA 2
RANGE $0A06-$0A08 DB_DATA 2
RANGE $0A08-$0A0A DB_DATA 2
RANGE $0A0A-$0A0C DB_DATA 2
RANGE $0A0C-$0A0E DB_DATA 2
RANGE $0A0E-$0A10 DB_DATA 2
RANGE $0A10-$0A12 DB_DATA 2
RANGE $0A12-$0A14 DB_DATA 2
RANGE $0A14-$0A16 DB_DATA 2
RANGE $0A16-$0A18 DB_DATA 2
RANGE $0A18-$0A1A DB_DATA 2
RANGE $0A1A-$0A1C DB_DATA 2
RANGE $0A1C-$0A1E DB_DATA 2
RANGE $0A1E-$0A20 DB_DATA 2
RANGE $0A20-$0A22 DB_DATA 2
RANGE $0A22-$0A24 DB_DATA 2
RANGE $0A24-$0A26 DB_DATA 2
RANGE $0A26-$0A28 DB_DATA 2
RANGE $0A28-$0A2A DB_DATA 2
RANGE $0A2A-$0A2C DB_DATA 2
RANGE $0A2C-$0A2E DB_DATA 2
RANGE $0A2E-$0A30 DB_DATA 2
RANGE $0A30-$0A32 DB_DATA 2
RANGE $0A32-$0A34 DB_DATA 2
RANGE $0A34-$0A36 DB_DATA 2
RANGE $0A36-$0A38 DB_DATA 2
RANGE $0A38-$0A3A DB_DATA 2
RANGE $0A3A-$0A3C DB_DATA 2
RANGE $0A3C-$0A3E DB_DATA 2
RANGE $0A3E-$0A40 DB_DATA 2
RANGE $0A40-$0A42 DB_DATA 2
RANGE $0A42-$0A44 DB_DATA 2
RANGE $0A44-$0A46 DB_DATA 2
RANGE $0A46-$0A48 DB_DATA 2
RANGE $0A48-$0A4A DB_DATA 2
RANGE $0A4A-$0A4C DB_DATA 2
RANGE $0A4C-$0A4E DB_DATA 2
RANGE $0A4E-$0A50 DB_DATA 2
RANGE $0A50-$0A52 DB_DATA 2
RANGE $0A52-$0A54 DB_DATA 2
RANGE $0A54-$0A56 DB_DATA 2
RANGE $0A56-$0A58 DB_DATA 2
RANGE $0A58-$0A5A DB_DATA 2
RANGE $0A5A-$0A5C DB_DATA 2
RANGE $0A5C-$0A5E DB_DATA 2
RANGE $0A5E-$0A60 DB_DATA 2
RANGE $0A60-$0A62 DB_DATA 2
RANGE $0A62-$0A64 DB_DATA 2
RANGE $0A64-$0A66 DB_DATA 2
RANGE $0A66-$0A68 DB_DATA 2
RANGE $0A68-$0A6A DB_DATA 2
RANGE $0A6A-$0A6C DB_DATA 2
RANGE $0A6C-$0A6E DB_DATA 2
RANGE $0A6E-$0A70 DB_DATA 2
RANGE $0A70-$0A72 DB_DATA 2
RANGE $0A72-$0A74 DB_DATA 2
RANGE $0A74-$0A76 DB_DATA 2
RANGE $0A76-$0A78 DB_DATA 2
RANGE $0A78-$0A7A DB_DATA 2
RANGE $0A7A-$0A7C DB_DATA 2
RANGE $0A7C-$0A7E DB_DATA 2
RANGE $0A7E-$0A80 DB_DATA 2
RANGE $0A80-$0A82 DB_DATA 2
RANGE $0A82-$0A84 DB_DATA 2
RANGE $0A84-$0A86 DB_DATA 2
RANGE $0A86-$0A88 DB_DATA 2
RANGE $0A88-$0A8A DB_DATA 2
RANGE $0A8A-$0A8C DB_DATA 2
RANGE $0A8C-$0A8E DB_DATA 2
RANGE $0A8E-$0A90 DB_DATA 2
RANGE $0A90-$0A92 DB_DATA 2
RANGE $0A92-$0A94 DB_DATA 2
RANGE $0A94-$0A96 DB_DATA 2
RANGE $0A96-$0A98 DB_DATA 2
RANGE $0A98-$0A9A DB_DATA 2
RANGE $0A9A-$0A9C DB_DATA 2
RANGE $0A9C-$0A9E DB_DATA 2
RANGE $0A9E-$0AA0 DB_DATA 2
RANGE $0AA0-$0AA2 DB_DATA 2
RANGE $0AA2-$0AA4 DB_DATA 2
RANGE $0AA4-$0AA6 DB_DATA 2
RANGE $0AA6-$0AA8 DB_DATA 2
RANGE $0AA8-$0AAA DB_DATA 2
RANGE $0AAA-$0AAC DB_DATA 2
RANGE $0AAC-$0AAE DB_DATA 2
RANGE $0AAE-$0AB0 DB_DATA 2
RANGE $0AB0-$0AB2 DB_DATA 2
RANGE $0AB2-$0AB4 DB_DATA 2
RANGE $0AB4-$0AB6 DB_DATA 2
RANGE $0AB6-$0AB8 DB_DATA 2
RANGE $0AB8-$0ABA DB_DATA 2
RANGE $0ABA-$0ABC DB_DATA 2
RANGE $0ABC-$0ABE DB_DATA 2
RANGE $0ABE-$0AC0 DB_DATA 2
RANGE $0AC0-$0AC2 DB_DATA 2
RANGE $0AC2-$0AC4 DB_DATA 2
RANGE $0AC4-$0AC6 DB_DATA 2
RANGE $0AC6-$0AC8 DB_DATA 2
RANGE $0AC8-$0ACA DB_DATA 2
RANGE $0ACA-$0ACC DB_DATA 2
RANGE $0ACC-$0ACE DB_DATA 2
RANGE $0ACE-$0AD0 DB_DATA 2
RANGE $0AD0-$0AD2 DB_DATA 2
RANGE $0AD2-$0AD4 DB_DATA 2
RANGE $0AD4-$0AD6 DB_DATA 2
RANGE $0AD6-$0AD8 DB_DATA 2
RANGE $0AD8-$0ADA DB_DATA 2
RANGE $0ADA-$0ADC DB_DATA 2
RANGE $0ADC-$0ADE DB_DATA 2
RANGE $0ADE-$0CDD CODE
RANGE $0CDD-$0CDF DW_DATA 1
RANGE $0CDF-$0CE1 DW_DATA 1
RANGE $0CE1-$0CE3 DW_DATA 1
RANGE $0CE3-$0CE4 DB_DATA 1
RANGE $0CE4-$0CE5 DB_DATA 1
RANGE $0CE5-$0CE6 DB_DATA 1
RANGE $0CE6-$0CE7 DB_DATA 1
RANGE $0CE7-$0CE8 DB_DATA 1
RANGE $0CE8-$0CE9 DB_DATA 1
RANGE $0CE9-$0CEA DB_DATA 1
RANGE $0CEA-$0CEB DB_DATA 1
RANGE $0CEB-$0CEC DB_DATA 1
RANGE $0CEC-$0CEE DB_DATA 2
RANGE $0CEE-$0CF0 DB_DATA 2
RANGE $0CF0-$0CF2 DB_DATA 2
RANGE $0CF2-$0CF4 DB_DATA 2
RANGE $0CF4-$0CF5 DB_DATA 1
RANGE $0CF5-$0CF7 DW_DATA 1
RANGE $0CF7-$0CF8 DB_DATA 1
RANGE $0CF8-$0CFA DW_DATA 1
RANGE $0CFA-$0CFB DB_DATA 1
RANGE $0CFB-$0CFD DW_DATA 1
RANGE $0CFD-$0CFF DW_DATA 1
RANGE $0CFF-$0D01 DW_DATA 1
RANGE $0D01-$0D02 DB_DATA 1
RANGE $0D02-$0D03 DB_DATA 1
RANGE $0D03-$0D04 DB_DATA 1
RANGE $0D04-$0D05 DB_DATA 1
RANGE $0D05-$0D06 DB_DATA 1
RANGE $0D06-$0D07 DB_DATA 1
RANGE $0D07-$0D08 DB_DATA 1
RANGE $0D08-$0D09 DB_DATA 1
RANGE $0D09-$0D0A DB_DATA 1
RANGE $0D0A-$0D0C DB_DATA 2
RANGE $0D0C-$0D0E DB_DATA 2
RANGE $0D0E-$0D10 DB_DATA 2
RANGE $0D10-$0D12 DB_DATA 2
RANGE $0D12-$0D13 DB_DATA 1
RANGE $0D13-$0D15 DW_DATA 1
RANGE $0D15-$0D16 DB_DATA 1
RANGE $0D16-$0D18 DW_DATA 1
RANGE $0D18-$0D19 DB_DATA 1
RANGE $0D19-$0D1B DW_DATA 1
RANGE $0D1B-$0D1D DW_DATA 1
RANGE $0D1D-$0D1F DW_DATA 1
RANGE $0D1F-$0D20 DB_DATA 1
RANGE $0D20-$0D21 DB_DATA 1
RANGE $0D21-$0D22 DB_DATA 1
RANGE $0D22-$0D23 DB_DATA 1
RANGE $0D23-$0D24 DB_DATA 1
RANGE $0D24-$0D25 DB_DATA 1
RANGE $0D25-$0D26 DB_DATA 1
RANGE $0D26-$0D27 DB_DATA 1
RANGE $0D27-$0D28 DB_DATA 1
RANGE $0D28-$0D2A DB_DATA 2
RANGE $0D2A-$0D2C DB_DATA 2
RANGE $0D2C-$0D2E DB_DATA 2
RANGE $0D2E-$0D30 DB_DATA 2
RANGE $0D30-$0D31 DB_DATA 1
RANGE $0D31-$0D33 DW_DATA 1
RANGE $0D33-$0D34 DB_DATA 1
RANGE $0D34-$0D36 DW_DATA 1
RANGE $0D36-$0D37 DB_DATA 1
RANGE $0D37-$0D39 DW_DATA 1
RANGE $0D39-$0D3B DW_DATA 1
RANGE $0D3B-$0D3E DB_DATA 3
RANGE $0D3E-$0D41 DB_DATA 3
RANGE $0D41-$0D44 DB_DATA 3
RANGE $0D44-$0D47 DB_DATA 3
RANGE $0D47-$0D4A DB_DATA 3
RANGE $0D4A-$0D4D DB_DATA 3
RANGE $0D4D-$0D50 DB_DATA 3
RANGE $0D50-$0D53 DB_DATA 3
RANGE $0D53-$0D56 DB_DATA 3
RANGE $0D56-$0D59 DB_DATA 3
RANGE $0D59-$0D5C DB_DATA 3
RANGE $0D5C-$0D5F DB_DATA 3
RANGE $0D5F-$0D62 DB_DATA 3
RANGE $0D62-$0D65 DB_DATA 3
RANGE $0D65-$0D68 DB_DATA 3
RANGE $0D68-$0D6B DB_DATA 3
RANGE $0D6B-$0D6E DB_DATA 3
RANGE $0D6E-$0D71 DB_DATA 3
RANGE $0D71-$0D74 DB_DATA 3
RANGE $0D74-$0D77 DB_DATA 3
RANGE $0D77-$0D7A DB_DATA 3
RANGE $0D7A-$0D7D DB_DATA 3
RANGE $0D7D-$0D80 DB_DATA 3
RANGE $0D80-$0D83 DB_DATA 3
RANGE $0D83-$0D86 DB_DATA 3
RANGE $0D86-$0D89 DB_DATA 3
RANGE $0D89-$0D8C DB_DATA 3
RANGE $0D8C-$0D8F DB_DATA 3
RANGE $0D8F-$0D92 DB_DATA 3
RANGE $0D92-$0D95 DB_DATA 3
RANGE $0D95-$0D98 DB_DATA 3
RANGE $0D98-$0D9B DB_DATA 3
RANGE $0D9B-$0D9E DB_DATA 3
RANGE $0D9E-$0DA1 DB_DATA 3
RANGE $0DA1-$0DA4 DB_DATA 3
RANGE $0DA4-$0DA7 DB_DATA 3
RANGE $0DA7-$0DAA DB_DATA 3
RANGE $0DAA-$0DAD DB_DATA 3
RANGE $0DAD-$0DB0 DB_DATA 3
RANGE $0DB0-$0DB3 DB_DATA 3
RANGE $0DB3-$0DB6 DB_DATA 3
RANGE $0DB6-$0DB9 DB_DATA 3
RANGE $0DB9-$0DBC DB_DATA 3
RANGE $0DBC-$0DBF DB_DATA 3
RANGE $0DBF-$0DC2 DB_DATA 3
RANGE $0DC2-$0DC5 DB_DATA 3
RANGE $0DC5-$0DC8 DB_DATA 3
RANGE $0DC8-$0DCB DB_DATA 3
RANGE $0DCB-$0DCE DB_DATA 3
RANGE $0DCE-$0DD1 DB_DATA 3
RANGE $0DD1-$0DD4 DB_DATA 3
RANGE $0DD4-$0DD7 DB_DATA 3
RANGE $0DD7-$0DDA DB_DATA 3
RANGE $0DDA-$0DDD DB_DATA 3
RANGE $0DDD-$0DE0 DB_DATA 3
RANGE $0DE0-$0DE3 DB_DATA 3
RANGE $0DE3-$0DE6 DB_DATA 3
RANGE $0DE6-$0DE9 DB_DATA 3
RANGE $0DE9-$0DEC DB_DATA 3
RANGE $0DEC-$0DEF DB_DATA 3
RANGE $0DEF-$0DF2 DB_DATA 3
RANGE $0DF2-$0DF5 DB_DATA 3
RANGE $0DF5-$0DF8 DB_DATA 3
RANGE $0DF8-$0DF9 DB_DATA 1
RANGE $0DF9-$0DFB DW_DATA 1
RANGE $0DFB-$0DFD DW_DATA 1
RANGE $0DFD-$0E00 DB_DATA 3
RANGE $0E00-$0E03 DB_DATA 3
RANGE $0E03-$0E06 DB_DATA 3
RANGE $0E06-$0E09 DB_DATA 3
RANGE $0E09-$0E0C DB_DATA 3
RANGE $0E0C-$0E0F DB_DATA 3
RANGE $0E0F-$0E12 DB_DATA 3
RANGE $0E12-$0E15 DB_DATA 3
RANGE $0E15-$0E18 DB_DATA 3
RANGE $0E18-$0E1B DB_DATA 3
RANGE $0E1B-$0E1E DB_DATA 3
RANGE $0E1E-$0E21 DB_DATA 3
RANGE $0E21-$0E24 DB_DATA 3
RANGE $0E24-$0E27 DB_DATA 3
RANGE $0E27-$0E2A DB_DATA 3
RANGE $0E2A-$0E2D DB_DATA 3
RANGE $0E2D-$0E30 DB_DATA 3
RANGE $0E30-$0E33 DB_DATA 3
RANGE $0E33-$0E36 DB_DATA 3
RANGE $0E36-$0E39 DB_DATA 3
RANGE $0E39-$0E3C DB_DATA 3
RANGE $0E3C-$0E3F DB_DATA 3
RANGE $0E3F-$0E42 DB_DATA 3
RANGE $0E42-$0E45 DB_DATA 3
RANGE $0E45-$0E48 DB_DATA 3
RANGE $0E48-$0E4B DB_DATA 3
RANGE $0E4B-$0E4E DB_DATA 3
RANGE $0E4E-$0E51 DB_DATA 3
RANGE $0E51-$0E54 DB_DATA 3
RANGE $0E54-$0E57 DB_DATA 3
RANGE $0E57-$0E5A DB_DATA 3
RANGE $0E5A-$0E5D DB_DATA 3
RANGE $0E5D-$0E60 DB_DATA 3
RANGE $0E60-$0E63 DB_DATA 3
RANGE $0E63-$0E66 DB_DATA 3
RANGE $0E66-$0E69 DB_DATA 3
RANGE $0E69-$0E6C DB_DATA 3
RANGE $0E6C-$0E6F DB_DATA 3
RANGE $0E6F-$0E72 DB_DATA 3
RANGE $0E72-$0E75 DB_DATA 3
RANGE $0E75-$0E78 DB_DATA 3
RANGE $0E78-$0E7B DB_DATA 3
RANGE $0E7B-$0E7E DB_DATA 3
RANGE $0E7E-$0E81 DB_DATA 3
RANGE $0E81-$0E84 DB_DATA 3
RANGE $0E84-$0E87 DB_DATA 3
RANGE $0E87-$0E8A DB_DATA 3
RANGE $0E8A-$0E8D DB_DATA 3
RANGE $0E8D-$0E90 DB_DATA 3
RANGE $0E90-$0E93 DB_DATA 3
RANGE $0E93-$0E96 DB_DATA 3
RANGE $0E96-$0E99 DB_DATA 3
RANGE $0E99-$0E9C DB_DATA 3
RANGE $0E9C-$0E9F DB_DATA 3
RANGE $0E9F-$0EA2 DB_DATA 3
RANGE $0EA2-$0EA5 DB_DATA 3
RANGE $0EA5-$0EA8 DB_DATA 3
RANGE $0EA8-$0EAB DB_DATA 3
RANGE $0EAB-$0EAE DB_DATA 3
RANGE $0EAE-$0EB1 DB_DATA 3
RANGE $0EB1-$0EB4 DB_DATA 3
RANGE $0EB4-$0EB7 DB_DATA 3
RANGE $0EB7-$0EBA DB_DATA 3
RANGE $0EBA-$0EBD DB_DATA 3
RANGE $0EBD-$0EC0 DB_DATA 3
RANGE $0EC0-$0EC3 DB_DATA 3
RANGE $0EC3-$0EC6 DB_DATA 3
RANGE $0EC6-$0EC9 DB_DATA 3
RANGE $0EC9-$0ECC DB_DATA 3
RANGE $0ECC-$0ECF DB_DATA 3
RANGE $0ECF-$0ED2 DB_DATA 3
RANGE $0ED2-$0ED5 DB_DATA 3
RANGE $0ED5-$0ED8 DB_DATA 3
RANGE $0ED8-$0EDB DB_DATA 3
RANGE $0EDB-$0EDE DB_DATA 3
RANGE $0EDE-$0EE1 DB_DATA 3
RANGE $0EE1-$0EE4 DB_DATA 3
RANGE $0EE4-$0EE7 DB_DATA 3
RANGE $0EE7-$0EEA DB_DATA 3
RANGE $0EEA-$0EED DB_DATA 3
RANGE $0EED-$0EF0 DB_DATA 3
RANGE $0EF0-$0EF3 DB_DATA 3
RANGE $0EF3-$0EF6 DB_DATA 3
RANGE $0EF6-$0EF9 DB_DATA 3
RANGE $0EF9-$0EFC DB_DATA 3
RANGE $0EFC-$0EFF DB_DATA 3
RANGE $0EFF-$0F02 DB_DATA 3
RANGE $0F02-$0F05 DB_DATA 3
RANGE $0F05-$0F08 DB_DATA 3
RANGE $0F08-$0F0B DB_DATA 3
RANGE $0F0B-$0F0E DB_DATA 3
RANGE $0F0E-$0F11 DB_DATA 3
RANGE $0F11-$0F12 DB_DATA 1
RANGE $0F12-$0F14 DW_DATA 1
RANGE $0F14-$0F16 DW_DATA 1
RANGE $0F16-$0F19 DB_DATA 3
RANGE $0F19-$0F1C DB_DATA 3
RANGE $0F1C-$0F1F DB_DATA 3
RANGE $0F1F-$0F22 DB_DATA 3
RANGE $0F22-$0F25 DB_DATA 3
RANGE $0F25-$0F28 DB_DATA 3
RANGE $0F28-$0F2B DB_DATA 3
RANGE $0F2B-$0F2E DB_DATA 3
RANGE $0F2E-$0F31 DB_DATA 3
RANGE $0F31-$0F34 DB_DATA 3
RANGE $0F34-$0F37 DB_DATA 3
RANGE $0F37-$0F3A DB_DATA 3
RANGE $0F3A-$0F3D DB_DATA 3
RANGE $0F3D-$0F40 DB_DATA 3
RANGE $0F40-$0F43 DB_DATA 3
RANGE $0F43-$0F46 DB_DATA 3
RANGE $0F46-$0F49 DB_DATA 3
RANGE $0F49-$0F4C DB_DATA 3
RANGE $0F4C-$0F4F DB_DATA 3
RANGE $0F4F-$0F52 DB_DATA 3
RANGE $0F52-$0F55 DB_DATA 3
RANGE $0F55-$0F58 DB_DATA 3
RANGE $0F58-$0F5B DB_DATA 3
RANGE $0F5B-$0F5E DB_DATA 3
RANGE $0F5E-$0F61 DB_DATA 3
RANGE $0F61-$0F64 DB_DATA 3
RANGE $0F64-$0F67 DB_DATA 3
RANGE $0F67-$0F6A DB_DATA 3
RANGE $0F6A-$0F6D DB_DATA 3
RANGE $0F6D-$0F70 DB_DATA 3
RANGE $0F70-$0F73 DB_DATA 3
RANGE $0F73-$0F76 DB_DATA 3
RANGE $0F76-$0F79 DB_DATA 3
RANGE $0F79-$0F7C DB_DATA 3
RANGE $0F7C-$0F7F DB_DATA 3
RANGE $0F7F-$0F82 DB_DATA 3
RANGE $0F82-$0F85 DB_DATA 3
RANGE $0F85-$0F88 DB_DATA 3
RANGE $0F88-$0F8B DB_DATA 3
RANGE $0F8B-$0F8E DB_DATA 3
RANGE $0F8E-$0F91 DB_DATA 3
RANGE $0F91-$0F94 DB_DATA 3
RANGE $0F94-$0F97 DB_DATA 3
RANGE $0F97-$0F9A DB_DATA 3
RANGE $0F9A-$0F9D DB_DATA 3
RANGE $0F9D-$0FA0 DB_DATA 3
RANGE $0FA0-$0FA3 DB_DATA 3
RANGE $0FA3-$0FA6 DB_DATA 3
RANGE $0FA6-$0FA9 DB_DATA 3
RANGE $0FA9-$0FAC DB_DATA 3
RANGE $0FAC-$0FAF DB_DATA 3
RANGE $0FAF-$0FB2 DB_DATA 3
RANGE $0FB2-$0FB5 DB_DATA 3
RANGE $0FB5-$0FB8 DB_DATA 3
RANGE $0FB8-$0FBB DB_DATA 3
RANGE $0FBB-$0FBE DB_DATA 3
RANGE $0FBE-$0FC1 DB_DATA 3
RANGE $0FC1-$0FC4 DB_DATA 3
RANGE $0FC4-$0FC7 DB_DATA 3
RANGE $0FC7-$0FCA DB_DATA 3
RANGE $0FCA-$0FCD DB_DATA 3
RANGE $0FCD-$0FD0 DB_DATA 3
RANGE $0FD0-$0FD3 DB_DATA 3
RANGE $0FD3-$0FD6 DB_DATA 3
RANGE $0FD6-$0FD9 DB_DATA 3
RANGE $0FD9-$0FDC DB_DATA 3
RANGE $0FDC-$0FDF DB_DATA 3
RANGE $0FDF-$0FE2 DB_DATA 3
RANGE $0FE2-$0FE5 DB_DATA 3
RANGE $0FE5-$0FE8 DB_DATA 3
RANGE $0FE8-$0FEB DB_DATA 3
RANGE $0FEB-$0FEE DB_DATA 3
RANGE $0FEE-$0FF1 DB_DATA 3
RANGE $0FF1-$0FF4 DB_DATA 3
RANGE $0FF4-$0FF7 DB_DATA 3
RANGE $0FF7-$0FFA DB_DATA 3
RANGE $0FFA-$0FFD DB_DATA 3
RANGE $0FFD-$1000 DB_DATA 3
RANGE $1000-$1003 DB_DATA 3
RANGE $1003-$1006 DB_DATA 3
RANGE $1006-$1009 DB_DATA 3
RANGE $1009-$100C DB_DATA 3
RANGE $100C-$100F DB_DATA 3
RANGE $100F-$1012 DB_DATA 3
RANGE $1012-$1015 DB_DATA 3
RANGE $1015-$1018 DB_DATA 3
RANGE $1018-$1019 DB_DATA 1
RANGE $1019-$1070 CODE
RANGE $1070-$1072 DW_DATA 1
RANGE $1072-$1074 DW_DATA 1
RANGE $1074-$1076 DW_DATA 1
RANGE $1076-$1078 DW_DATA 1
RANGE $1078-$107A DW_DATA 1
RANGE $107A-$107C DW_DATA 1
RANGE $107C-$107D DB_DATA 1
RANGE $107D-$107E DB_DATA 1
RANGE $107E-$107F DB_DATA 1
RANGE $107F-$1080 DB_DATA 1
RANGE $1080-$1081 DB_DATA 1
RANGE $1081-$1082 DB_DATA 1
RANGE $1082-$1083 DB_DATA 1
RANGE $1083-$1084 DB_DATA 1
RANGE $1084-$1085 DB_DATA 1
RANGE $1085-$1087 DB_DATA 2
RANGE $1087-$1089 DB_DATA 2
RANGE $1089-$108B DB_DATA 2
RANGE $108B-$108D DB_DATA 2
RANGE $108D-$108E DB_DATA 1
RANGE $108E-$1090 DW_DATA 1
RANGE $1090-$1091 DB_DATA 1
RANGE $1091-$1093 DW_DATA 1
RANGE $1093-$1094 DB_DATA 1
RANGE $1094-$1096 DW_DATA 1
RANGE $1096-$1097 DB_DATA 1
RANGE $1097-$1098 DB_DATA 1
RANGE $1098-$1099 DB_DATA 1
RANGE $1099-$109A DB_DATA 1
RANGE $109A-$109B DB_DATA 1
RANGE $109B-$109C DB_DATA 1
RANGE $109C-$109D DB_DATA 1
RANGE $109D-$109E DB_DATA 1
RANGE $109E-$109F DB_DATA 1
RANGE $109F-$10A1 DB_DATA 2
RANGE $10A1-$10A3 DB_DATA 2
RANGE $10A3-$10A5 DB_DATA 2
RANGE $10A5-$10A7 DB_DATA 2
RANGE $10A7-$10A8 DB_DATA 1
RANGE $10A8-$10AA DW_DATA 1
RANGE $10AA-$10AB DB_DATA 1
RANGE $10AB-$10AD DW_DATA 1
RANGE $10AD-$10AE DB_DATA 1
RANGE $10AE-$10B0 DW_DATA 1
RANGE $10B0-$10B1 DB_DATA 1
RANGE $10B1-$10B2 DB_DATA 1
RANGE $10B2-$10B3 DB_DATA 1
RANGE $10B3-$10B4 DB_DATA 1
RANGE $10B4-$10B5 DB_DATA 1
RANGE $10B5-$10B6 DB_DATA 1
RANGE $10B6-$10B7 DB_DATA 1
RANGE $10B7-$10B8 DB_DATA 1
RANGE $10B8-$10B9 DB_DATA 1
RANGE $10B9-$10BB DB_DATA 2
RANGE $10BB-$10BD DB_DATA 2
RANGE $10BD-$10BF DB_DATA 2
RANGE $10BF-$10C1 DB_DATA 2
RANGE $10C1-$10C2 DB_DATA 1
RANGE $10C2-$10C4 DW_DATA 1
RANGE $10C4-$10C5 DB_DATA 1
RANGE $10C5-$10C7 DW_DATA 1
RANGE $10C7-$10C8 DB_DATA 1
RANGE $10C8-$10CA DW_DATA 1
RANGE $10CA-$10CB DB_DATA 1
RANGE $10CB-$10CC DB_DATA 1
RANGE $10CC-$10CD DB_DATA 1
RANGE $10CD-$10CE DB_DATA 1
RANGE $10CE-$10CF DB_DATA 1
RANGE $10CF-$10D0 DB_DATA 1
RANGE $10D0-$10D1 DB_DATA 1
RANGE $10D1-$10D2 DB_DATA 1
RANGE $10D2-$10D3 DB_DATA 1
RANGE $10D3-$10D5 DB_DATA 2
RANGE $10D5-$10D7 DB_DATA 2
RANGE $10D7-$10D9 DB_DATA 2
RANGE $10D9-$10DB DB_DATA 2
RANGE $10DB-$10DC DB_DATA 1
RANGE $10DC-$10DE DW_DATA 1
RANGE $10DE-$10DF DB_DATA 1
RANGE $10DF-$10E1 DW_DATA 1
RANGE $10E1-$10E2 DB_DATA 1
RANGE $10E2-$10E4 DW_DATA 1
RANGE $10E4-$10E6 DW_DATA 1
RANGE $10E6-$10E8 DW_DATA 1
RANGE $10E8-$10E9 DB_DATA 1
RANGE $10E9-$10EA DB_DATA 1
RANGE $10EA-$10EB DB_DATA 1
RANGE $10EB-$10EC DB_DATA 1
RANGE $10EC-$10ED DB_DATA 1
RANGE $10ED-$10EE DB_DATA 1
RANGE $10EE-$10EF DB_DATA 1
RANGE $10EF-$10F0 DB_DATA 1
RANGE $10F0-$10F1 DB_DATA 1
RANGE $10F1-$10F3 DB_DATA 2
RANGE $10F3-$10F5 DB_DATA 2
RANGE $10F5-$10F7 DB_DATA 2
RANGE $10F7-$10F9 DB_DATA 2
RANGE $10F9-$10FA DB_DATA 1
RANGE $10FA-$10FC DW_DATA 1
RANGE $10FC-$10FD DB_DATA 1
RANGE $10FD-$10FF DW_DATA 1
RANGE $10FF-$1100 DB_DATA 1
RANGE $1100-$1102 DW_DATA 1
RANGE $1102-$1104 DW_DATA 1
RANGE $1104-$1106 DW_DATA 1
RANGE $1106-$1107 DB_DATA 1
RANGE $1107-$1108 DB_DATA 1
RANGE $1108-$1109 DB_DATA 1
RANGE $1109-$110A DB_DATA 1
RANGE $110A-$110B DB_DATA 1
RANGE $110B-$110C DB_DATA 1
RANGE $110C-$110D DB_DATA 1
RANGE $110D-$110E DB_DATA 1
RANGE $110E-$110F DB_DATA 1
RANGE $110F-$1111 DB_DATA 2
RANGE $1111-$1113 DB_DATA 2
RANGE $1113-$1115 DB_DATA 2
RANGE $1115-$1117 DB_DATA 2
RANGE $1117-$1118 DB_DATA 1
RANGE $1118-$111A DW_DATA 1
RANGE $111A-$111B DB_DATA 1
RANGE $111B-$111D DW_DATA 1
RANGE $111D-$111E DB_DATA 1
RANGE $111E-$1120 DW_DATA 1
RANGE $1120-$1122 DW_DATA 1
RANGE $1122-$1125 DB_DATA 3
RANGE $1125-$1128 DB_DATA 3
RANGE $1128-$112B DB_DATA 3
RANGE $112B-$112E DB_DATA 3
RANGE $112E-$1131 DB_DATA 3
RANGE $1131-$1134 DB_DATA 3
RANGE $1134-$1137 DB_DATA 3
RANGE $1137-$113A DB_DATA 3
RANGE $113A-$113D DB_DATA 3
RANGE $113D-$1140 DB_DATA 3
RANGE $1140-$1143 DB_DATA 3
RANGE $1143-$1146 DB_DATA 3
RANGE $1146-$1149 DB_DATA 3
RANGE $1149-$114C DB_DATA 3
RANGE $114C-$114F DB_DATA 3
RANGE $114F-$1152 DB_DATA 3
RANGE $1152-$1155 DB_DATA 3
RANGE $1155-$1158 DB_DATA 3
RANGE $1158-$115B DB_DATA 3
RANGE $115B-$115E DB_DATA 3
RANGE $115E-$1161 DB_DATA 3
RANGE $1161-$1164 DB_DATA 3
RANGE $1164-$1167 DB_DATA 3
RANGE $1167-$116A DB_DATA 3
RANGE $116A-$116D DB_DATA 3
RANGE $116D-$1170 DB_DATA 3
RANGE $1170-$1173 DB_DATA 3
RANGE $1173-$1176 DB_DATA 3
RANGE $1176-$1179 DB_DATA 3
RANGE $1179-$117C DB_DATA 3
RANGE $117C-$117F DB_DATA 3
RANGE $117F-$1182 DB_DATA 3
RANGE $1182-$1185 DB_DATA 3
RANGE $1185-$1188 DB_DATA 3
RANGE $1188-$118B DB_DATA 3
RANGE $118B-$118E DB_DATA 3
RANGE $118E-$1191 DB_DATA 3
RANGE $1191-$1194 DB_DATA 3
RANGE $1194-$1197 DB_DATA 3
RANGE $1197-$119A DB_DATA 3
RANGE $119A-$119D DB_DATA 3
RANGE $119D-$11A0 DB_DATA 3
RANGE $11A0-$11A3 DB_DATA 3
RANGE $11A3-$11A6 DB_DATA 3
RANGE $11A6-$11A9 DB_DATA 3
RANGE $11A9-$11AC DB_DATA 3
RANGE $11AC-$11AF DB_DATA 3
RANGE $11AF-$11B2 DB_DATA 3
RANGE $11B2-$11B5 DB_DATA 3
RANGE $11B5-$11B8 DB_DATA 3
RANGE $11B8-$11BB DB_DATA 3
RANGE $11BB-$11BE DB_DATA 3
RANGE $11BE-$11C1 DB_DATA 3
RANGE $11C1-$11C4 DB_DATA 3
RANGE $11C4-$11C7 DB_DATA 3
RANGE $11C7-$11CA DB_DATA 3
RANGE $11CA-$11CD DB_DATA 3
RANGE $11CD-$11D0 DB_DATA 3
RANGE $11D0-$11D3 DB_DATA 3
RANGE $11D3-$11D6 DB_DATA 3
RANGE $11D6-$11D9 DB_DATA 3
RANGE $11D9-$11DC DB_DATA 3
RANGE $11DC-$11DF DB_DATA 3
RANGE $11DF-$11E2 DB_DATA 3
RANGE $11E2-$11E5 DB_DATA 3
RANGE $11E5-$11E8 DB_DATA 3
RANGE $11E8-$11EB DB_DATA 3
RANGE $11EB-$11EE DB_DATA 3
RANGE $11EE-$11F1 DB_DATA 3
RANGE $11F1-$11F4 DB_DATA 3
RANGE $11F4-$11F7 DB_DATA 3
RANGE $11F7-$11FA DB_DATA 3
RANGE $11FA-$11FD DB_DATA 3
RANGE $11FD-$1200 DB_DATA 3
RANGE $1200-$1203 DB_DATA 3
RANGE $1203-$1206 DB_DATA 3
RANGE $1206-$1209 DB_DATA 3
RANGE $1209-$120C DB_DATA 3
RANGE $120C-$120F DB_DATA 3
RANGE $120F-$1212 DB_DATA 3
RANGE $1212-$1213 DB_DATA 1
RANGE $1213-$1215 DW_DATA 1
RANGE $1215-$1217 DW_DATA 1
RANGE $1217-$121A DB_DATA 3
RANGE $121A-$121D DB_DATA 3
RANGE $121D-$1220 DB_DATA 3
RANGE $1220-$1223 DB_DATA 3
RANGE $1223-$1226 DB_DATA 3
RANGE $1226-$1229 DB_DATA 3
RANGE $1229-$122C DB_DATA 3
RANGE $122C-$122F DB_DATA 3
RANGE $122F-$1232 DB_DATA 3
RANGE $1232-$1235 DB_DATA 3
RANGE $1235-$1238 DB_DATA 3
RANGE $1238-$123B DB_DATA 3
RANGE $123B-$123E DB_DATA 3
RANGE $123E-$1241 DB_DATA 3
RANGE $1241-$1244 DB_DATA 3
RANGE $1244-$1247 DB_DATA 3
RANGE $1247-$124A DB_DATA 3
RANGE $124A-$124D DB_DATA 3
RANGE $124D-$1250 DB_DATA 3
RANGE $1250-$1253 DB_DATA 3
RANGE $1253-$1256 DB_DATA 3
RANGE $1256-$1259 DB_DATA 3
RANGE $1259-$125C DB_DATA 3
RANGE $125C-$125F DB_DATA 3
RANGE $125F-$1262 DB_DATA 3
RANGE $1262-$1265 DB_DATA 3
RANGE $1265-$1268 DB_DATA 3
RANGE $1268-$126B DB_DATA 3
RANGE $126B-$126E DB_DATA 3
RANGE $126E-$1271 DB_DATA 3
RANGE $1271-$1274 DB_DATA 3
RANGE $1274-$1277 DB_DATA 3
RANGE $1277-$127A DB_DATA 3
RANGE $127A-$127D DB_DATA 3
RANGE $127D-$1280 DB_DATA 3
RANGE $1280-$1283 DB_DATA 3
RANGE $1283-$1286 DB_DATA 3
RANGE $1286-$1289 DB_DATA 3
RANGE $1289-$128C DB_DATA 3
RANGE $128C-$128F DB_DATA 3
RANGE $128F-$1292 DB_DATA 3
RANGE $1292-$1295 DB_DATA 3
RANGE $1295-$1298 DB_DATA 3
RANGE $1298-$129B DB_DATA 3
RANGE $129B-$129E DB_DATA 3
RANGE $129E-$12A1 DB_DATA 3
RANGE $12A1-$12A4 DB_DATA 3
RANGE $12A4-$12A7 DB_DATA 3
RANGE $12A7-$12AA DB_DATA 3
RANGE $12AA-$12AD DB_DATA 3
RANGE $12AD-$12B0 DB_DATA 3
RANGE $12B0-$12B3 DB_DATA 3
RANGE $12B3-$12B6 DB_DATA 3
RANGE $12B6-$12B9 DB_DATA 3
RANGE $12B9-$12BC DB_DATA 3
RANGE $12BC-$12BF DB_DATA 3
RANGE $12BF-$12C2 DB_DATA 3
RANGE $12C2-$12C5 DB_DATA 3
RANGE $12C5-$12C8 DB_DATA 3
RANGE $12C8-$12CB DB_DATA 3
RANGE $12CB-$12CE DB_DATA 3
RANGE $12CE-$12D1 DB_DATA 3
RANGE $12D1-$12D4 DB_DATA 3
RANGE $12D4-$12D7 DB_DATA 3
RANGE $12D7-$12DA DB_DATA 3
RANGE $12DA-$12DD DB_DATA 3
RANGE $12DD-$12E0 DB_DATA 3
RANGE $12E0-$12E3 DB_DATA 3
RANGE $12E3-$12E6 DB_DATA 3
RANGE $12E6-$12E9 DB_DATA 3
RANGE $12E9-$12EC DB_DATA 3
RANGE $12EC-$12EF DB_DATA 3
RANGE $12EF-$12F2 DB_DATA 3
RANGE $12F2-$12F5 DB_DATA 3
RANGE $12F5-$12F8 DB_DATA 3
RANGE $12F8-$12FB DB_DATA 3
RANGE $12FB-$12FE DB_DATA 3
RANGE $12FE-$1301 DB_DATA 3
RANGE $1301-$1304 DB_DATA 3
RANGE $1304-$1307 DB_DATA 3
RANGE $1307-$130A DB_DATA 3
RANGE $130A-$130D DB_DATA 3
RANGE $130D-$1310 DB_DATA 3
RANGE $1310-$1313 DB_DATA 3
RANGE $1313-$1316 DB_DATA 3
RANGE $1316-$1319 DB_DATA 3
RANGE $1319-$131C DB_DATA 3
RANGE $131C-$131F DB_DATA 3
RANGE $131F-$1322 DB_DATA 3
RANGE $1322-$1325 DB_DATA 3
RANGE $1325-$1328 DB_DATA 3
RANGE $1328-$132B DB_DATA 3
RANGE $132B-$132E DB_DATA 3
RANGE $132E-$1331 DB_DATA 3
RANGE $1331-$1334 DB_DATA 3
RANGE $1334-$1337 DB_DATA 3
RANGE $1337-$133A DB_DATA 3
RANGE $133A-$133B DB_DATA 1
RANGE $133B-$133D DW_DATA 1
RANGE $133D-$133F DW_DATA 1
RANGE $133F-$1342 DB_DATA 3
RANGE $1342-$1345 DB_DATA 3
RANGE $1345-$1348 DB_DATA 3
RANGE $1348-$134B DB_DATA 3
RANGE $134B-$134E DB_DATA 3
RANGE $134E-$1351 DB_DATA 3
RANGE $1351-$1354 DB_DATA 3
RANGE $1354-$1357 DB_DATA 3
RANGE $1357-$135A DB_DATA 3
RANGE $135A-$135D DB_DATA 3
RANGE $135D-$1360 DB_DATA 3
RANGE $1360-$1363 DB_DATA 3
RANGE $1363-$1366 DB_DATA 3
RANGE $1366-$1369 DB_DATA 3
RANGE $1369-$136C DB_DATA 3
RANGE $136C-$136F DB_DATA 3
RANGE $136F-$1372 DB_DATA 3
RANGE $1372-$1375 DB_DATA 3
RANGE $1375-$1378 DB_DATA 3
RANGE $1378-$137B DB_DATA 3
RANGE $137B-$137E DB_DATA 3
RANGE $137E-$1381 DB_DATA 3
RANGE $1381-$1384 DB_DATA 3
RANGE $1384-$1387 DB_DATA 3
RANGE $1387-$138A DB_DATA 3
RANGE $138A-$138D DB_DATA 3
RANGE $138D-$1390 DB_DATA 3
RANGE $1390-$1393 DB_DATA 3
RANGE $1393-$1396 DB_DATA 3
RANGE $1396-$1399 DB_DATA 3
RANGE $1399-$139C DB_DATA 3
RANGE $139C-$139F DB_DATA 3
RANGE $139F-$13A2 DB_DATA 3
RANGE $13A2-$13A5 DB_DATA 3
RANGE $13A5-$13A8 DB_DATA 3
RANGE $13A8-$13AB DB_DATA 3
RANGE $13AB-$13AE DB_DATA 3
RANGE $13AE-$13B1 DB_DATA 3
RANGE $13B1-$13B4 DB_DATA 3
RANGE $13B4-$13B7 DB_DATA 3
RANGE $13B7-$13BA DB_DATA 3
RANGE $13BA-$13BD DB_DATA 3
RANGE $13BD-$13C0 DB_DATA 3
RANGE $13C0-$13C3 DB_DATA 3
RANGE $13C3-$13C6 DB_DATA 3
RANGE $13C6-$13C9 DB_DATA 3
RANGE $13C9-$13CC DB_DATA 3
RANGE $13CC-$13CF DB_DATA 3
RANGE $13CF-$13D2 DB_DATA 3
RANGE $13D2-$13D5 DB_DATA 3
RANGE $13D5-$13D8 DB_DATA 3
RANGE $13D8-$13DB DB_DATA 3
RANGE $13DB-$13DE DB_DATA 3
RANGE $13DE-$13E1 DB_DATA 3
RANGE $13E1-$13E4 DB_DATA 3
RANGE $13E4-$13E7 DB_DATA 3
RANGE $13E7-$13EA DB_DATA 3
RANGE $13EA-$13ED DB_DATA 3
RANGE $13ED-$13F0 DB_DATA 3
RANGE $13F0-$13F3 DB_DATA 3
RANGE $13F3-$13F6 DB_DATA 3
RANGE $13F6-$13F9 DB_DATA 3
RANGE $13F9-$13FC DB_DATA 3
RANGE $13FC-$13FF DB_DATA 3
RANGE $13FF-$1402 DB_DATA 3
RANGE $1402-$1405 DB_DATA 3
RANGE $1405-$1408 DB_DATA 3
RANGE $1408-$1409 DB_DATA 1
RANGE $1409-$140B DW_DATA 1
RANGE $140B-$140D DW_DATA 1
RANGE $140D-$1410 DB_DATA 3
RANGE $1410-$1413 DB_DATA 3
RANGE $1413-$1416 DB_DATA 3
RANGE $1416-$1419 DB_DATA 3
RANGE $1419-$141C DB_DATA 3
RANGE $141C-$141F DB_DATA 3
RANGE $141F-$1422 DB_DATA 3
RANGE $1422-$1425 DB_DATA 3
RANGE $1425-$1428 DB_DATA 3
RANGE $1428-$142B DB_DATA 3
RANGE $142B-$142E DB_DATA 3
RANGE $142E-$1431 DB_DATA 3
RANGE $1431-$1434 DB_DATA 3
RANGE $1434-$1437 DB_DATA 3
RANGE $1437-$143A DB_DATA 3
RANGE $143A-$143D DB_DATA 3
RANGE $143D-$1440 DB_DATA 3
RANGE $1440-$1443 DB_DATA 3
RANGE $1443-$1446 DB_DATA 3
RANGE $1446-$1449 DB_DATA 3
RANGE $1449-$144C DB_DATA 3
RANGE $144C-$144F DB_DATA 3
RANGE $144F-$1452 DB_DATA 3
RANGE $1452-$1455 DB_DATA 3
RANGE $1455-$1458 DB_DATA 3
RANGE $1458-$145B DB_DATA 3
RANGE $145B-$145E DB_DATA 3
RANGE $145E-$1461 DB_DATA 3
RANGE $1461-$1464 DB_DATA 3
RANGE $1464-$1467 DB_DATA 3
RANGE $1467-$146A DB_DATA 3
RANGE $146A-$146D DB_DATA 3
RANGE $146D-$1470 DB_DATA 3
RANGE $1470-$1473 DB_DATA 3
RANGE $1473-$1476 DB_DATA 3
RANGE $1476-$1479 DB_DATA 3
RANGE $1479-$147C DB_DATA 3
RANGE $147C-$147F DB_DATA 3
RANGE $147F-$1482 DB_DATA 3
RANGE $1482-$1485 DB_DATA 3
RANGE $1485-$1488 DB_DATA 3
RANGE $1488-$148B DB_DATA 3
RANGE $148B-$148E DB_DATA 3
RANGE $148E-$1491 DB_DATA 3
RANGE $1491-$1494 DB_DATA 3
RANGE $1494-$1497 DB_DATA 3
RANGE $1497-$149A DB_DATA 3
RANGE $149A-$149D DB_DATA 3
RANGE $149D-$14A0 DB_DATA 3
RANGE $14A0-$14A3 DB_DATA 3
RANGE $14A3-$14A6 DB_DATA 3
RANGE $14A6-$14A9 DB_DATA 3
RANGE $14A9-$14AC DB_DATA 3
RANGE $14AC-$14AF DB_DATA 3
RANGE $14AF-$14B2 DB_DATA 3
RANGE $14B2-$14B5 DB_DATA 3
RANGE $14B5-$14B8 DB_DATA 3
RANGE $14B8-$14BB DB_DATA 3
RANGE $14BB-$14BE DB_DATA 3
RANGE $14BE-$14C1 DB_DATA 3
RANGE $14C1-$14C4 DB_DATA 3
RANGE $14C4-$14C7 DB_DATA 3
RANGE $14C7-$14CA DB_DATA 3
RANGE $14CA-$14CD DB_DATA 3
RANGE $14CD-$14D0 DB_DATA 3
RANGE $14D0-$14D3 DB_DATA 3
RANGE $14D3-$14D6 DB_DATA 3
RANGE $14D6-$14D9 DB_DATA 3
RANGE $14D9-$14DC DB_DATA 3
RANGE $14DC-$14DF DB_DATA 3
RANGE $14DF-$14E2 DB_DATA 3
RANGE $14E2-$14E5 DB_DATA 3
RANGE $14E5-$14E8 DB_DATA 3
RANGE $14E8-$14EB DB_DATA 3
RANGE $14EB-$14EE DB_DATA 3
RANGE $14EE-$14F1 DB_DATA 3
RANGE $14F1-$14F4 DB_DATA 3
RANGE $14F4-$14F7 DB_DATA 3
RANGE $14F7-$14FA DB_DATA 3
RANGE $14FA-$14FD DB_DATA 3
RANGE $14FD-$1500 DB_DATA 3
RANGE $1500-$1503 DB_DATA 3
RANGE $1503-$1506 DB_DATA 3
RANGE $1506-$1509 DB_DATA 3
RANGE $1509-$150C DB_DATA 3
RANGE $150C-$150F DB_DATA 3
RANGE $150F-$1512 DB_DATA 3
RANGE $1512-$1513 DB_DATA 1
RANGE $1513-$1515 DW_DATA 1
RANGE $1515-$1517 DW_DATA 1
RANGE $1517-$151A DB_DATA 3
RANGE $151A-$151D DB_DATA 3
RANGE $151D-$1520 DB_DATA 3
RANGE $1520-$1523 DB_DATA 3
RANGE $1523-$1526 DB_DATA 3
RANGE $1526-$1529 DB_DATA 3
RANGE $1529-$152C DB_DATA 3
RANGE $152C-$152F DB_DATA 3
RANGE $152F-$1532 DB_DATA 3
RANGE $1532-$1535 DB_DATA 3
RANGE $1535-$1538 DB_DATA 3
RANGE $1538-$153B DB_DATA 3
RANGE $153B-$153E DB_DATA 3
RANGE $153E-$1541 DB_DATA 3
RANGE $1541-$1544 DB_DATA 3
RANGE $1544-$1547 DB_DATA 3
RANGE $1547-$154A DB_DATA 3
RANGE $154A-$154D DB_DATA 3
RANGE $154D-$1550 DB_DATA 3
RANGE $1550-$1553 DB_DATA 3
RANGE $1553-$1556 DB_DATA 3
RANGE $1556-$1559 DB_DATA 3
RANGE $1559-$155C DB_DATA 3
RANGE $155C-$155F DB_DATA 3
RANGE $155F-$1562 DB_DATA 3
RANGE $1562-$1565 DB_DATA 3
RANGE $1565-$1568 DB_DATA 3
RANGE $1568-$156B DB_DATA 3
RANGE $156B-$156E DB_DATA 3
RANGE $156E-$1571 DB_DATA 3
RANGE $1571-$1574 DB_DATA 3
RANGE $1574-$1577 DB_DATA 3
RANGE $1577-$157A DB_DATA 3
RANGE $157A-$157D DB_DATA 3
RANGE $157D-$1580 DB_DATA 3
RANGE $1580-$1583 DB_DATA 3
RANGE $1583-$1586 DB_DATA 3
RANGE $1586-$1589 DB_DATA 3
RANGE $1589-$158C DB_DATA 3
RANGE $158C-$158F DB_DATA 3
RANGE $158F-$1592 DB_DATA 3
RANGE $1592-$1595 DB_DATA 3
RANGE $1595-$1598 DB_DATA 3
RANGE $1598-$159B DB_DATA 3
RANGE $159B-$159E DB_DATA 3
RANGE $159E-$15A1 DB_DATA 3
RANGE $15A1-$15A4 DB_DATA 3
RANGE $15A4-$15A7 DB_DATA 3
RANGE $15A7-$15AA DB_DATA 3
RANGE $15AA-$15AD DB_DATA 3
RANGE $15AD-$15B0 DB_DATA 3
RANGE $15B0-$15B3 DB_DATA 3
RANGE $15B3-$15B6 DB_DATA 3
RANGE $15B6-$15B9 DB_DATA 3
RANGE $15B9-$15BC DB_DATA 3
RANGE $15BC-$15BF DB_DATA 3
RANGE $15BF-$15C2 DB_DATA 3
RANGE $15C2-$15C5 DB_DATA 3
RANGE $15C5-$15C6 DB_DATA 1
RANGE $15C6-$15C8 DW_DATA 1
RANGE $15C8-$15CA DW_DATA 1
RANGE $15CA-$15CD DB_DATA 3
RANGE $15CD-$15D0 DB_DATA 3
RANGE $15D0-$15D3 DB_DATA 3
RANGE $15D3-$15D6 DB_DATA 3
RANGE $15D6-$15D9 DB_DATA 3
RANGE $15D9-$15DC DB_DATA 3
RANGE $15DC-$15DF DB_DATA 3
RANGE $15DF-$15E2 DB_DATA 3
RANGE $15E2-$15E5 DB_DATA 3
RANGE $15E5-$15E8 DB_DATA 3
RANGE $15E8-$15EB DB_DATA 3
RANGE $15EB-$15EE DB_DATA 3
RANGE $15EE-$15F1 DB_DATA 3
RANGE $15F1-$15F4 DB_DATA 3
RANGE $15F4-$15F7 DB_DATA 3
RANGE $15F7-$15FA DB_DATA 3
RANGE $15FA-$15FD DB_DATA 3
RANGE $15FD-$1600 DB_DATA 3
RANGE $1600-$1603 DB_DATA 3
RANGE $1603-$1606 DB_DATA 3
RANGE $1606-$1609 DB_DATA 3
RANGE $1609-$160C DB_DATA 3
RANGE $160C-$160F DB_DATA 3
RANGE $160F-$1612 DB_DATA 3
RANGE $1612-$1615 DB_DATA 3
RANGE $1615-$1618 DB_DATA 3
RANGE $1618-$161B DB_DATA 3
RANGE $161B-$161E DB_DATA 3
RANGE $161E-$1621 DB_DATA 3
RANGE $1621-$1624 DB_DATA 3
RANGE $1624-$1627 DB_DATA 3
RANGE $1627-$162A DB_DATA 3
RANGE $162A-$162D DB_DATA 3
RANGE $162D-$1630 DB_DATA 3
RANGE $1630-$1633 DB_DATA 3
RANGE $1633-$1636 DB_DATA 3
RANGE $1636-$1639 DB_DATA 3
RANGE $1639-$163C DB_DATA 3
RANGE $163C-$163F DB_DATA 3
RANGE $163F-$1642 DB_DATA 3
RANGE $1642-$1645 DB_DATA 3
RANGE $1645-$1648 DB_DATA 3
RANGE $1648-$164B DB_DATA 3
RANGE $164B-$164E DB_DATA 3
RANGE $164E-$1651 DB_DATA 3
RANGE $1651-$1654 DB_DATA 3
RANGE $1654-$1655 DB_DATA 1
RANGE $1655-$171F CODE
RANGE $171F-$1721 DW_DATA 1
RANGE $1721-$1723 DW_DATA 1
RANGE $1723-$1725 DW_DATA 1
RANGE $1725-$1727 DW_DATA 1
RANGE $1727-$1729 DW_DATA 1
RANGE $1729-$172B DW_DATA 1
RANGE $172B-$172D DW_DATA 1
RANGE $172D-$172F DW_DATA 1
RANGE $172F-$1731 DW_DATA 1
RANGE $1731-$1733 DW_DATA 1
RANGE $1733-$1735 DW_DATA 1
RANGE $1735-$1737 DW_DATA 1
RANGE $1737-$1738 DB_DATA 1
RANGE $1738-$173A DB_DATA 2
RANGE $173A-$1745 DB_DATA 11
RANGE $1745-$1750 DB_DATA 11
RANGE $1750-$175B DB_DATA 11
RANGE $175B-$1766 DB_DATA 11
RANGE $1766-$1771 DB_DATA 11
RANGE $1771-$177C DB_DATA 11
RANGE $177C-$1787 DB_DATA 11
RANGE $1787-$1792 DB_DATA 11
RANGE $1792-$179D DB_DATA 11
RANGE $179D-$17A8 DB_DATA 11
RANGE $17A8-$17B3 DB_DATA 11
RANGE $17B3-$17BE DB_DATA 11
RANGE $17BE-$17C9 DB_DATA 11
RANGE $17C9-$17D4 DB_DATA 11
RANGE $17D4-$17DF DB_DATA 11
RANGE $17DF-$17EA DB_DATA 11
RANGE $17EA-$17F5 DB_DATA 11
RANGE $17F5-$1800 DB_DATA 11
RANGE $1800-$180B DB_DATA 11
RANGE $180B-$1816 DB_DATA 11
RANGE $1816-$1821 DB_DATA 11
RANGE $1821-$182C DB_DATA 11
RANGE $182C-$1837 DB_DATA 11
RANGE $1837-$1842 DB_DATA 11
RANGE $1842-$184D DB_DATA 11
RANGE $184D-$1858 DB_DATA 11
RANGE $1858-$1863 DB_DATA 11
RANGE $1863-$186E DB_DATA 11
RANGE $186E-$1879 DB_DATA 11
RANGE $1879-$1884 DB_DATA 11
RANGE $1884-$188F DB_DATA 11
RANGE $188F-$189A DB_DATA 11
RANGE $189A-$18A5 DB_DATA 11
RANGE $18A5-$18B0 DB_DATA 11
RANGE $18B0-$18BB DB_DATA 11
RANGE $18BB-$18C6 DB_DATA 11
RANGE $18C6-$18D1 DB_DATA 11
RANGE $18D1-$18DC DB_DATA 11
RANGE $18DC-$18E7 DB_DATA 11
RANGE $18E7-$18F2 DB_DATA 11
RANGE $18F2-$18FD DB_DATA 11
RANGE $18FD-$1908 DB_DATA 11
RANGE $1908-$1913 DB_DATA 11
RANGE $1913-$191E DB_DATA 11
RANGE $191E-$1929 DB_DATA 11
RANGE $1929-$1934 DB_DATA 11
RANGE $1934-$193F DB_DATA 11
RANGE $193F-$1940 DB_DATA 1
RANGE $1940-$1942 DB_DATA 2
RANGE $1942-$194D DB_DATA 11
RANGE $194D-$1958 DB_DATA 11
RANGE $1958-$1963 DB_DATA 11
RANGE $1963-$196E DB_DATA 11
RANGE $196E-$1979 DB_DATA 11
RANGE $1979-$1984 DB_DATA 11
RANGE $1984-$198F DB_DATA 11
RANGE $198F-$199A DB_DATA 11
RANGE $199A-$19A5 DB_DATA 11
RANGE $19A5-$19B0 DB_DATA 11
RANGE $19B0-$19BB DB_DATA 11
RANGE $19BB-$19C6 DB_DATA 11
RANGE $19C6-$19D1 DB_DATA 11
RANGE $19D1-$19DC DB_DATA 11
RANGE $19DC-$19E7 DB_DATA 11
RANGE $19E7-$19F2 DB_DATA 11
RANGE $19F2-$19FD DB_DATA 11
RANGE $19FD-$1A08 DB_DATA 11
RANGE $1A08-$1A13 DB_DATA 11
RANGE $1A13-$1A1E DB_DATA 11
RANGE $1A1E-$1A29 DB_DATA 11
RANGE $1A29-$1A34 DB_DATA 11
RANGE $1A34-$1A3F DB_DATA 11
RANGE $1A3F-$1A4A DB_DATA 11
RANGE $1A4A-$1A55 DB_DATA 11
RANGE $1A55-$1A60 DB_DATA 11
RANGE $1A60-$1A6B DB_DATA 11
RANGE $1A6B-$1A76 DB_DATA 11
RANGE $1A76-$1A81 DB_DATA 11
RANGE $1A81-$1A8C DB_DATA 11
RANGE $1A8C-$1A97 DB_DATA 11
RANGE $1A97-$1AA2 DB_DATA 11
RANGE $1AA2-$1AAD DB_DATA 11
RANGE $1AAD-$1AB8 DB_DATA 11
RANGE $1AB8-$1AC3 DB_DATA 11
RANGE $1AC3-$1ACE DB_DATA 11
RANGE $1ACE-$1AD9 DB_DATA 11
RANGE $1AD9-$1AE4 DB_DATA 11
RANGE $1AE4-$1AEF DB_DATA 11
RANGE $1AEF-$1AFA DB_DATA 11
RANGE $1AFA-$1B05 DB_DATA 11
RANGE $1B05-$1B10 DB_DATA 11
RANGE $1B10-$1B1B DB_DATA 11
RANGE $1B1B-$1B26 DB_DATA 11
RANGE $1B26-$1B31 DB_DATA 11
RANGE $1B31-$1B3C DB_DATA 11
RANGE $1B3C-$1B47 DB_DATA 11
RANGE $1B47-$1B48 DB_DATA 1
RANGE $1B48-$1B4A DB_DATA 2
RANGE $1B4A-$1B55 DB_DATA 11
RANGE $1B55-$1B60 DB_DATA 11
RANGE $1B60-$1B6B DB_DATA 11
RANGE $1B6B-$1B76 DB_DATA 11
RANGE $1B76-$1B81 DB_DATA 11
RANGE $1B81-$1B8C DB_DATA 11
RANGE $1B8C-$1B97 DB_DATA 11
RANGE $1B97-$1BA2 DB_DATA 11
RANGE $1BA2-$1BAD DB_DATA 11
RANGE $1BAD-$1BB8 DB_DATA 11
RANGE $1BB8-$1BC3 DB_DATA 11
RANGE $1BC3-$1BCE DB_DATA 11
RANGE $1BCE-$1BD9 DB_DATA 11
RANGE $1BD9-$1BE4 DB_DATA 11
RANGE $1BE4-$1BEF DB_DATA 11
RANGE $1BEF-$1BFA DB_DATA 11
RANGE $1BFA-$1C05 DB_DATA 11
RANGE $1C05-$1C10 DB_DATA 11
RANGE $1C10-$1C1B DB_DATA 11
RANGE $1C1B-$1C26 DB_DATA 11
RANGE $1C26-$1C31 DB_DATA 11
RANGE $1C31-$1C3C DB_DATA 11
RANGE $1C3C-$1C47 DB_DATA 11
RANGE $1C47-$1C52 DB_DATA 11
RANGE $1C52-$1C5D DB_DATA 11
RANGE $1C5D-$1C68 DB_DATA 11
RANGE $1C68-$1C73 DB_DATA 11
RANGE $1C73-$1C7E DB_DATA 11
RANGE $1C7E-$1C89 DB_DATA 11
RANGE $1C89-$1C94 DB_DATA 11
RANGE $1C94-$1C9F DB_DATA 11
RANGE $1C9F-$1CAA DB_DATA 11
RANGE $1CAA-$1CB5 DB_DATA 11
RANGE $1CB5-$1CC0 DB_DATA 11
RANGE $1CC0-$1CCB DB_DATA 11
RANGE $1CCB-$1CD6 DB_DATA 11
RANGE $1CD6-$1CE1 DB_DATA 11
RANGE $1CE1-$1CEC DB_DATA 11
RANGE $1CEC-$1CF7 DB_DATA 11
RANGE $1CF7-$1D02 DB_DATA 11
RANGE $1D02-$1D0D DB_DATA 11
RANGE $1D0D-$1D18 DB_DATA 11
RANGE $1D18-$1D23 DB_DATA 11
RANGE $1D23-$1D2E DB_DATA 11
RANGE $1D2E-$1D39 DB_DATA 11
RANGE $1D39-$1D44 DB_DATA 11
RANGE $1D44-$1D4F DB_DATA 11
RANGE $1D4F-$1D50 DB_DATA 1
RANGE $1D50-$1D52 DB_DATA 2
RANGE $1D52-$1D5D DB_DATA 11
RANGE $1D5D-$1D68 DB_DATA 11
RANGE $1D68-$1D73 DB_DATA 11
RANGE $1D73-$1D7E DB_DATA 11
RANGE $1D7E-$1D89 DB_DATA 11
RANGE $1D89-$1D94 DB_DATA 11
RANGE $1D94-$1D9F DB_DATA 11
RANGE $1D9F-$1DAA DB_DATA 11
RANGE $1DAA-$1DB5 DB_DATA 11
RANGE $1DB5-$1DC0 DB_DATA 11
RANGE $1DC0-$1DCB DB_DATA 11
RANGE $1DCB-$1DD6 DB_DATA 11
RANGE $1DD6-$1DE1 DB_DATA 11
RANGE $1DE1-$1DEC DB_DATA 11
RANGE $1DEC-$1DF7 DB_DATA 11
RANGE $1DF7-$1E02 DB_DATA 11
RANGE $1E02-$1E0D DB_DATA 11
RANGE $1E0D-$1E18 DB_DATA 11
RANGE $1E18-$1E23 DB_DATA 11
RANGE $1E23-$1E2E DB_DATA 11
RANGE $1E2E-$1E39 DB_DATA 11
RANGE $1E39-$1E44 DB_DATA 11
RANGE $1E44-$1E4F DB_DATA 11
RANGE $1E4F-$1E5A DB_DATA 11
RANGE $1E5A-$1E65 DB_DATA 11
RANGE $1E65-$1E70 DB_DATA 11
RANGE $1E70-$1E7B DB_DATA 11
RANGE $1E7B-$1E86 DB_DATA 11
RANGE $1E86-$1E91 DB_DATA 11
RANGE $1E91-$1E9C DB_DATA 11
RANGE $1E9C-$1EA7 DB_DATA 11
RANGE $1EA7-$1EB2 DB_DATA 11
RANGE $1EB2-$1EBD DB_DATA 11
RANGE $1EBD-$1EC8 DB_DATA 11
RANGE $1EC8-$1ED3 DB_DATA 11
RANGE $1ED3-$1EDE DB_DATA 11
RANGE $1EDE-$1EE9 DB_DATA 11
RANGE $1EE9-$1EF4 DB_DATA 11
RANGE $1EF4-$1EFF DB_DATA 11
RANGE $1EFF-$1F0A DB_DATA 11
RANGE $1F0A-$1F15 DB_DATA 11
RANGE $1F15-$1F20 DB_DATA 11
RANGE $1F20-$1F2B DB_DATA 11
RANGE $1F2B-$1F36 DB_DATA 11
RANGE $1F36-$1F41 DB_DATA 11
RANGE $1F41-$1F4C DB_DATA 11
RANGE $1F4C-$1F57 DB_DATA 11
RANGE $1F57-$1F58 DB_DATA 1
RANGE $1F58-$1F5A DB_DATA 2
RANGE $1F5A-$1F65 DB_DATA 11
RANGE $1F65-$1F70 DB_DATA 11
RANGE $1F70-$1F7B DB_DATA 11
RANGE $1F7B-$1F86 DB_DATA 11
RANGE $1F86-$1F91 DB_DATA 11
RANGE $1F91-$1F9C DB_DATA 11
RANGE $1F9C-$1FA7 DB_DATA 11
RANGE $1FA7-$1FB2 DB_DATA 11
RANGE $1FB2-$1FBD DB_DATA 11
RANGE $1FBD-$1FC8 DB_DATA 11
RANGE $1FC8-$1FD3 DB_DATA 11
RANGE $1FD3-$1FDE DB_DATA 11
RANGE $1FDE-$1FE9 DB_DATA 11
RANGE $1FE9-$1FF4 DB_DATA 11
RANGE $1FF4-$1FFF DB_DATA 11
RANGE $1FFF-$200A DB_DATA 11
RANGE $200A-$2015 DB_DATA 11
RANGE $2015-$2020 DB_DATA 11
RANGE $2020-$202B DB_DATA 11
RANGE $202B-$2036 DB_DATA 11
RANGE $2036-$2041 DB_DATA 11
RANGE $2041-$204C DB_DATA 11
RANGE $204C-$2057 DB_DATA 11
RANGE $2057-$2062 DB_DATA 11
RANGE $2062-$206D DB_DATA 11
RANGE $206D-$2078 DB_DATA 11
RANGE $2078-$2083 DB_DATA 11
RANGE $2083-$208E DB_DATA 11
RANGE $208E-$2099 DB_DATA 11
RANGE $2099-$20A4 DB_DATA 11
RANGE $20A4-$20AF DB_DATA 11
RANGE $20AF-$20BA DB_DATA 11
RANGE $20BA-$20C5 DB_DATA 11
RANGE $20C5-$20D0 DB_DATA 11
RANGE $20D0-$20DB DB_DATA 11
RANGE $20DB-$20E6 DB_DATA 11
RANGE $20E6-$20F1 DB_DATA 11
RANGE $20F1-$20FC DB_DATA 11
RANGE $20FC-$2107 DB_DATA 11
RANGE $2107-$2112 DB_DATA 11
RANGE $2112-$211D DB_DATA 11
RANGE $211D-$2128 DB_DATA 11
RANGE $2128-$2133 DB_DATA 11
RANGE $2133-$213E DB_DATA 11
RANGE $213E-$2149 DB_DATA 11
RANGE $2149-$2154 DB_DATA 11
RANGE $2154-$215F DB_DATA 11
RANGE $215F-$2160 DB_DATA 1
RANGE $2160-$2162 DB_DATA 2
RANGE $2162-$216D DB_DATA 11
RANGE $216D-$2178 DB_DATA 11
RANGE $2178-$2183 DB_DATA 11
RANGE $2183-$218E DB_DATA 11
RANGE $218E-$2199 DB_DATA 11
RANGE $2199-$21A4 DB_DATA 11
RANGE $21A4-$21AF DB_DATA 11
RANGE $21AF-$21BA DB_DATA 11
RANGE $21BA-$21C5 DB_DATA 11
RANGE $21C5-$21D0 DB_DATA 11
RANGE $21D0-$21DB DB_DATA 11
RANGE $21DB-$21E6 DB_DATA 11
RANGE $21E6-$21F1 DB_DATA 11
RANGE $21F1-$21FC DB_DATA 11
RANGE $21FC-$2207 DB_DATA 11
RANGE $2207-$2212 DB_DATA 11
RANGE $2212-$221D DB_DATA 11
RANGE $221D-$2228 DB_DATA 11
RANGE $2228-$2233 DB_DATA 11
RANGE $2233-$223E DB_DATA 11
RANGE $223E-$2249 DB_DATA 11
RANGE $2249-$2254 DB_DATA 11
RANGE $2254-$225F DB_DATA 11
RANGE $225F-$226A DB_DATA 11
RANGE $226A-$2275 DB_DATA 11
RANGE $2275-$2280 DB_DATA 11
RANGE $2280-$228B DB_DATA 11
RANGE $228B-$2296 DB_DATA 11
RANGE $2296-$22A1 DB_DATA 11
RANGE $22A1-$22AC DB_DATA 11
RANGE $22AC-$22B7 DB_DATA 11
RANGE $22B7-$22C2 DB_DATA 11
RANGE $22C2-$22CD DB_DATA 11
RANGE $22CD-$22D8 DB_DATA 11
RANGE $22D8-$22E3 DB_DATA 11
RANGE $22E3-$22EE DB_DATA 11
RANGE $22EE-$22F9 DB_DATA 11
RANGE $22F9-$2304 DB_DATA 11
RANGE $2304-$230F DB_DATA 11
RANGE $230F-$231A DB_DATA 11
RANGE $231A-$2325 DB_DATA 11
RANGE $2325-$2330 DB_DATA 11
RANGE $2330-$233B DB_DATA 11
RANGE $233B-$2346 DB_DATA 11
RANGE $2346-$2351 DB_DATA 11
RANGE $2351-$235C DB_DATA 11
RANGE $235C-$2367 DB_DATA 11
RANGE $2367-$2368 DB_DATA 1
RANGE $2368-$236A DB_DATA 2
RANGE $236A-$2375 DB_DATA 11
RANGE $2375-$2380 DB_DATA 11
RANGE $2380-$238B DB_DATA 11
RANGE $238B-$2396 DB_DATA 11
RANGE $2396-$23A1 DB_DATA 11
RANGE $23A1-$23AC DB_DATA 11
RANGE $23AC-$23B7 DB_DATA 11
RANGE $23B7-$23C2 DB_DATA 11
RANGE $23C2-$23CD DB_DATA 11
RANGE $23CD-$23D8 DB_DATA 11
RANGE $23D8-$23E3 DB_DATA 11
RANGE $23E3-$23EE DB_DATA 11
RANGE $23EE-$23F9 DB_DATA 11
RANGE $23F9-$2404 DB_DATA 11
RANGE $2404-$240F DB_DATA 11
RANGE $240F-$241A DB_DATA 11
RANGE $241A-$2425 DB_DATA 11
RANGE $2425-$2430 DB_DATA 11
RANGE $2430-$243B DB_DATA 11
RANGE $243B-$2446 DB_DATA 11
RANGE $2446-$2451 DB_DATA 11
RANGE $2451-$245C DB_DATA 11
RANGE $245C-$2467 DB_DATA 11
RANGE $2467-$2472 DB_DATA 11
RANGE $2472-$247D DB_DATA 11
RANGE $247D-$2488 DB_DATA 11
RANGE $2488-$2493 DB_DATA 11
RANGE $2493-$249E DB_DATA 11
RANGE $249E-$24A9 DB_DATA 11
RANGE $24A9-$24B4 DB_DATA 11
RANGE $24B4-$24BF DB_DATA 11
RANGE $24BF-$24CA DB_DATA 11
RANGE $24CA-$24D5 DB_DATA 11
RANGE $24D5-$24E0 DB_DATA 11
RANGE $24E0-$24EB DB_DATA 11
RANGE $24EB-$24F6 DB_DATA 11
RANGE $24F6-$2501 DB_DATA 11
RANGE $2501-$250C DB_DATA 11
RANGE $250C-$2517 DB_DATA 11
RANGE $2517-$2522 DB_DATA 11
RANGE $2522-$252D DB_DATA 11
RANGE $252D-$2538 DB_DATA 11
RANGE $2538-$2543 DB_DATA 11
RANGE $2543-$254E DB_DATA 11
RANGE $254E-$2559 DB_DATA 11
RANGE $2559-$2564 DB_DATA 11
RANGE $2564-$256F DB_DATA 11
RANGE $256F-$2570 DB_DATA 1
RANGE $2570-$2572 DB_DATA 2
RANGE $2572-$257D DB_DATA 11
RANGE $257D-$2588 DB_DATA 11
RANGE $2588-$2593 DB_DATA 11
RANGE $2593-$259E DB_DATA 11
RANGE $259E-$25A9 DB_DATA 11
RANGE $25A9-$25B4 DB_DATA 11
RANGE $25B4-$25BF DB_DATA 11
RANGE $25BF-$25CA DB_DATA 11
RANGE $25CA-$25D5 DB_DATA 11
RANGE $25D5-$25E0 DB_DATA 11
RANGE $25E0-$25EB DB_DATA 11
RANGE $25EB-$25F6 DB_DATA 11
RANGE $25F6-$2601 DB_DATA 11
RANGE $2601-$260C DB_DATA 11
RANGE $260C-$2617 DB_DATA 11
RANGE $2617-$2622 DB_DATA 11
RANGE $2622-$262D DB_DATA 11
RANGE $262D-$2638 DB_DATA 11
RANGE $2638-$2643 DB_DATA 11
RANGE $2643-$264E DB_DATA 11
RANGE $264E-$2659 DB_DATA 11
RANGE $2659-$2664 DB_DATA 11
RANGE $2664-$266F DB_DATA 11
RANGE $266F-$267A DB_DATA 11
RANGE $267A-$2685 DB_DATA 11
RANGE $2685-$2690 DB_DATA 11
RANGE $2690-$269B DB_DATA 11
RANGE $269B-$26A6 DB_DATA 11
RANGE $26A6-$26B1 DB_DATA 11
RANGE $26B1-$26BC DB_DATA 11
RANGE $26BC-$26C7 DB_DATA 11
RANGE $26C7-$26D2 DB_DATA 11
RANGE $26D2-$26DD DB_DATA 11
RANGE $26DD-$26E8 DB_DATA 11
RANGE $26E8-$26F3 DB_DATA 11
RANGE $26F3-$26FE DB_DATA 11
RANGE $26FE-$2709 DB_DATA 11
RANGE $2709-$2714 DB_DATA 11
RANGE $2714-$271F DB_DATA 11
RANGE $271F-$272A DB_DATA 11
RANGE $272A-$2735 DB_DATA 11
RANGE $2735-$2740 DB_DATA 11
RANGE $2740-$274B DB_DATA 11
RANGE $274B-$2756 DB_DATA 11
RANGE $2756-$2761 DB_DATA 11
RANGE $2761-$276C DB_DATA 11
RANGE $276C-$2777 DB_DATA 11
RANGE $2777-$2778 DB_DATA 1
RANGE $2778-$277A DB_DATA 2
RANGE $277A-$2785 DB_DATA 11
RANGE $2785-$2790 DB_DATA 11
RANGE $2790-$279B DB_DATA 11
RANGE $279B-$27A6 DB_DATA 11
RANGE $27A6-$27B1 DB_DATA 11
RANGE $27B1-$27BC DB_DATA 11
RANGE $27BC-$27C7 DB_DATA 11
RANGE $27C7-$27D2 DB_DATA 11
RANGE $27D2-$27DD DB_DATA 11
RANGE $27DD-$27E8 DB_DATA 11
RANGE $27E8-$27F3 DB_DATA 11
RANGE $27F3-$27FE DB_DATA 11
RANGE $27FE-$2809 DB_DATA 11
RANGE $2809-$2814 DB_DATA 11
RANGE $2814-$281F DB_DATA 11
RANGE $281F-$282A DB_DATA 11
RANGE $282A-$2835 DB_DATA 11
RANGE $2835-$2840 DB_DATA 11
RANGE $2840-$284B DB_DATA 11
RANGE $284B-$2856 DB_DATA 11
RANGE $2856-$2861 DB_DATA 11
RANGE $2861-$286C DB_DATA 11
RANGE $286C-$2877 DB_DATA 11
RANGE $2877-$2882 DB_DATA 11
RANGE $2882-$288D DB_DATA 11
RANGE $288D-$2898 DB_DATA 11
RANGE $2898-$28A3 DB_DATA 11
RANGE $28A3-$28AE DB_DATA 11
RANGE $28AE-$28B9 DB_DATA 11
RANGE $28B9-$28C4 DB_DATA 11
RANGE $28C4-$28CF DB_DATA 11
RANGE $28CF-$28DA DB_DATA 11
RANGE $28DA-$28E5 DB_DATA 11
RANGE $28E5-$28F0 DB_DATA 11
RANGE $28F0-$28FB DB_DATA 11
RANGE $28FB-$2906 DB_DATA 11
RANGE $2906-$2911 DB_DATA 11
RANGE $2911-$291C DB_DATA 11
RANGE $291C-$2927 DB_DATA 11
RANGE $2927-$2932 DB_DATA 11
RANGE $2932-$293D DB_DATA 11
RANGE $293D-$2948 DB_DATA 11
RANGE $2948-$2953 DB_DATA 11
RANGE $2953-$295E DB_DATA 11
RANGE $295E-$2969 DB_DATA 11
RANGE $2969-$2974 DB_DATA 11
RANGE $2974-$297F DB_DATA 11
RANGE $297F-$2980 DB_DATA 1
RANGE $2980-$2982 DB_DATA 2
RANGE $2982-$298D DB_DATA 11
RANGE $298D-$2998 DB_DATA 11
RANGE $2998-$29A3 DB_DATA 11
RANGE $29A3-$29AE DB_DATA 11
RANGE $29AE-$29B9 DB_DATA 11
RANGE $29B9-$29C4 DB_DATA 11
RANGE $29C4-$29CF DB_DATA 11
RANGE $29CF-$29DA DB_DATA 11
RANGE $29DA-$29E5 DB_DATA 11
RANGE $29E5-$29F0 DB_DATA 11
RANGE $29F0-$29FB DB_DATA 11
RANGE $29FB-$2A06 DB_DATA 11
RANGE $2A06-$2A11 DB_DATA 11
RANGE $2A11-$2A1C DB_DATA 11
RANGE $2A1C-$2A27 DB_DATA 11
RANGE $2A27-$2A32 DB_DATA 11
RANGE $2A32-$2A3D DB_DATA 11
RANGE $2A3D-$2A48 DB_DATA 11
RANGE $2A48-$2A53 DB_DATA 11
RANGE $2A53-$2A5E DB_DATA 11
RANGE $2A5E-$2A69 DB_DATA 11
RANGE $2A69-$2A74 DB_DATA 11
RANGE $2A74-$2A7F DB_DATA 11
RANGE $2A7F-$2A8A DB_DATA 11
RANGE $2A8A-$2A95 DB_DATA 11
RANGE $2A95-$2AA0 DB_DATA 11
RANGE $2AA0-$2AAB DB_DATA 11
RANGE $2AAB-$2AB6 DB_DATA 11
RANGE $2AB6-$2AC1 DB_DATA 11
RANGE $2AC1-$2ACC DB_DATA 11
RANGE $2ACC-$2AD7 DB_DATA 11
RANGE $2AD7-$2AE2 DB_DATA 11
RANGE $2AE2-$2AED DB_DATA 11
RANGE $2AED-$2AF8 DB_DATA 11
RANGE $2AF8-$2B03 DB_DATA 11
RANGE $2B03-$2B0E DB_DATA 11
RANGE $2B0E-$2B19 DB_DATA 11
RANGE $2B19-$2B24 DB_DATA 11
RANGE $2B24-$2B2F DB_DATA 11
RANGE $2B2F-$2B3A DB_DATA 11
RANGE $2B3A-$2B45 DB_DATA 11
RANGE $2B45-$2B50 DB_DATA 11
RANGE $2B50-$2B5B DB_DATA 11
RANGE $2B5B-$2B66 DB_DATA 11
RANGE $2B66-$2B71 DB_DATA 11
RANGE $2B71-$2B7C DB_DATA 11
RANGE $2B7C-$2B87 DB_DATA 11
RANGE $2B87-$2B88 DB_DATA 1
RANGE $2B88-$2B8A DB_DATA 2
RANGE $2B8A-$2B95 DB_DATA 11
RANGE $2B95-$2BA0 DB_DATA 11
RANGE $2BA0-$2BAB DB_DATA 11
RANGE $2BAB-$2BB6 DB_DATA 11
RANGE $2BB6-$2BC1 DB_DATA 11
RANGE $2BC1-$2BCC DB_DATA 11
RANGE $2BCC-$2BD7 DB_DATA 11
RANGE $2BD7-$2BE2 DB_DATA 11
RANGE $2BE2-$2BED DB_DATA 11
RANGE $2BED-$2BF8 DB_DATA 11
RANGE $2BF8-$2C03 DB_DATA 11
RANGE $2C03-$2C0E DB_DATA 11
RANGE $2C0E-$2C19 DB_DATA 11
RANGE $2C19-$2C24 DB_DATA 11
RANGE $2C24-$2C2F DB_DATA 11
RANGE $2C2F-$2C3A DB_DATA 11
RANGE $2C3A-$2C45 DB_DATA 11
RANGE $2C45-$2C50 DB_DATA 11
RANGE $2C50-$2C5B DB_DATA 11
RANGE $2C5B-$2C66 DB_DATA 11
RANGE $2C66-$2C71 DB_DATA 11
RANGE $2C71-$2C7C DB_DATA 11
RANGE $2C7C-$2C87 DB_DATA 11
RANGE $2C87-$2C92 DB_DATA 11
RANGE $2C92-$2C9D DB_DATA 11
RANGE $2C9D-$2CA8 DB_DATA 11
RANGE $2CA8-$2CB3 DB_DATA 11
RANGE $2CB3-$2CBE DB_DATA 11
RANGE $2CBE-$2CC9 DB_DATA 11
RANGE $2CC9-$2CD4 DB_DATA 11
RANGE $2CD4-$2CDF DB_DATA 11
RANGE $2CDF-$2CEA DB_DATA 11
RANGE $2CEA-$2CF5 DB_DATA 11
RANGE $2CF5-$2D00 DB_DATA 11
RANGE $2D00-$2D0B DB_DATA 11
RANGE $2D0B-$2D16 DB_DATA 11
RANGE $2D16-$2D21 DB_DATA 11
RANGE $2D21-$2D2C DB_DATA 11
RANGE $2D2C-$2D37 DB_DATA 11
RANGE $2D37-$2D42 DB_DATA 11
RANGE $2D42-$2D4D DB_DATA 11
RANGE $2D4D-$2D58 DB_DATA 11
RANGE $2D58-$2D63 DB_DATA 11
RANGE $2D63-$2D6E DB_DATA 11
RANGE $2D6E-$2D79 DB_DATA 11
RANGE $2D79-$2D84 DB_DATA 11
RANGE $2D84-$2D8F DB_DATA 11
RANGE $2D8F-$2D90 DB_DATA 1
RANGE $2D90-$2D92 DB_DATA 2
RANGE $2D92-$2D9D DB_DATA 11
RANGE $2D9D-$2DA8 DB_DATA 11
RANGE $2DA8-$2DB3 DB_DATA 11
RANGE $2DB3-$2DBE DB_DATA 11
RANGE $2DBE-$2DC9 DB_DATA 11
RANGE $2DC9-$2DD4 DB_DATA 11
RANGE $2DD4-$2DDF DB_DATA 11
RANGE $2DDF-$2DEA DB_DATA 11
RANGE $2DEA-$2DF5 DB_DATA 11
RANGE $2DF5-$2E00 DB_DATA 11
RANGE $2E00-$2E0B DB_DATA 11
RANGE $2E0B-$2E16 DB_DATA 11
RANGE $2E16-$2E21 DB_DATA 11
RANGE $2E21-$2E2C DB_DATA 11
RANGE $2E2C-$2E37 DB_DATA 11
RANGE $2E37-$2E42 DB_DATA 11
RANGE $2E42-$2E4D DB_DATA 11
RANGE $2E4D-$2E58 DB_DATA 11
RANGE $2E58-$2E63 DB_DATA 11
RANGE $2E63-$2E6E DB_DATA 11
RANGE $2E6E-$2E79 DB_DATA 11
RANGE $2E79-$2E84 DB_DATA 11
RANGE $2E84-$2E8F DB_DATA 11
RANGE $2E8F-$2E9A DB_DATA 11
RANGE $2E9A-$2EA5 DB_DATA 11
RANGE $2EA5-$2EB0 DB_DATA 11
RANGE $2EB0-$2EBB DB_DATA 11
RANGE $2EBB-$2EC6 DB_DATA 11
RANGE $2EC6-$2ED1 DB_DATA 11
RANGE $2ED1-$2EDC DB_DATA 11
RANGE $2EDC-$2EE7 DB_DATA 11
RANGE $2EE7-$2EF2 DB_DATA 11
RANGE $2EF2-$2EFD DB_DATA 11
RANGE $2EFD-$2F08 DB_DATA 11
RANGE $2F08-$2F13 DB_DATA 11
RANGE $2F13-$2F1E DB_DATA 11
RANGE $2F1E-$2F29 DB_DATA 11
RANGE $2F29-$2F34 DB_DATA 11
RANGE $2F34-$2F3F DB_DATA 11
RANGE $2F3F-$2F4A DB_DATA 11
RANGE $2F4A-$2F55 DB_DATA 11
RANGE $2F55-$2F60 DB_DATA 11
RANGE $2F60-$2F6B DB_DATA 11
RANGE $2F6B-$2F76 DB_DATA 11
RANGE $2F76-$2F81 DB_DATA 11
RANGE $2F81-$2F8C DB_DATA 11
RANGE $2F8C-$2F97 DB_DATA 11
RANGE $2F97-$2F99 DB_DATA 2
RANGE $2F99-$2F9D DB_DATA 4
RANGE $2F9D-$2FA1 DB_DATA 4
RANGE $2FA1-$2FA5 DB_DATA 4
RANGE $2FA5-$2FA9 DB_DATA 4
RANGE $2FA9-$2FAD DB_DATA 4
RANGE $2FAD-$2FB1 DB_DATA 4
RANGE $2FB1-$2FB5 DB_DATA 4
RANGE $2FB5-$2FB9 DB_DATA 4
RANGE $2FB9-$2FBD DB_DATA 4
RANGE $2FBD-$2FC1 DB_DATA 4
RANGE $2FC1-$2FC5 DB_DATA 4
RANGE $2FC5-$2FC9 DB_DATA 4
RANGE $2FC9-$2FCD DB_DATA 4
RANGE $2FCD-$2FD1 DB_DATA 4
RANGE $2FD1-$2FD5 DB_DATA 4
RANGE $2FD5-$2FD9 DB_DATA 4
RANGE $2FD9-$2FDD DB_DATA 4
RANGE $2FDD-$2FE1 DB_DATA 4
RANGE $2FE1-$2FE5 DB_DATA 4
RANGE $2FE5-$2FE9 DB_DATA 4
RANGE $2FE9-$2FED DB_DATA 4
RANGE $2FED-$2FF1 DB_DATA 4
RANGE $2FF1-$2FF5 DB_DATA 4
RANGE $2FF5-$2FF9 DB_DATA 4
RANGE $2FF9-$2FFD DB_DATA 4
RANGE $2FFD-$3001 DB_DATA 4
RANGE $3001-$3005 DB_DATA 4
RANGE $3005-$3009 DB_DATA 4
RANGE $3009-$300D DB_DATA 4
RANGE $300D-$3011 DB_DATA 4
RANGE $3011-$3015 DB_DATA 4
RANGE $3015-$3019 DB_DATA 4
RANGE $3019-$301D DB_DATA 4
RANGE $301D-$3021 DB_DATA 4
RANGE $3021-$3025 DB_DATA 4
RANGE $3025-$3029 DB_DATA 4
RANGE $3029-$302D DB_DATA 4
RANGE $302D-$3031 DB_DATA 4
RANGE $3031-$3035 DB_DATA 4
RANGE $3035-$3039 DB_DATA 4
RANGE $3039-$303D DB_DATA 4
RANGE $303D-$3041 DB_DATA 4
RANGE $3041-$3045 DB_DATA 4
RANGE $3045-$3049 DB_DATA 4
RANGE $3049-$304D DB_DATA 4
RANGE $304D-$3051 DB_DATA 4
RANGE $3051-$3055 DB_DATA 4
RANGE $3055-$3059 DB_DATA 4
RANGE $3059-$305D DB_DATA 4
RANGE $305D-$3061 DB_DATA 4
RANGE $3061-$311F CODE
RANGE $311F-$3123 DW_DATA 2
RANGE $3123-$3127 DW_DATA 2
RANGE $3127-$312B DW_DATA 2
RANGE $312B-$312F DW_DATA 2
RANGE $312F-$3133 DW_DATA 2
RANGE $3133-$3137 DW_DATA 2
RANGE $3137-$313B DW_DATA 2
RANGE $313B-$313F DW_DATA 2
RANGE $313F-$3143 DW_DATA 2
RANGE $3143-$3147 DW_DATA 2
RANGE $3147-$314B DW_DATA 2
RANGE $314B-$314F DW_DATA 2
RANGE $314F-$3153 DW_DATA 2
RANGE $3153-$3157 DW_DATA 2
RANGE $3157-$315B DW_DATA 2
RANGE $315B-$315F DW_DATA 2
RANGE $315F-$3163 DW_DATA 2
RANGE $3163-$3167 DW_DATA 2
RANGE $3167-$316B DW_DATA 2
RANGE $316B-$3E1D CODE
RANGE $3E1D-$3E1E DB_DATA 1
RANGE $3E1E-$3E1F DB_DATA 1
RANGE $3E1F-$3E20 DB_DATA 1
RANGE $3E20-$3E21 DB_DATA 1
RANGE $3E21-$3E22 DB_DATA 1
RANGE $3E22-$3E23 DB_DATA 1
RANGE $3E23-$3E24 DB_DATA 1
RANGE $3E24-$3E25 DB_DATA 1
RANGE $3E25-$3E26 DB_DATA 1
RANGE $3E26-$3E27 DB_DATA 1
RANGE $3E27-$3E28 DB_DATA 1
RANGE $3E28-$3E29 DB_DATA 1
RANGE $3E29-$3E2A DB_DATA 1
RANGE $3E2A-$3E2B DB_DATA 1
RANGE $3E2B-$3E2C DB_DATA 1
RANGE $3E2C-$3E2D DB_DATA 1
RANGE $3E2D-$3E2E DB_DATA 1
RANGE $3E2E-$3E2F DB_DATA 1
RANGE $3E2F-$3E30 DB_DATA 1
RANGE $3E30-$3E31 DB_DATA 1
RANGE $3E31-$3E32 DB_DATA 1
RANGE $3E32-$3E34 DB_DATA 2
RANGE $3E34-$3E37 DB_DATA 3
RANGE $3E37-$3E3A DB_DATA 3
RANGE $3E3A-$3E3D DB_DATA 3
RANGE $3E3D-$3E40 DB_DATA 3
RANGE $3E40-$3E43 DB_DATA 3
RANGE $3E43-$3E46 DB_DATA 3
RANGE $3E46-$3E49 DB_DATA 3
RANGE $3E49-$3E4C DB_DATA 3
RANGE $3E4C-$3E4D DB_DATA 1
RANGE $3E4D-$3E4E DB_DATA 1
RANGE $3E4E-$3E50 DB_DATA 2
RANGE $3E50-$3E53 DB_DATA 3
RANGE $3E53-$3E56 DB_DATA 3
RANGE $3E56-$3E59 DB_DATA 3
RANGE $3E59-$3E5C DB_DATA 3
RANGE $3E5C-$3E5D DB_DATA 1
RANGE $3E5D-$3E5E DB_DATA 1
RANGE $3E5E-$3E60 DB_DATA 2
RANGE $3E60-$3E63 DB_DATA 3
RANGE $3E63-$3E66 DB_DATA 3
RANGE $3E66-$3E69 DB_DATA 3
RANGE $3E69-$3E6C DB_DATA 3
RANGE $3E6C-$3E6F DB_DATA 3
RANGE $3E6F-$3E70 DB_DATA 1
RANGE $3E70-$3E71 DB_DATA 1
RANGE $3E71-$3E73 DB_DATA 2
RANGE $3E73-$3E76 DB_DATA 3
RANGE $3E76-$3E79 DB_DATA 3
RANGE $3E79-$3E7C DB_DATA 3
RANGE $3E7C-$3E7D DB_DATA 1
RANGE $3E7D-$3E7E DB_DATA 1
RANGE $3E7E-$3E80 DB_DATA 2
RANGE $3E80-$3E83 DB_DATA 3
RANGE $3E83-$3E86 DB_DATA 3
RANGE $3E86-$3E89 DB_DATA 3
RANGE $3E89-$3E8C DB_DATA 3
RANGE $3E8C-$3E8F DB_DATA 3
RANGE $3E8F-$3E90 DB_DATA 1
RANGE $3E90-$3E91 DB_DATA 1
RANGE $3E91-$3E93 DB_DATA 2
RANGE $3E93-$3E96 DB_DATA 3
RANGE $3E96-$3E99 DB_DATA 3
RANGE $3E99-$3E9C DB_DATA 3
RANGE $3E9C-$3E9F DB_DATA 3
RANGE $3E9F-$3EA0 DB_DATA 1
RANGE $3EA0-$3EA1 DB_DATA 1
RANGE $3EA1-$3EA3 DB_DATA 2
RANGE $3EA3-$3EA6 DB_DATA 3
RANGE $3EA6-$3EA9 DB_DATA 3
RANGE $3EA9-$3EAC DB_DATA 3
RANGE $3EAC-$3EAF DB_DATA 3
RANGE $3EAF-$3EB2 DB_DATA 3
RANGE $3EB2-$3EB3 DB_DATA 1
RANGE $3EB3-$3EB4 DB_DATA 1
RANGE $3EB4-$3EB6 DB_DATA 2
RANGE $3EB6-$3EB9 DB_DATA 3
RANGE $3EB9-$3EBC DB_DATA 3
RANGE $3EBC-$3EBF DB_DATA 3
RANGE $3EBF-$3EC2 DB_DATA 3
RANGE $3EC2-$3EC5 DB_DATA 3
RANGE $3EC5-$3EC6 DB_DATA 1
RANGE $3EC6-$3EC7 DB_DATA 1
RANGE $3EC7-$3EC8 DB_DATA 1
RANGE $3EC8-$3ECA DB_DATA 2
RANGE $3ECA-$3ECD DB_DATA 3
RANGE $3ECD-$3ED0 DB_DATA 3
RANGE $3ED0-$3ED3 DB_DATA 3
RANGE $3ED3-$3ED4 DB_DATA 1
RANGE $3ED4-$3ED5 DB_DATA 1
RANGE $3ED5-$3ED7 DB_DATA 2
RANGE $3ED7-$3EDA DB_DATA 3
RANGE $3EDA-$3EDD DB_DATA 3
RANGE $3EDD-$3EE0 DB_DATA 3
RANGE $3EE0-$3EE1 DB_DATA 1
RANGE $3EE1-$3EE2 DB_DATA 1
RANGE $3EE2-$3EE4 DB_DATA 2
RANGE $3EE4-$3EE6 DW_DATA 1
RANGE $3EE6-$3EE8 DW_DATA 1
RANGE $3EE8-$3EEA DW_DATA 1
RANGE $3EEA-$3EEC DW_DATA 1
RANGE $3EEC-$3EEE DW_DATA 1
RANGE $3EEE-$3EF0 DW_DATA 1
RANGE $3EF0-$3EF2 DB_DATA 2
RANGE $3EF2-$3EF5 DB_DATA 3
RANGE $3EF5-$3EF8 DB_DATA 3
RANGE $3EF8-$3EFB DB_DATA 3
RANGE $3EFB-$3EFE DB_DATA 3
RANGE $3EFE-$3EFF DB_DATA 1
RANGE $3EFF-$3F01 DB_DATA 2
RANGE $3F01-$3F04 DB_DATA 3
RANGE $3F04-$3F07 DB_DATA 3
RANGE $3F07-$3F0A DB_DATA 3
RANGE $3F0A-$3F0D DB_DATA 3
RANGE $3F0D-$3F10 DB_DATA 3
RANGE $3F10-$3F13 DB_DATA 3
RANGE $3F13-$3F14 DB_DATA 1
RANGE $3F14-$3F16 DB_DATA 2
RANGE $3F16-$3F19 DB_DATA 3
RANGE $3F19-$3F1C DB_DATA 3
RANGE $3F1C-$3F1F DB_DATA 3
RANGE $3F1F-$3F22 DB_DATA 3
RANGE $3F22-$3F25 DB_DATA 3
RANGE $3F25-$3F26 DB_DATA 1
RANGE $3F26-$3F28 DB_DATA 2
RANGE $3F28-$3F2B DB_DATA 3
RANGE $3F2B-$3F2E DB_DATA 3
RANGE $3F2E-$3F31 DB_DATA 3
RANGE $3F31-$3F34 DB_DATA 3
RANGE $3F34-$3F37 DB_DATA 3
RANGE $3F37-$3F3A DB_DATA 3
RANGE $3F3A-$3F3B DB_DATA 1
RANGE $3F3B-$3F3D DW_DATA 1
RANGE $3F3D-$3F3F DW_DATA 1
RANGE $3F3F-$3F41 DW_DATA 1
RANGE $3F41-$3F43 DW_DATA 1
RANGE $3F43-$3F45 DW_DATA 1
RANGE $3F45-$3F47 DW_DATA 1
RANGE $3F47-$3F49 DB_DATA 2
RANGE $3F49-$3F4C DB_DATA 3
RANGE $3F4C-$3F4F DB_DATA 3
RANGE $3F4F-$3F52 DB_DATA 3
RANGE $3F52-$3F55 DB_DATA 3
RANGE $3F55-$3F58 DB_DATA 3
RANGE $3F58-$3F5B DB_DATA 3
RANGE $3F5B-$3F5E DB_DATA 3
RANGE $3F5E-$3F61 DB_DATA 3
RANGE $3F61-$3F64 DB_DATA 3
RANGE $3F64-$3F67 DB_DATA 3
RANGE $3F67-$3F6A DB_DATA 3
RANGE $3F6A-$3F6D DB_DATA 3
RANGE $3F6D-$3F70 DB_DATA 3
RANGE $3F70-$3F71 DB_DATA 1
RANGE $3F71-$3F73 DB_DATA 2
RANGE $3F73-$3F76 DB_DATA 3
RANGE $3F76-$3F79 DB_DATA 3
RANGE $3F79-$3F7C DB_DATA 3
RANGE $3F7C-$3F7F DB_DATA 3
RANGE $3F7F-$3F82 DB_DATA 3
RANGE $3F82-$3F85 DB_DATA 3
RANGE $3F85-$3F88 DB_DATA 3
RANGE $3F88-$3F8B DB_DATA 3
RANGE $3F8B-$3F8E DB_DATA 3
RANGE $3F8E-$3F91 DB_DATA 3
RANGE $3F91-$3F94 DB_DATA 3
RANGE $3F94-$3F97 DB_DATA 3
RANGE $3F97-$3F9A DB_DATA 3
RANGE $3F9A-$3F9B DB_DATA 1
RANGE $3F9B-$3F9D DB_DATA 2
RANGE $3F9D-$3FA0 DB_DATA 3
RANGE $3FA0-$3FA3 DB_DATA 3
RANGE $3FA3-$3FA6 DB_DATA 3
RANGE $3FA6-$3FA9 DB_DATA 3
RANGE $3FA9-$3FAC DB_DATA 3
RANGE $3FAC-$3FAF DB_DATA 3
RANGE $3FAF-$3FB2 DB_DATA 3
RANGE $3FB2-$3FB5 DB_DATA 3
RANGE $3FB5-$3FB8 DB_DATA 3
RANGE $3FB8-$3FBB DB_DATA 3
RANGE $3FBB-$3FBE DB_DATA 3
RANGE $3FBE-$3FC1 DB_DATA 3
RANGE $3FC1-$3FC4 DB_DATA 3
RANGE $3FC4-$3FC5 DB_DATA 1
RANGE $3FC5-$3FC7 DB_DATA 2
RANGE $3FC7-$3FCA DB_DATA 3
RANGE $3FCA-$3FCD DB_DATA 3
RANGE $3FCD-$3FD0 DB_DATA 3
RANGE $3FD0-$3FD3 DB_DATA 3
RANGE $3FD3-$3FD6 DB_DATA 3
RANGE $3FD6-$3FD7 DB_DATA 1
RANGE $3FD7-$3FD9 DW_DATA 1
RANGE $3FD9-$3FDB DW_DATA 1
RANGE $3FDB-$3FDD DW_DATA 1
RANGE $3FDD-$3FDF DW_DATA 1
RANGE $3FDF-$3FE1 DW_DATA 1
RANGE $3FE1-$3FE3 DW_DATA 1
RANGE $3FE3-$3FE5 DW_DATA 1
RANGE $3FE5-$3FE7 DW_DATA 1
RANGE $3FE7-$3FE9 DW_DATA 1
RANGE $3FE9-$3FEB DW_DATA 1
RANGE $3FEB-$3FED DW_DATA 1
RANGE $3FED-$3FEF DW_DATA 1
RANGE $3FEF-$3FF1 DW_DATA 1
RANGE $3FF1-$3FF3 DW_DATA 1
RANGE $3FF3-$3FF5 DW_DATA 1
RANGE $3FF5-$3FF7 DW_DATA 1
RANGE $3FF7-$3FF9 DW_DATA 1
RANGE $3FF9-$3FFB DW_DATA 1
RANGE $3FFB-$3FFD DW_DATA 1
RANGE $3FFD-$3FFF DW_DATA 1
RANGE $3FFF-$4001 DW_DATA 1
RANGE $4001-$4003 DB_DATA 2
RANGE $4003-$4005 DB_DATA 2
RANGE $4005-$4007 DW_DATA 1
RANGE $4007-$4008 DB_DATA 1
RANGE $4008-$400C DB_DATA 4
RANGE $400C-$400D DB_DATA 1
RANGE $400D-$400F DW_DATA 1
RANGE $400F-$4010 DB_DATA 1
RANGE $4010-$4014 DB_DATA 4
RANGE $4014-$4015 DB_DATA 1
RANGE $4015-$4019 DB_DATA 4
RANGE $4019-$401A DB_DATA 1
RANGE $401A-$401C DW_DATA 1
RANGE $401C-$401D DB_DATA 1
RANGE $401D-$401F DW_DATA 1
RANGE $401F-$4020 DB_DATA 1
RANGE $4020-$4024 DB_DATA 4
RANGE $4024-$4025 DB_DATA 1
RANGE $4025-$4029 DB_DATA 4
RANGE $4029-$402A DB_DATA 1
RANGE $402A-$402E DB_DATA 4
RANGE $402E-$402F DB_DATA 1
RANGE $402F-$4033 DB_DATA 4
RANGE $4033-$4034 DB_DATA 1
RANGE $4034-$4038 DB_DATA 4
RANGE $4038-$4039 DB_DATA 1
RANGE $4039-$403D DB_DATA 4
RANGE $403D-$403E DB_DATA 1
RANGE $403E-$4042 DB_DATA 4
RANGE $4042-$4043 DB_DATA 1
RANGE $4043-$4047 DB_DATA 4
RANGE $4047-$4048 DB_DATA 1
RANGE $4048-$404C DB_DATA 4
RANGE $404C-$404D DB_DATA 1
RANGE $404D-$4051 DB_DATA 4
RANGE $4051-$4052 DB_DATA 1
RANGE $4052-$4056 DB_DATA 4
RANGE $4056-$4057 DB_DATA 1
RANGE $4057-$405B DB_DATA 4
RANGE $405B-$405C DB_DATA 1
RANGE $405C-$4060 DB_DATA 4
RANGE $4060-$4061 DB_DATA 1
RANGE $4061-$4065 DB_DATA 4
RANGE $4065-$4066 DB_DATA 1
RANGE $4066-$406A DB_DATA 4
RANGE $406A-$406B DB_DATA 1
RANGE $406B-$406F DB_DATA 4
RANGE $406F-$4070 DB_DATA 1
RANGE $4070-$4074 DB_DATA 4
RANGE $4074-$4075 DB_DATA 1
RANGE $4075-$4077 DW_DATA 1
RANGE $4077-$4078 DB_DATA 1
RANGE $4078-$407C DB_DATA 4
RANGE $407C-$407D DB_DATA 1
RANGE $407D-$4081 DB_DATA 4
RANGE $4081-$4082 DB_DATA 1
RANGE $4082-$4086 DB_DATA 4
RANGE $4086-$4087 DB_DATA 1
RANGE $4087-$408B DB_DATA 4
RANGE $408B-$408C DB_DATA 1
RANGE $408C-$4090 DB_DATA 4
RANGE $4090-$4091 DB_DATA 1
RANGE $4091-$4095 DB_DATA 4
RANGE $4095-$4096 DB_DATA 1
RANGE $4096-$409A DB_DATA 4
RANGE $409A-$409B DB_DATA 1
RANGE $409B-$409F DB_DATA 4
RANGE $409F-$40A0 DB_DATA 1
RANGE $40A0-$40A4 DB_DATA 4
RANGE $40A4-$40A5 DB_DATA 1
RANGE $40A5-$40A9 DB_DATA 4
RANGE $40A9-$40AA DB_DATA 1
RANGE $40AA-$40AE DB_DATA 4
RANGE $40AE-$40AF DB_DATA 1
RANGE $40AF-$40B3 DB_DATA 4
RANGE $40B3-$40B4 DB_DATA 1
RANGE $40B4-$40B6 DW_DATA 1
RANGE $40B6-$40B7 DB_DATA 1
RANGE $40B7-$40BB DB_DATA 4
RANGE $40BB-$40BC DB_DATA 1
RANGE $40BC-$40C0 DB_DATA 4
RANGE $40C0-$40C1 DB_DATA 1
RANGE $40C1-$40C5 DB_DATA 4
RANGE $40C5-$40C6 DB_DATA 1
RANGE $40C6-$40CA DB_DATA 4
RANGE $40CA-$40CB DB_DATA 1
RANGE $40CB-$40CF DB_DATA 4
RANGE $40CF-$40D0 DB_DATA 1
RANGE $40D0-$40D4 DB_DATA 4
RANGE $40D4-$40D5 DB_DATA 1
RANGE $40D5-$40D9 DB_DATA 4
RANGE $40D9-$40DA DB_DATA 1
RANGE $40DA-$40DE DB_DATA 4
RANGE $40DE-$40DF DB_DATA 1
RANGE $40DF-$40E3 DB_DATA 4
RANGE $40E3-$40E4 DB_DATA 1
RANGE $40E4-$40E8 DB_DATA 4
RANGE $40E8-$40E9 DB_DATA 1
RANGE $40E9-$40ED DB_DATA 4
RANGE $40ED-$40EE DB_DATA 1
RANGE $40EE-$40F2 DB_DATA 4
RANGE $40F2-$40F3 DB_DATA 1
RANGE $40F3-$40F7 DB_DATA 4
RANGE $40F7-$40F8 DB_DATA 1
RANGE $40F8-$40FA DW_DATA 1
RANGE $40FA-$40FB DB_DATA 1
RANGE $40FB-$40FF DB_DATA 4
RANGE $40FF-$4100 DB_DATA 1
RANGE $4100-$4104 DB_DATA 4
RANGE $4104-$4105 DB_DATA 1
RANGE $4105-$4109 DB_DATA 4
RANGE $4109-$410A DB_DATA 1
RANGE $410A-$410E DB_DATA 4
RANGE $410E-$410F DB_DATA 1
RANGE $410F-$4113 DB_DATA 4
RANGE $4113-$4114 DB_DATA 1
RANGE $4114-$4118 DB_DATA 4
RANGE $4118-$4119 DB_DATA 1
RANGE $4119-$411D DB_DATA 4
RANGE $411D-$411E DB_DATA 1
RANGE $411E-$4122 DB_DATA 4
RANGE $4122-$4123 DB_DATA 1
RANGE $4123-$4125 DW_DATA 1
RANGE $4125-$4126 DB_DATA 1
RANGE $4126-$412A DB_DATA 4
RANGE $412A-$412B DB_DATA 1
RANGE $412B-$412F DB_DATA 4
RANGE $412F-$4130 DB_DATA 1
RANGE $4130-$4134 DB_DATA 4
RANGE $4134-$4135 DB_DATA 1
RANGE $4135-$4139 DB_DATA 4
RANGE $4139-$413A DB_DATA 1
RANGE $413A-$413E DB_DATA 4
RANGE $413E-$413F DB_DATA 1
RANGE $413F-$4143 DB_DATA 4
RANGE $4143-$4144 DB_DATA 1
RANGE $4144-$4148 DB_DATA 4
RANGE $4148-$4149 DB_DATA 1
RANGE $4149-$414D DB_DATA 4
RANGE $414D-$414E DB_DATA 1
RANGE $414E-$4152 DB_DATA 4
RANGE $4152-$4153 DB_DATA 1
RANGE $4153-$4157 DB_DATA 4
RANGE $4157-$4158 DB_DATA 1
RANGE $4158-$415C DB_DATA 4
RANGE $415C-$415D DB_DATA 1
RANGE $415D-$4161 DB_DATA 4
RANGE $4161-$4162 DB_DATA 1
RANGE $4162-$4164 DW_DATA 1
RANGE $4164-$4165 DB_DATA 1
RANGE $4165-$4167 DW_DATA 1
RANGE $4167-$4168 DB_DATA 1
RANGE $4168-$416A DW_DATA 1
RANGE $416A-$416B DB_DATA 1
RANGE $416B-$416D DW_DATA 1
RANGE $416D-$416E DB_DATA 1
RANGE $416E-$4170 DW_DATA 1
RANGE $4170-$4171 DB_DATA 1
RANGE $4171-$4173 DW_DATA 1
RANGE $4173-$4174 DB_DATA 1
RANGE $4174-$4176 DW_DATA 1
RANGE $4176-$4177 DB_DATA 1
RANGE $4177-$417B DB_DATA 4
RANGE $417B-$417C DB_DATA 1
RANGE $417C-$417E DW_DATA 1
RANGE $417E-$417F DB_DATA 1
RANGE $417F-$4183 DB_DATA 4
RANGE $4183-$4184 DB_DATA 1
RANGE $4184-$4188 DB_DATA 4
RANGE $4188-$4189 DB_DATA 1
RANGE $4189-$418D DB_DATA 4
RANGE $418D-$418E DB_DATA 1
RANGE $418E-$4192 DB_DATA 4
RANGE $4192-$4193 DB_DATA 1
RANGE $4193-$4197 DB_DATA 4
RANGE $4197-$4198 DB_DATA 1
RANGE $4198-$419A DW_DATA 1
RANGE $419A-$419B DB_DATA 1
RANGE $419B-$419F DB_DATA 4
RANGE $419F-$41A0 DB_DATA 1
RANGE $41A0-$41A4 DB_DATA 4
RANGE $41A4-$41A5 DB_DATA 1
RANGE $41A5-$41A7 DW_DATA 1
RANGE $41A7-$41A8 DB_DATA 1
RANGE $41A8-$41AC DB_DATA 4
RANGE $41AC-$41AD DB_DATA 1
RANGE $41AD-$41B1 DB_DATA 4
RANGE $41B1-$41B2 DB_DATA 1
RANGE $41B2-$41B6 DB_DATA 4
RANGE $41B6-$41B7 DB_DATA 1
RANGE $41B7-$41BB DB_DATA 4
RANGE $41BB-$41BC DB_DATA 1
RANGE $41BC-$41C0 DB_DATA 4
RANGE $41C0-$41C1 DB_DATA 1
RANGE $41C1-$41C5 DB_DATA 4
RANGE $41C5-$41C6 DB_DATA 1
RANGE $41C6-$41C8 DW_DATA 1
RANGE $41C8-$41C9 DB_DATA 1
RANGE $41C9-$41CD DB_DATA 4
RANGE $41CD-$41CE DB_DATA 1
RANGE $41CE-$41D2 DB_DATA 4
RANGE $41D2-$41D3 DB_DATA 1
RANGE $41D3-$41D7 DB_DATA 4
RANGE $41D7-$41D8 DB_DATA 1
RANGE $41D8-$41DC DB_DATA 4
RANGE $41DC-$41DD DB_DATA 1
RANGE $41DD-$41E1 DB_DATA 4
RANGE $41E1-$41E2 DB_DATA 1
RANGE $41E2-$41E6 DB_DATA 4
RANGE $41E6-$41E7 DB_DATA 1
RANGE $41E7-$41EB DB_DATA 4
RANGE $41EB-$41EC DB_DATA 1
RANGE $41EC-$41F0 DB_DATA 4
RANGE $41F0-$41F1 DB_DATA 1
RANGE $41F1-$41F5 DB_DATA 4
RANGE $41F5-$41F6 DB_DATA 1
RANGE $41F6-$41FA DB_DATA 4
RANGE $41FA-$41FB DB_DATA 1
RANGE $41FB-$41FF DB_DATA 4
RANGE $41FF-$4200 DB_DATA 1
RANGE $4200-$4202 DW_DATA 1
RANGE $4202-$4203 DB_DATA 1
RANGE $4203-$4207 DB_DATA 4
RANGE $4207-$4208 DB_DATA 1
RANGE $4208-$420C DB_DATA 4
RANGE $420C-$420D DB_DATA 1
RANGE $420D-$4211 DB_DATA 4
RANGE $4211-$4212 DB_DATA 1
RANGE $4212-$4216 DB_DATA 4
RANGE $4216-$4217 DB_DATA 1
RANGE $4217-$4219 DW_DATA 1
RANGE $4219-$421A DB_DATA 1
RANGE $421A-$421E DB_DATA 4
RANGE $421E-$421F DB_DATA 1
RANGE $421F-$4223 DB_DATA 4
RANGE $4223-$4224 DB_DATA 1
RANGE $4224-$4228 DB_DATA 4
RANGE $4228-$4229 DB_DATA 1
RANGE $4229-$422D DB_DATA 4
RANGE $422D-$422E DB_DATA 1
RANGE $422E-$4232 DB_DATA 4
RANGE $4232-$4233 DB_DATA 1
RANGE $4233-$4237 DB_DATA 4
RANGE $4237-$4238 DB_DATA 1
RANGE $4238-$423C DB_DATA 4
RANGE $423C-$423D DB_DATA 1
RANGE $423D-$4241 DB_DATA 4
RANGE $4241-$4242 DB_DATA 1
RANGE $4242-$4246 DB_DATA 4
RANGE $4246-$4247 DB_DATA 1
RANGE $4247-$424B DB_DATA 4
RANGE $424B-$424C DB_DATA 1
RANGE $424C-$4250 DB_DATA 4
RANGE $4250-$4251 DB_DATA 1
RANGE $4251-$4255 DB_DATA 4
RANGE $4255-$4256 DB_DATA 1
RANGE $4256-$425A DB_DATA 4
RANGE $425A-$425B DB_DATA 1
RANGE $425B-$425F DB_DATA 4
RANGE $425F-$4260 DB_DATA 1
RANGE $4260-$4264 DB_DATA 4
RANGE $4264-$4265 DB_DATA 1
RANGE $4265-$4269 DB_DATA 4
RANGE $4269-$426A DB_DATA 1
RANGE $426A-$426C DW_DATA 1
RANGE $426C-$426D DB_DATA 1
RANGE $426D-$4271 DB_DATA 4
RANGE $4271-$4272 DB_DATA 1
RANGE $4272-$4276 DB_DATA 4
RANGE $4276-$4277 DB_DATA 1
RANGE $4277-$427B DB_DATA 4
RANGE $427B-$427C DB_DATA 1
RANGE $427C-$4280 DB_DATA 4
RANGE $4280-$4281 DB_DATA 1
RANGE $4281-$4285 DB_DATA 4
RANGE $4285-$4286 DB_DATA 1
RANGE $4286-$428A DB_DATA 4
RANGE $428A-$428B DB_DATA 1
RANGE $428B-$428F DB_DATA 4
RANGE $428F-$4290 DB_DATA 1
RANGE $4290-$4294 DB_DATA 4
RANGE $4294-$4295 DB_DATA 1
RANGE $4295-$4299 DB_DATA 4
RANGE $4299-$429A DB_DATA 1
RANGE $429A-$429E DB_DATA 4
RANGE $429E-$429F DB_DATA 1
RANGE $429F-$42A1 DW_DATA 1
RANGE $42A1-$42A2 DB_DATA 1
RANGE $42A2-$42A6 DB_DATA 4
RANGE $42A6-$42A7 DB_DATA 1
RANGE $42A7-$42AB DB_DATA 4
RANGE $42AB-$42AC DB_DATA 1
RANGE $42AC-$42B0 DB_DATA 4
RANGE $42B0-$42B1 DB_DATA 1
RANGE $42B1-$42B5 DB_DATA 4
RANGE $42B5-$42B6 DB_DATA 1
RANGE $42B6-$42BA DB_DATA 4
RANGE $42BA-$42BB DB_DATA 1
RANGE $42BB-$42BF DB_DATA 4
RANGE $42BF-$42C0 DB_DATA 1
RANGE $42C0-$42C4 DB_DATA 4
RANGE $42C4-$42C5 DB_DATA 1
RANGE $42C5-$42C9 DB_DATA 4
RANGE $42C9-$42CA DB_DATA 1
RANGE $42CA-$42CE DB_DATA 4
RANGE $42CE-$42CF DB_DATA 1
RANGE $42CF-$42D3 DB_DATA 4
RANGE $42D3-$42D4 DB_DATA 1
RANGE $42D4-$42D8 DB_DATA 4
RANGE $42D8-$42D9 DB_DATA 1
RANGE $42D9-$42DD DB_DATA 4
RANGE $42DD-$42DE DB_DATA 1
RANGE $42DE-$42E2 DB_DATA 4
RANGE $42E2-$42E3 DB_DATA 1
RANGE $42E3-$42E5 DW_DATA 1
RANGE $42E5-$42E6 DB_DATA 1
RANGE $42E6-$42EA DB_DATA 4
RANGE $42EA-$42EB DB_DATA 1
RANGE $42EB-$42EF DB_DATA 4
RANGE $42EF-$42F0 DB_DATA 1
RANGE $42F0-$42F4 DB_DATA 4
RANGE $42F4-$42F5 DB_DATA 1
RANGE $42F5-$42F9 DB_DATA 4
RANGE $42F9-$42FA DB_DATA 1
RANGE $42FA-$42FE DB_DATA 4
RANGE $42FE-$42FF DB_DATA 1
RANGE $42FF-$4303 DB_DATA 4
RANGE $4303-$4304 DB_DATA 1
RANGE $4304-$4308 DB_DATA 4
RANGE $4308-$4309 DB_DATA 1
RANGE $4309-$430D DB_DATA 4
RANGE $430D-$430E DB_DATA 1
RANGE $430E-$4312 DB_DATA 4
RANGE $4312-$4313 DB_DATA 1
RANGE $4313-$4317 DB_DATA 4
RANGE $4317-$4318 DB_DATA 1
RANGE $4318-$431C DB_DATA 4
RANGE $431C-$431D DB_DATA 1
RANGE $431D-$4321 DB_DATA 4
RANGE $4321-$4322 DB_DATA 1
RANGE $4322-$4324 DW_DATA 1
RANGE $4324-$4325 DB_DATA 1
RANGE $4325-$4329 DB_DATA 4
RANGE $4329-$432A DB_DATA 1
RANGE $432A-$432E DB_DATA 4
RANGE $432E-$432F DB_DATA 1
RANGE $432F-$4333 DB_DATA 4
RANGE $4333-$4334 DB_DATA 1
RANGE $4334-$4338 DB_DATA 4
RANGE $4338-$4339 DB_DATA 1
RANGE $4339-$433D DB_DATA 4
RANGE $433D-$433E DB_DATA 1
RANGE $433E-$4342 DB_DATA 4
RANGE $4342-$4343 DB_DATA 1
RANGE $4343-$4347 DB_DATA 4
RANGE $4347-$4348 DB_DATA 1
RANGE $4348-$434C DB_DATA 4
RANGE $434C-$434D DB_DATA 1
RANGE $434D-$4351 DB_DATA 4
RANGE $4351-$4352 DB_DATA 1
RANGE $4352-$4356 DB_DATA 4
RANGE $4356-$4357 DB_DATA 1
RANGE $4357-$435B DB_DATA 4
RANGE $435B-$435C DB_DATA 1
RANGE $435C-$4360 DB_DATA 4
RANGE $4360-$4361 DB_DATA 1
RANGE $4361-$4365 DB_DATA 4
RANGE $4365-$4366 DB_DATA 1
RANGE $4366-$4368 DW_DATA 1
RANGE $4368-$4369 DB_DATA 1
RANGE $4369-$436D DB_DATA 4
RANGE $436D-$436E DB_DATA 1
RANGE $436E-$4370 DW_DATA 1
RANGE $4370-$4371 DB_DATA 1
RANGE $4371-$4373 DW_DATA 1
RANGE $4373-$4374 DB_DATA 1
RANGE $4374-$4376 DW_DATA 1
RANGE $4376-$4377 DB_DATA 1
RANGE $4377-$437B DB_DATA 4
RANGE $437B-$437C DB_DATA 1
RANGE $437C-$437E DW_DATA 1
RANGE $437E-$437F DB_DATA 1
RANGE $437F-$4381 DW_DATA 1
RANGE $4381-$4382 DB_DATA 1
RANGE $4382-$4384 DW_DATA 1
RANGE $4384-$4385 DB_DATA 1
RANGE $4385-$4387 DW_DATA 1
RANGE $4387-$4388 DB_DATA 1
RANGE $4388-$438A DW_DATA 1
RANGE $438A-$438B DB_DATA 1
RANGE $438B-$438D DW_DATA 1
RANGE $438D-$438E DB_DATA 1
RANGE $438E-$4390 DW_DATA 1
RANGE $4390-$4391 DB_DATA 1
RANGE $4391-$4393 DW_DATA 1
RANGE $4393-$4394 DB_DATA 1
RANGE $4394-$4396 DW_DATA 1
RANGE $4396-$4398 DW_DATA 1
RANGE $4398-$439A DW_DATA 1
RANGE $439A-$439C DW_DATA 1
RANGE $439C-$439E DW_DATA 1
RANGE $439E-$43A0 DW_DATA 1
RANGE $43A0-$43A2 DW_DATA 1
RANGE $43A2-$43A4 DW_DATA 1
RANGE $43A4-$43A6 DW_DATA 1
RANGE $43A6-$43A8 DW_DATA 1
RANGE $43A8-$43AA DW_DATA 1
RANGE $43AA-$43AC DW_DATA 1
RANGE $43AC-$43AE DW_DATA 1
RANGE $43AE-$43B0 DW_DATA 1
RANGE $43B0-$43B2 DW_DATA 1
RANGE $43B2-$43B4 DW_DATA 1
RANGE $43B4-$43B6 DW_DATA 1
RANGE $43B6-$43B8 DW_DATA 1
RANGE $43B8-$43BA DW_DATA 1
RANGE $43BA-$43BC DW_DATA 1
RANGE $43BC-$43BE DW_DATA 1
RANGE $43BE-$43C0 DW_DATA 1
RANGE $43C0-$43C2 DW_DATA 1
RANGE $43C2-$43C4 DW_DATA 1
RANGE $43C4-$43C6 DW_DATA 1
RANGE $43C6-$43C8 DW_DATA 1
RANGE $43C8-$43CA DW_DATA 1
RANGE $43CA-$43CC DW_DATA 1
RANGE $43CC-$43CE DW_DATA 1
RANGE $43CE-$43D0 DW_DATA 1
RANGE $43D0-$43D2 DW_DATA 1
RANGE $43D2-$43D4 DW_DATA 1
RANGE $43D4-$43D6 DW_DATA 1
RANGE $43D6-$43D8 DW_DATA 1
RANGE $43D8-$43DA DW_DATA 1
RANGE $43DA-$43DC DW_DATA 1
RANGE $43DC-$43DE DW_DATA 1
RANGE $43DE-$43E0 DW_DATA 1
RANGE $43E0-$45F1 CODE
RANGE $45F1-$464C DB_DATA 91
RANGE $464C-$46A7 DB_DATA 91
RANGE $46A7-$4702 DB_DATA 91
RANGE $4702-$475D DB_DATA 91
RANGE $475D-$47B8 DB_DATA 91
RANGE $47B8-$4958 CODE
RANGE $4958-$495F CHAR_DATA 7
RANGE $495F-$4968 CHAR_DATA 9
RANGE $4968-$4973 CHAR_DATA 11
RANGE $4973-$4977 CHAR_DATA 4
RANGE $4977-$4979 DB_DATA 2
RANGE $4979-$4980 CHAR_DATA 7
RANGE $4980-$4982 DB_DATA 2
RANGE $4982-$498A CHAR_DATA 8
RANGE $498A-$498C DB_DATA 2
RANGE $498C-$4994 CHAR_DATA 8
RANGE $4994-$4996 DB_DATA 2
RANGE $4996-$499B CHAR_DATA 5
RANGE $499B-$499D DB_DATA 2
RANGE $499D-$49A2 CHAR_DATA 5
RANGE $49A2-$49DE DB_DATA 60
RANGE $49DE-$4A1A DB_DATA 60
RANGE $4A1A-$4A56 DB_DATA 60
RANGE $4A56-$4A92 DB_DATA 60
RANGE $4A92-$4ACE DB_DATA 60
RANGE $4ACE-$4B0A DB_DATA 60
RANGE $4B0A-$4B46 DB_DATA 60
RANGE $4B46-$4B82 DB_DATA 60
RANGE $4B82-$4BBE DB_DATA 60
RANGE $4BBE-$4BFA DB_DATA 60
RANGE $4BFA-$4C36 DB_DATA 60
RANGE $4C36-$4C72 DB_DATA 60
RANGE $4C72-$4CAE DB_DATA 60
RANGE $4CAE-$4CEA DB_DATA 60
RANGE $4CEA-$4D26 DB_DATA 60
RANGE $4D26-$4D62 DB_DATA 60
RANGE $4D62-$4D9E DB_DATA 60
RANGE $4D9E-$4DDA DB_DATA 60
RANGE $4DDA-$4E16 DB_DATA 60
RANGE $4E16-$4E52 DB_DATA 60
RANGE $4E52-$4E8E DB_DATA 60
RANGE $4E8E-$4ECA DB_DATA 60
RANGE $4ECA-$4F06 DB_DATA 60
RANGE $4F06-$4F42 DB_DATA 60
RANGE $4F42-$4F7E DB_DATA 60
RANGE $4F7E-$4FBA DB_DATA 60
RANGE $4FBA-$4FF6 DB_DATA 60
RANGE $4FF6-$5032 DB_DATA 60
RANGE $5032-$506E DB_DATA 60
RANGE $506E-$50AA DB_DATA 60
RANGE $50AA-$50E6 DB_DATA 60
RANGE $50E6-$5122 DB_DATA 60
RANGE $5122-$530A CODE
RANGE $530A-$5328 DW_DATA 15
RANGE $5328-$532A DB_DATA 2
RANGE $532A-$532C DB_DATA 2
RANGE $532C-$532E DB_DATA 2
RANGE $532E-$5330 DB_DATA 2
RANGE $5330-$5332 DB_DATA 2
RANGE $5332-$5334 DB_DATA 2
RANGE $5334-$5336 DB_DATA 2
RANGE $5336-$5338 DB_DATA 2
RANGE $5338-$533A DB_DATA 2
RANGE $533A-$533C DB_DATA 2
RANGE $533C-$533E DB_DATA 2
RANGE $533E-$5340 DB_DATA 2
RANGE $5340-$5342 DB_DATA 2
RANGE $5342-$5344 DB_DATA 2
RANGE $5344-$5346 DB_DATA 2
RANGE $5346-$5348 DB_DATA 2
RANGE $5348-$534A DB_DATA 2
RANGE $534A-$534C DB_DATA 2
RANGE $534C-$534E DB_DATA 2
RANGE $534E-$5350 DB_DATA 2
RANGE $5350-$5352 DB_DATA 2
RANGE $5352-$5354 DB_DATA 2
RANGE $5354-$5356 DB_DATA 2
RANGE $5356-$5358 DB_DATA 2
RANGE $5358-$535A DB_DATA 2
RANGE $535A-$535C DB_DATA 2
RANGE $535C-$535E DB_DATA 2
RANGE $535E-$5360 DB_DATA 2
RANGE $5360-$5362 DB_DATA 2
RANGE $5362-$5364 DB_DATA 2
RANGE $5364-$5366 DB_DATA 2
RANGE $5366-$5368 DB_DATA 2
RANGE $5368-$536A DB_DATA 2
RANGE $536A-$536C DB_DATA 2
RANGE $536C-$536E DB_DATA 2
RANGE $536E-$5370 DB_DATA 2
RANGE $5370-$5372 DB_DATA 2
RANGE $5372-$5374 DB_DATA 2
RANGE $5374-$5376 DB_DATA 2
RANGE $5376-$5378 DB_DATA 2
RANGE $5378-$537A DB_DATA 2
RANGE $537A-$537C DB_DATA 2
RANGE $537C-$537E DB_DATA 2
RANGE $537E-$5380 DB_DATA 2
RANGE $5380-$5382 DB_DATA 2
RANGE $5382-$5384 DB_DATA 2
RANGE $5384-$5386 DB_DATA 2
RANGE $5386-$5388 DB_DATA 2
RANGE $5388-$538A DB_DATA 2
RANGE $538A-$538C DB_DATA 2
RANGE $538C-$538E DB_DATA 2
RANGE $538E-$5390 DB_DATA 2
RANGE $5390-$5392 DB_DATA 2
RANGE $5392-$5394 DB_DATA 2
RANGE $5394-$5396 DB_DATA 2
RANGE $5396-$5398 DB_DATA 2
RANGE $5398-$539A DB_DATA 2
RANGE $539A-$539C DB_DATA 2
RANGE $539C-$539E DB_DATA 2
RANGE $539E-$53A0 DB_DATA 2
RANGE $53A0-$53A2 DB_DATA 2
RANGE $53A2-$53A4 DB_DATA 2
RANGE $53A4-$53A6 DB_DATA 2
RANGE $53A6-$53A8 DB_DATA 2
RANGE $53A8-$53AA DB_DATA 2
RANGE $53AA-$53AC DB_DATA 2
RANGE $53AC-$53AE DB_DATA 2
RANGE $53AE-$53B0 DB_DATA 2
RANGE $53B0-$53B2 DB_DATA 2
RANGE $53B2-$53B4 DB_DATA 2
RANGE $53B4-$53B6 DB_DATA 2
RANGE $53B6-$53B8 DB_DATA 2
RANGE $53B8-$53BA DB_DATA 2
RANGE $53BA-$53BC DB_DATA 2
RANGE $53BC-$53BE DB_DATA 2
RANGE $53BE-$53C0 DB_DATA 2
RANGE $53C0-$53C2 DB_DATA 2
RANGE $53C2-$53C4 DB_DATA 2
RANGE $53C4-$53C6 DB_DATA 2
RANGE $53C6-$53C8 DB_DATA 2
RANGE $53C8-$53CA DB_DATA 2
RANGE $53CA-$53CC DB_DATA 2
RANGE $53CC-$53CE DB_DATA 2
RANGE $53CE-$53D0 DB_DATA 2
RANGE $53D0-$53D2 DB_DATA 2
RANGE $53D2-$53D4 DB_DATA 2
RANGE $53D4-$53D6 DB_DATA 2
RANGE $53D6-$53D8 DB_DATA 2
RANGE $53D8-$53DA DB_DATA 2
RANGE $53DA-$53DC DB_DATA 2
RANGE $53DC-$53DE DB_DATA 2
RANGE $53DE-$53E0 DB_DATA 2
RANGE $53E0-$53E2 DB_DATA 2
RANGE $53E2-$53E4 DB_DATA 2
RANGE $53E4-$53E6 DB_DATA 2
RANGE $53E6-$53E8 DB_DATA 2
RANGE $53E8-$53EA DB_DATA 2
RANGE $53EA-$53EC DB_DATA 2
RANGE $53EC-$53EE DB_DATA 2
RANGE $53EE-$53F0 DB_DATA 2
RANGE $53F0-$53F2 DB_DATA 2
RANGE $53F2-$53F4 DB_DATA 2
RANGE $53F4-$53F6 DB_DATA 2
RANGE $53F6-$53F8 DB_DATA 2
RANGE $53F8-$53FA DB_DATA 2
RANGE $53FA-$53FC DB_DATA 2
RANGE $53FC-$53FE DB_DATA 2
RANGE $53FE-$5400 DB_DATA 2
RANGE $5400-$5402 DB_DATA 2
RANGE $5402-$5404 DB_DATA 2
RANGE $5404-$5406 DB_DATA 2
RANGE $5406-$5408 DB_DATA 2
RANGE $5408-$540A DB_DATA 2
RANGE $540A-$540C DB_DATA 2
RANGE $540C-$540E DB_DATA 2
RANGE $540E-$5410 DB_DATA 2
RANGE $5410-$5412 DB_DATA 2
RANGE $5412-$5414 DB_DATA 2
RANGE $5414-$5416 DB_DATA 2
RANGE $5416-$5418 DB_DATA 2
RANGE $5418-$541A DB_DATA 2
RANGE $541A-$541C DB_DATA 2
RANGE $541C-$541E DB_DATA 2
RANGE $541E-$5420 DB_DATA 2
RANGE $5420-$5422 DB_DATA 2
RANGE $5422-$5424 DB_DATA 2
RANGE $5424-$5426 DB_DATA 2
RANGE $5426-$5428 DB_DATA 2
RANGE $5428-$542A DB_DATA 2
RANGE $542A-$542C DB_DATA 2
RANGE $542C-$542E DB_DATA 2
RANGE $542E-$5430 DB_DATA 2
RANGE $5430-$5432 DB_DATA 2
RANGE $5432-$5434 DB_DATA 2
RANGE $5434-$5436 DB_DATA 2
RANGE $5436-$5438 DB_DATA 2
RANGE $5438-$543A DB_DATA 2
RANGE $543A-$543C DB_DATA 2
RANGE $543C-$543E DB_DATA 2
RANGE $543E-$5440 DB_DATA 2
RANGE $5440-$5442 DB_DATA 2
RANGE $5442-$5444 DB_DATA 2
RANGE $5444-$5446 DB_DATA 2
RANGE $5446-$5448 DB_DATA 2
RANGE $5448-$544A DB_DATA 2
RANGE $544A-$544C DB_DATA 2
RANGE $544C-$544E DB_DATA 2
RANGE $544E-$5450 DB_DATA 2
RANGE $5450-$5452 DB_DATA 2
RANGE $5452-$5454 DB_DATA 2
RANGE $5454-$5456 DB_DATA 2
RANGE $5456-$5458 DB_DATA 2
RANGE $5458-$545A DB_DATA 2
RANGE $545A-$545C DB_DATA 2
RANGE $545C-$545E DB_DATA 2
RANGE $545E-$5460 DB_DATA 2
RANGE $5460-$5462 DB_DATA 2
RANGE $5462-$5464 DB_DATA 2
RANGE $5464-$5466 DB_DATA 2
RANGE $5466-$5468 DB_DATA 2
RANGE $5468-$546A DB_DATA 2
RANGE $546A-$546C DB_DATA 2
RANGE $546C-$546E DB_DATA 2
RANGE $546E-$5470 DB_DATA 2
RANGE $5470-$5472 DB_DATA 2
RANGE $5472-$5474 DB_DATA 2
RANGE $5474-$5476 DB_DATA 2
RANGE $5476-$5478 DB_DATA 2
RANGE $5478-$547A DB_DATA 2
RANGE $547A-$547C DB_DATA 2
RANGE $547C-$547E DB_DATA 2
RANGE $547E-$5480 DB_DATA 2
RANGE $5480-$5482 DB_DATA 2
RANGE $5482-$5484 DB_DATA 2
RANGE $5484-$5486 DB_DATA 2
RANGE $5486-$5488 DB_DATA 2
RANGE $5488-$548A DB_DATA 2
RANGE $548A-$548C DB_DATA 2
RANGE $548C-$548E DB_DATA 2
RANGE $548E-$5490 DB_DATA 2
RANGE $5490-$5492 DB_DATA 2
RANGE $5492-$5494 DB_DATA 2
RANGE $5494-$5496 DB_DATA 2
RANGE $5496-$5498 DB_DATA 2
RANGE $5498-$549A DB_DATA 2
RANGE $549A-$549C DB_DATA 2
RANGE $549C-$549E DB_DATA 2
RANGE $549E-$54A0 DB_DATA 2
RANGE $54A0-$54A2 DB_DATA 2
RANGE $54A2-$54A4 DB_DATA 2
RANGE $54A4-$54A6 DB_DATA 2
RANGE $54A6-$54A8 DB_DATA 2
RANGE $54A8-$54AA DB_DATA 2
RANGE $54AA-$54AC DB_DATA 2
RANGE $54AC-$54AE DB_DATA 2
RANGE $54AE-$54B0 DB_DATA 2
RANGE $54B0-$54B2 DB_DATA 2
RANGE $54B2-$54B4 DB_DATA 2
RANGE $54B4-$54B6 DB_DATA 2
RANGE $54B6-$54B8 DB_DATA 2
RANGE $54B8-$54BA DB_DATA 2
RANGE $54BA-$54BC DB_DATA 2
RANGE $54BC-$54BE DB_DATA 2
RANGE $54BE-$54C0 DB_DATA 2
RANGE $54C0-$54C2 DB_DATA 2
RANGE $54C2-$54C4 DB_DATA 2
RANGE $54C4-$54C6 DB_DATA 2
RANGE $54C6-$54C8 DB_DATA 2
RANGE $54C8-$54CA DB_DATA 2
RANGE $54CA-$54CC DB_DATA 2
RANGE $54CC-$54CE DB_DATA 2
RANGE $54CE-$54D0 DB_DATA 2
RANGE $54D0-$54D2 DB_DATA 2
RANGE $54D2-$54D4 DB_DATA 2
RANGE $54D4-$54D6 DB_DATA 2
RANGE $54D6-$54D8 DB_DATA 2
RANGE $54D8-$54DA DB_DATA 2
RANGE $54DA-$54DC DB_DATA 2
RANGE $54DC-$54DE DB_DATA 2
RANGE $54DE-$54E0 DB_DATA 2
RANGE $54E0-$54E2 DB_DATA 2
RANGE $54E2-$54E4 DB_DATA 2
RANGE $54E4-$54E6 DB_DATA 2
RANGE $54E6-$54E8 DB_DATA 2
RANGE $54E8-$54EA DB_DATA 2
RANGE $54EA-$54EC DB_DATA 2
RANGE $54EC-$54EE DB_DATA 2
RANGE $54EE-$54F0 DB_DATA 2
RANGE $54F0-$54F2 DB_DATA 2
RANGE $54F2-$54F4 DB_DATA 2
RANGE $54F4-$54F6 DB_DATA 2
RANGE $54F6-$54F8 DB_DATA 2
RANGE $54F8-$54FA DB_DATA 2
RANGE $54FA-$54FC DB_DATA 2
RANGE $54FC-$54FE DB_DATA 2
RANGE $54FE-$5500 DB_DATA 2
RANGE $5500-$5502 DB_DATA 2
RANGE $5502-$5504 DB_DATA 2
RANGE $5504-$5506 DB_DATA 2
RANGE $5506-$5508 DB_DATA 2
RANGE $5508-$550A DB_DATA 2
RANGE $550A-$550C DB_DATA 2
RANGE $550C-$550E DB_DATA 2
RANGE $550E-$5510 DB_DATA 2
RANGE $5510-$5512 DB_DATA 2
RANGE $5512-$5514 DB_DATA 2
RANGE $5514-$5516 DB_DATA 2
RANGE $5516-$5518 DB_DATA 2
RANGE $5518-$551A DB_DATA 2
RANGE $551A-$551C DB_DATA 2
RANGE $551C-$551E DB_DATA 2
RANGE $551E-$5520 DB_DATA 2
RANGE $5520-$5522 DB_DATA 2
RANGE $5522-$5524 DB_DATA 2
RANGE $5524-$5526 DB_DATA 2
RANGE $5526-$5528 DB_DATA 2
RANGE $5528-$56CE CODE
RANGE $56CE-$56D0 DW_DATA 1
RANGE $56D0-$56D2 DW_DATA 1
RANGE $56D2-$56D4 DW_DATA 1
RANGE $56D4-$56D6 DW_DATA 1
RANGE $56D6-$56D8 DW_DATA 1
RANGE $56D8-$56DA DW_DATA 1
RANGE $56DA-$56DC DW_DATA 1
RANGE $56DC-$56DE DW_DATA 1
RANGE $56DE-$56E0 DW_DATA 1
RANGE $56E0-$56E2 DW_DATA 1
RANGE $56E2-$56E4 DW_DATA 1
RANGE $56E4-$56E6 DW_DATA 1
RANGE $56E6-$56E8 DW_DATA 1
RANGE $56E8-$56EA DW_DATA 1
RANGE $56EA-$56EC DW_DATA 1
RANGE $56EC-$56EE DW_DATA 1
RANGE $56EE-$56F0 DW_DATA 1
RANGE $56F0-$56F2 DW_DATA 1
RANGE $56F2-$56F4 DW_DATA 1
RANGE $56F4-$56F6 DW_DATA 1
RANGE $56F6-$56F8 DW_DATA 1
RANGE $56F8-$56FA DW_DATA 1
RANGE $56FA-$56FC DW_DATA 1
RANGE $56FC-$56FE DW_DATA 1
RANGE $56FE-$5700 DW_DATA 1
RANGE $5700-$5702 DW_DATA 1
RANGE $5702-$5704 DW_DATA 1
RANGE $5704-$5706 DW_DATA 1
RANGE $5706-$5708 DW_DATA 1
RANGE $5708-$570A DW_DATA 1
RANGE $570A-$570C DW_DATA 1
RANGE $570C-$570E DW_DATA 1
RANGE $570E-$5710 DW_DATA 1
RANGE $5710-$5712 DW_DATA 1
RANGE $5712-$5714 DW_DATA 1
RANGE $5714-$5716 DW_DATA 1
RANGE $5716-$5718 DW_DATA 1
RANGE $5718-$571A DW_DATA 1
RANGE $571A-$571C DW_DATA 1
RANGE $571C-$571E DW_DATA 1
RANGE $571E-$5720 DW_DATA 1
RANGE $5720-$5722 DW_DATA 1
RANGE $5722-$5724 DW_DATA 1
RANGE $5724-$5726 DW_DATA 1
RANGE $5726-$5728 DW_DATA 1
RANGE $5728-$572A DW_DATA 1
RANGE $572A-$572C DW_DATA 1
RANGE $572C-$572E DW_DATA 1
RANGE $572E-$5730 DW_DATA 1
RANGE $5730-$5732 DW_DATA 1
RANGE $5732-$5734 DW_DATA 1
RANGE $5734-$5736 DW_DATA 1
RANGE $5736-$5738 DW_DATA 1
RANGE $5738-$573A DW_DATA 1
RANGE $573A-$573C DW_DATA 1
RANGE $573C-$573E DW_DATA 1
RANGE $573E-$5740 DW_DATA 1
RANGE $5740-$5742 DW_DATA 1
RANGE $5742-$5744 DW_DATA 1
RANGE $5744-$5746 DW_DATA 1
RANGE $5746-$5748 DW_DATA 1
RANGE $5748-$574A DW_DATA 1
RANGE $574A-$574C DW_DATA 1
RANGE $574C-$574E DW_DATA 1
RANGE $574E-$5750 DW_DATA 1
RANGE $5750-$5752 DW_DATA 1
RANGE $5752-$5754 DW_DATA 1
RANGE $5754-$5757 DB_DATA 3
RANGE $5757-$575A DB_DATA 3
RANGE $575A-$575D DB_DATA 3
RANGE $575D-$5760 DB_DATA 3
RANGE $5760-$5763 DB_DATA 3
RANGE $5763-$5766 DB_DATA 3
RANGE $5766-$5769 DB_DATA 3
RANGE $5769-$576C DB_DATA 3
RANGE $576C-$5778 DB_DATA 12
RANGE $5778-$5781 DB_DATA 9
RANGE $5781-$5784 DB_DATA 3
RANGE $5784-$5787 DB_DATA 3
RANGE $5787-$578A DB_DATA 3
RANGE $578A-$5795 DB_DATA 11
RANGE $5795-$579D DB_DATA 8
RANGE $579D-$57A7 DB_DATA 10
RANGE $57A7-$57AA DB_DATA 3
RANGE $57AA-$57AD DB_DATA 3
RANGE $57AD-$57B0 DB_DATA 3
RANGE $57B0-$57B3 DB_DATA 3
RANGE $57B3-$57BD DB_DATA 10
RANGE $57BD-$57C5 DB_DATA 8
RANGE $57C5-$57D0 DB_DATA 11
RANGE $57D0-$57D3 DB_DATA 3
RANGE $57D3-$57D6 DB_DATA 3
RANGE $57D6-$57D9 DB_DATA 3
RANGE $57D9-$57DC DB_DATA 3
RANGE $57DC-$57DF DB_DATA 3
RANGE $57DF-$57E2 DB_DATA 3
RANGE $57E2-$57E5 DB_DATA 3
RANGE $57E5-$57E8 DB_DATA 3
RANGE $57E8-$57F4 DB_DATA 12
RANGE $57F4-$57FE DB_DATA 10
RANGE $57FE-$5801 DB_DATA 3
RANGE $5801-$5804 DB_DATA 3
RANGE $5804-$5807 DB_DATA 3
RANGE $5807-$580A DB_DATA 3
RANGE $580A-$5816 DB_DATA 12
RANGE $5816-$581E DB_DATA 8
RANGE $581E-$5821 DB_DATA 3
RANGE $5821-$582A DB_DATA 9
RANGE $582A-$5835 DB_DATA 11
RANGE $5835-$583F DB_DATA 10
RANGE $583F-$5849 DB_DATA 10
RANGE $5849-$5853 DB_DATA 10
RANGE $5853-$5856 DB_DATA 3
RANGE $5856-$5859 DB_DATA 3
RANGE $5859-$585C DB_DATA 3
RANGE $585C-$585F DB_DATA 3
RANGE $585F-$5862 DB_DATA 3
RANGE $5862-$5865 DB_DATA 3
RANGE $5865-$5870 DB_DATA 11
RANGE $5870-$587B DB_DATA 11
RANGE $587B-$5885 DB_DATA 10
RANGE $5885-$5888 DB_DATA 3
RANGE $5888-$588B DB_DATA 3
RANGE $588B-$588E DB_DATA 3
RANGE $588E-$5891 DB_DATA 3
RANGE $5891-$5894 DB_DATA 3
RANGE $5894-$5897 DB_DATA 3
RANGE $5897-$589A DB_DATA 3
RANGE $589A-$589D DB_DATA 3
RANGE $589D-$58A0 DB_DATA 3
RANGE $58A0-$58A3 DB_DATA 3
RANGE $58A3-$58A6 DB_DATA 3
RANGE $58A6-$58A9 DB_DATA 3
RANGE $58A9-$58AA DB_DATA 1
RANGE $58AA-$59D0 CODE
RANGE $59D0-$59D8 DW_DATA 4
RANGE $59D8-$59E2 DW_DATA 5
RANGE $59E2-$59EC DW_DATA 5
RANGE $59EC-$59F6 DW_DATA 5
RANGE $59F6-$5A00 DW_DATA 5
RANGE $5A00-$5A0A DW_DATA 5
RANGE $5A0A-$5A14 DW_DATA 5
RANGE $5A14-$5A1E DW_DATA 5
RANGE $5A1E-$5A28 DW_DATA 5
RANGE $5A28-$5A32 DW_DATA 5
RANGE $5A32-$5A3C DW_DATA 5
RANGE $5A3C-$5A46 DW_DATA 5
RANGE $5A46-$5A50 DW_DATA 5
RANGE $5A50-$5A5A DW_DATA 5
RANGE $5A5A-$5A64 DW_DATA 5
RANGE $5A64-$5A6E DW_DATA 5
RANGE $5A6E-$5A78 DW_DATA 5
RANGE $5A78-$5A82 DW_DATA 5
RANGE $5A82-$5A8C DW_DATA 5
RANGE $5A8C-$5A96 DW_DATA 5
RANGE $5A96-$5AA0 DW_DATA 5
RANGE $5AA0-$5AAA DW_DATA 5
RANGE $5AAA-$5AB4 DW_DATA 5
RANGE $5AB4-$5ABE DW_DATA 5
RANGE $5ABE-$5AC8 DW_DATA 5
RANGE $5AC8-$5AD2 DW_DATA 5
RANGE $5AD2-$5ADC DW_DATA 5

